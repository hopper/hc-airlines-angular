{"version":3,"sources":["./node_modules/@angular/material/_theming.scss","./styles.scss","./projects/angular-sdk/src/styles/helper.scss","./projects/angular-sdk/src/styles/dialog.scss","./projects/angular-sdk/src/styles/breakpoints.scss","./projects/angular-sdk/src/components/cfar-offer-banner/cfar-offer-banner.component.scss","./projects/angular-sdk/src/components/cfar-offer-banner-large/cfar-offer-banner-large.component.scss","./projects/angular-sdk/src/components/cfar-offer-dialog/cfar-offer-dialog.component.scss","./projects/angular-sdk/src/components/cfar-exercise-flow/cfar-exercise-flow.component.scss","./projects/angular-sdk/src/styles/themes/theme-light-blue.scss","./app/app.component.scss","./app/pages/guides/guides.component.scss","./app/pages/guides/cfar-offer-banner/cfar-offer-banner.component.scss","./app/pages/guides/cfar-offer-banner-large/cfar-offer-banner-large.component.scss","./app/pages/guides/cfar-offer-dialog/cfar-offer-dialog.component.scss","./app/pages/guides/cfar-exercise-flow/cfar-exercise-flow.component.scss","./app/pages/not-found/not-found.component.scss","./app/shared/components/inputs/inputs.component.scss","./app/shared/components/layout/layout.component.scss","./app/shared/components/navbar/navbar.component.scss","./app/shared/components/outputs/outputs.component.scss"],"names":[],"mappings":"AAu0DA;AA+IA;AAobA;AAmwDA;AA6CA;AAx+CE;EACE,gBAvLoB;EAwLpB,eAzLkB;EA0LlB;AC5sFJ;AD+sFE;EAEE;AC7sFJ;ADgtFE;EACE;AC7sFJ;AD23EE;EA/VE;EAYF;EAqVE;ACv3EJ;AD03EE;EApWE;EAYF;EA0VE;ACt3EJ;ADy3EE;EAzWE;EAYF;EA+VE;ACr3EJ;ADw3EE;EA9WE;EAYF;EAoWE;ACp3EJ;AD03EE;EAtXE;EA+XA;AC93EJ;ADi4EE;EAlYE;EA2YA;ACr4EJ;ADw4EE;EA9YE;EAYF;ACjgEF;ADu4EE;EAlZE;EAYF;AC5/DF;ADq4EI;EACE;ACn4EN;ADu4EE;EA1ZE;EAYF;ACp/DF;ADs4EE;EA9ZE;EAYF;EAoZE;ACl4EJ;ADq4EE;EAnaE;EAYF;EAyZE;ACj4EJ;ADo4EE;EAxaE;EAYF;EA8ZE;ACh4EJ;ADm4EE;EA7aE;EAYF;EAmaE;AC/3EJ;AD6qFE;EA7tBE;EAYF;ACv9DF;ADs2FE;;EAGI;EACA;EACA;ACp2FN;ADo+FE;EACE;ACj+FJ;ADiiGE;EACE;AC9hGJ;ADiiGE;EAEI;EACA;AC/hGN;ADmiGE;EACE;AChiGJ;ADmiGE;;EAEE;AChiGJ;AD4pGE;EACE;ACzpGJ;AD6pGE;EACE;AC1pGJ;AD6wGE;EACE;EACA;AC1wGJ;AD4wGI;;EAEE,eA3FsB;AC/qG5B;ADi3GE;EACE;AC92GJ;ADi3GE;EACE;EACA;AC92GJ;ADi3GE;EACE;AC92GJ;AD6jHE;EACE;AC1jHJ;AD6jHE;EACE,eAjL0B;ACz4G9B;AD6jHE;;EAGI;EACA;AC3jHN;AD+jHE;EAEI,eA7LiC;EA8LjC;AC7jHN;AD+oHE;EAlxDE;EAYF;ACp4DF;ADswHE;EAEI;EACA;EACA;ACpwHN;ADwwHE;EAt5DE;EAYF;ACz3DF;ADy7ME;EArlJE,kBAeU;EAdV,gBAeY;EAdZ,kBAeY;EAdZ,iDAeY;EAGd;ACj3DF;ADq7ME;EACE,yBAPuB;AC36M3B;ADw7MI;;EACE,eAvB2B;EAwB3B,kBAtCU;AC94MhB;ADw7MI;;EACE;EACA;ACr7MN;ADu7MM;;EACE;EACA,kBAhDQ;ACp4MhB;ADy7ME;EACE;EAEA;ACv7MJ;AD27MI;;EAtEF;EAEA;ACj3MF;AD67MI;EA9EF;EAEA;AC72MF;ADg8ME;EACE;EACA,sBAnEiB;AC13MrB;ADg8ME;EACE;AC77MJ;ADg8ME;EAGE,iBAhEuB;AC/3M3B;ADk8ME;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB;ACl8MJ;ADo7LI;EACE,sBAJqB;AC76L3B;ADo7LI;EACE;ACl7LN;ADs7LM;;EA1DJ;EAIA;EAGA;AC73LF;ADu7LM;EAjEJ;EAIA;EAGA;ACx3LF;AD07LM;EAzEJ;EAIA;EAGA;ACn3LF;AD47LI;EACE;AC17LN;AD67LI;EAGE,cAzCqB;ACp5L3B;ADg8LI;EACE,0BAjDmB;EAqDnB;ACj8LN;ADu8LE;EAGM;;IAxFN;EC52LA;ED28LM;IA/FN;ECz2LA;EDg9LM;IAvGN;ECt2LA;AACF;ADovLI;EACE;AClvLN;ADqvLI;EACE;EACA,kBAT2B;AC1uLjC;ADuvLM;;EAjCJ;EAEA;ACntLF;AD2vLM;EA1CJ;EAEA;AC/sLF;ADmkMI;EACE;AChkMN;ADmkMI;EACE;EACA,mBAT8B;ACxjMpC;ADqkMM;;EAxCJ;EAEA;AC1hMF;ADykMM;EAjDJ;EAEA;ACthMF;AD4tHE;;EAGE;AC1tHJ;ADyqHE;;EARA;EACA;EACA;EAQE;EACA;ACpqHJ;ADuqHI;;EACE,eAyCqB;AC7sH3B;ADg6HE;EACE;AC75HJ;ADwlIE;EAEI;EACA;EACA;ACtlIN;ADyqIE;;EAGI;EACA;ACvqIN;AD04IE;EACE;ACv4IJ;ADs+IE;EACE;ACn+IJ;ADs+IE;EACE;ACn+IJ;AD0qJE;EACE;ACvqJJ;ADw2JE;EAEI;EACA;EACA;ACt2JN;ADygKE;EACE;ACtgKJ;ADygKE;EAEI;EACA;ACvgKN;AD2gKE;EACE;ACxgKJ;AD2gKE;EACE;ACxgKJ;AD2gKE;EAEI;EACA;ACzgKN;ADiwKE;EACE;AC9vKJ;ADiwKE;EAEI;EACA;EACA;AC/vKN;AD43KE;;;;;;;EAnvHE;EAYF;EA+uHE;ACx3KJ;AD27KE;EACE;EACA,eArBoB;EAsBpB,gBArB2B;EAsB3B,mBAtB2B;ACl6K/B;AD27KE;EACE,eAvB4B;EAwB5B,gBAtBA;EAuBA,mBAvBA;ACj6KJ;AD24HE;EACE,iDAHY;ACr4HhB;AD24HE;EACE,iDAPY;ACj4HhB;AD64HI;EACE;AC14HN;ADkjHE;EARA;EACA;EACA;EAQE;EACA;AC9iHJ;ADijHI;EACE,eAkVuB;ACj4H7B;ADo4HI;EACE;ACl4HN;ADqiHE;EARA;EACA;EACA;EAQE;EACA;ACjiHJ;ADoiHI;EACE,eAuVuB;ACz3H7B;AD43HI;EACE;EACA;EACA;AC13HN;ADg4HI;EACE;AC73HN;ADkhHE;EARA;EACA;EACA;EAQE;EACA;AC9gHJ;ADihHI;EACE,eAqWuB;ACp3H7B;ADu3HI;EACE;ACr3HN;ADqgHE;EARA;EACA;EACA;EAQE;EACA;ACjgHJ;ADogHI;EACE,eA0WuB;AC52H7B;AD+2HI;EACE,iDA1CU;EA2CV;EACA;AC72HN;ADsmDE;EAEI;EACA;ACpmDN;ADipDE;EA9GE;EAYF;AC1iDF;AD05KE;EAEI;EACA;ACx5KN;AD45KE;EACE;EAEE;EACA;EACA;AC15KN;AD8uME;EACE;AC3uMJ;AD8uME;;EAEE;EACA;AC3uMJ;AD8vCE;EACE;EAIA;AC9vCJ;ADqwCI;EACE;ACnwCN;ADuwCE;EACE;ACpwCJ;ADuwCE;EACE;EACA;EACA;EAEA;EACA;ACrwCJ;ADtYI;EA+oDE;ACtwCN;ADxaE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;ACoaJ;ADvjBE;EAEE;EAGA;EACA;EACA;EACA;ACujBJ;ADnjBE;EACE;EACA,aA3B4B;ACilBhC;ADpjBI;EAGE;ACojBN;AD5iBE;EACE;EACA;EACA,aA1CkB;ACylBtB;AD3iBE;EAGE;EACA;EACA;EACA,aApDkB;EAwDlB;EACA;EACA;ACyiBJ;ADtiBE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApE2B;EAqE3B;EACA;EACA;EACA;ACuiBJ;ADriBI;EACE;ACuiBN;ADliBM;EAGE;ACkiBR;AD7hBE;EACE,+BAtFmC;ACsnBvC;ADxhBI;EACE;AC2hBN;ADrhBE;EACE;EACA,aA3GkB;EAgHlB;EAIA;EAGA;EACA;AC+gBJ;AD3gBE;EACE;EAKA;EAKA;ACsgBJ;ADvaE;EAA0C;AC2a5C;AD3aE;EAA0C;AC2a5C;AD1aE;EAAwC;AC6a1C;AD7aE;EAAwC;AC6a1C;AD3aE;EAEE;UAAA;AC4aJ;ADzaE;EAEE;UAAA;AC2aJ;ADtaE;EACE;ACyaJ;ADnaE;EAqBA;EACA;EApBE;EACA;ACuaJ;AD9ZE;EASA;EACA;EARE;ACkaJ;ADszCE;EACE;ACnzCJ;AD2vME;EACE;ACxvMJ;AD2oCA;AA+IA;AAobA;AAmwDA;AA6CA;AEjrII;EACE;AD2rBN;AC5rBI;EACE;AD+rBN;AChsBI;EACE;ADmsBN;ACpsBI;EACE;ADusBN;ACxsBI;EACE;AD2sBN;AC5sBI;EACE;AD+sBN;AChtBI;EACE;ADmtBN;ACptBI;EACE;ADutBN;ACxtBI;EACE;AD2tBN;AC5tBI;EACE;AD+tBN;AChuBI;EACE;ADmuBN;ACpuBI;EACE;ADuuBN;ACxuBI;EACE;AD2uBN;AC5uBI;EACE;AD+uBN;AChvBI;EACE;ADmvBN;ACpvBI;EACE;ADuvBN;ACxvBI;EACE;AD2vBN;AC5vBI;EACE;AD+vBN;AChwBI;EACE;ADmwBN;ACpwBI;EACE;ADuwBN;ACxwBI;EACE;AD2wBN;AC5wBI;EACE;AD+wBN;AChxBI;EACE;ADmxBN;ACpxBI;EACE;ADuxBN;ACxxBI;EACE;AD2xBN;AC5xBI;EACE;AD+xBN;AChyBI;EACE;ADmyBN;ACpyBI;EACE;ADuyBN;ACxyBI;EACE;AD2yBN;AC5yBI;EACE;AD+yBN;AChzBI;EACE;ADmzBN;ACpzBI;EACE;ADuzBN;ACxzBI;EACE;AD2zBN;AC5zBI;EACE;AD+zBN;ACh0BI;EACE;ADm0BN;ACp0BI;EACE;ADu0BN;ACx0BI;EACE;AD20BN;AC50BI;EACE;AD+0BN;ACh1BI;EACE;ADm1BN;ACp1BI;EACE;ADu1BN;ACx1BI;EACE;AD21BN;AC51BI;EACE;AD+1BN;ACh2BI;EACE;ADm2BN;ACp2BI;EACE;ADu2BN;ACx2BI;EACE;AD22BN;AC52BI;EACE;AD+2BN;ACh3BI;EACE;ADm3BN;ACp3BI;EACE;ADu3BN;ACx3BI;EACE;AD23BN;AC53BI;EACE;AD+3BN;ACh4BI;EACE;ADm4BN;ACp4BI;EACE;ADu4BN;ACx4BI;EACE;AD24BN;AC54BI;EACE;AD+4BN;ACh5BI;EACE;ADm5BN;ACp5BI;EACE;ADu5BN;ACx5BI;EACE;AD25BN;AC55BI;EACE;AD+5BN;ACh6BI;EACE;ADm6BN;ACp6BI;EACE;ADu6BN;ACx6BI;EACE;AD26BN;AC56BI;EACE;AD+6BN;ACh7BI;EACE;ADm7BN;ACp7BI;EACE;ADu7BN;ACx7BI;EACE;AD27BN;ACn7BI;EACE;EACA;ADs7BN;ACn7BI;EACE;EACA;ADs7BN;AC77BI;EACE;EACA;ADg8BN;AC77BI;EACE;EACA;ADg8BN;ACv8BI;EACE;EACA;AD08BN;ACv8BI;EACE;EACA;AD08BN;ACj9BI;EACE;EACA;ADo9BN;ACj9BI;EACE;EACA;ADo9BN;AC39BI;EACE;EACA;AD89BN;AC39BI;EACE;EACA;AD89BN;ACr+BI;EACE;EACA;ADw+BN;ACr+BI;EACE;EACA;ADw+BN;AC/+BI;EACE;EACA;ADk/BN;AC/+BI;EACE;EACA;ADk/BN;ACz/BI;EACE;EACA;AD4/BN;ACz/BI;EACE;EACA;AD4/BN;ACngCI;EACE;EACA;ADsgCN;ACngCI;EACE;EACA;ADsgCN;AC7gCI;EACE;EACA;ADghCN;AC7gCI;EACE;EACA;ADghCN;ACvhCI;EACE;EACA;AD0hCN;ACvhCI;EACE;EACA;AD0hCN;ACjiCI;EACE;EACA;ADoiCN;ACjiCI;EACE;EACA;ADoiCN;AC3iCI;EACE;EACA;AD8iCN;AC3iCI;EACE;EACA;AD8iCN;ACrjCI;EACE;EACA;ADwjCN;ACrjCI;EACE;EACA;ADwjCN;AC/jCI;EACE;EACA;ADkkCN;AC/jCI;EACE;EACA;ADkkCN;ACzkCI;EACE;EACA;AD4kCN;ACzkCI;EACE;EACA;AD4kCN;ACnlCI;EACE;EACA;ADslCN;ACnlCI;EACE;EACA;ADslCN;AC7lCI;EACE;EACA;ADgmCN;AC7lCI;EACE;EACA;ADgmCN;ACvmCI;EACE;EACA;AD0mCN;ACvmCI;EACE;EACA;AD0mCN;ACjnCI;EACE;EACA;ADonCN;ACjnCI;EACE;EACA;ADonCN;AC3nCI;EACE;EACA;AD8nCN;AC3nCI;EACE;EACA;AD8nCN;ACroCI;EACE;EACA;ADwoCN;ACroCI;EACE;EACA;ADwoCN;AC/oCI;EACE;EACA;ADkpCN;AC/oCI;EACE;EACA;ADkpCN;ACzpCI;EACE;EACA;AD4pCN;ACzpCI;EACE;EACA;AD4pCN;ACnqCI;EACE;EACA;ADsqCN;ACnqCI;EACE;EACA;ADsqCN;AC7qCI;EACE;EACA;ADgrCN;AC7qCI;EACE;EACA;ADgrCN;ACvrCI;EACE;EACA;AD0rCN;ACvrCI;EACE;EACA;AD0rCN;ACjsCI;EACE;EACA;ADosCN;ACjsCI;EACE;EACA;ADosCN;AC3sCI;EACE;EACA;AD8sCN;AC3sCI;EACE;EACA;AD8sCN;ACrtCI;EACE;EACA;ADwtCN;ACrtCI;EACE;EACA;ADwtCN;AC/tCI;EACE;EACA;ADkuCN;AC/tCI;EACE;EACA;ADkuCN;ACzuCI;EACE;EACA;AD4uCN;ACzuCI;EACE;EACA;AD4uCN;ACnvCI;EACE;EACA;ADsvCN;ACnvCI;EACE;EACA;ADsvCN;AC7vCI;EACE;EACA;ADgwCN;AC7vCI;EACE;EACA;ADgwCN;ACvwCI;EACE;EACA;AD0wCN;ACvwCI;EACE;EACA;AD0wCN;ACjxCI;EACE;EACA;ADoxCN;ACjxCI;EACE;EACA;ADoxCN;AC3xCI;EACE;EACA;AD8xCN;AC3xCI;EACE;EACA;AD8xCN;ACryCI;EACE;EACA;ADwyCN;ACryCI;EACE;EACA;ADwyCN;AC/yCI;EACE;EACA;ADkzCN;AC/yCI;EACE;EACA;ADkzCN;ACzzCI;EACE;EACA;AD4zCN;ACzzCI;EACE;EACA;AD4zCN;ACn0CI;EACE;EACA;ADs0CN;ACn0CI;EACE;EACA;ADs0CN;AC70CI;EACE;EACA;ADg1CN;AC70CI;EACE;EACA;ADg1CN;ACv1CI;EACE;EACA;AD01CN;ACv1CI;EACE;EACA;AD01CN;ACj2CI;EACE;EACA;ADo2CN;ACj2CI;EACE;EACA;ADo2CN;AC32CI;EACE;EACA;AD82CN;AC32CI;EACE;EACA;AD82CN;ACr3CI;EACE;EACA;ADw3CN;ACr3CI;EACE;EACA;ADw3CN;AC/3CI;EACE;EACA;ADk4CN;AC/3CI;EACE;EACA;ADk4CN;ACz4CI;EACE;EACA;AD44CN;ACz4CI;EACE;EACA;AD44CN;ACn5CI;EACE;EACA;ADs5CN;ACn5CI;EACE;EACA;ADs5CN;AC75CI;EACE;EACA;ADg6CN;AC75CI;EACE;EACA;ADg6CN;ACv6CI;EACE;EACA;AD06CN;ACv6CI;EACE;EACA;AD06CN;ACj7CI;EACE;EACA;ADo7CN;ACj7CI;EACE;EACA;ADo7CN;AC37CI;EACE;EACA;AD87CN;AC37CI;EACE;EACA;AD87CN;ACr8CI;EACE;EACA;ADw8CN;ACr8CI;EACE;EACA;ADw8CN;AC/8CI;EACE;EACA;ADk9CN;AC/8CI;EACE;EACA;ADk9CN;ACz9CI;EACE;EACA;AD49CN;ACz9CI;EACE;EACA;AD49CN;ACn+CI;EACE;EACA;ADs+CN;ACn+CI;EACE;EACA;ADs+CN;AC7+CI;EACE;EACA;ADg/CN;AC7+CI;EACE;EACA;ADg/CN;ACv/CI;EACE;EACA;AD0/CN;ACv/CI;EACE;EACA;AD0/CN;ACjgDI;EACE;EACA;ADogDN;ACjgDI;EACE;EACA;ADogDN;AC3gDI;EACE;EACA;AD8gDN;AC3gDI;EACE;EACA;AD8gDN;ACrhDI;EACE;EACA;ADwhDN;ACrhDI;EACE;EACA;ADwhDN;AC/hDI;EACE;EACA;ADkiDN;AC/hDI;EACE;EACA;ADkiDN;ACziDI;EACE;EACA;AD4iDN;ACziDI;EACE;EACA;AD4iDN;ACnjDI;EACE;EACA;ADsjDN;ACnjDI;EACE;EACA;ADsjDN;AC9iDI;EACE;ADijDN;AC9iDI;EACE;ADijDN;AC9iDI;EACE;ADijDN;AC9iDI;EACE;ADijDN;AC9jDI;EACE;ADikDN;AC9jDI;EACE;ADikDN;AC9jDI;EACE;ADikDN;AC9jDI;EACE;ADikDN;AC9kDI;EACE;ADilDN;AC9kDI;EACE;ADilDN;AC9kDI;EACE;ADilDN;AC9kDI;EACE;ADilDN;AC9lDI;EACE;ADimDN;AC9lDI;EACE;ADimDN;AC9lDI;EACE;ADimDN;AC9lDI;EACE;ADimDN;AC9mDI;EACE;ADinDN;AC9mDI;EACE;ADinDN;AC9mDI;EACE;ADinDN;AC9mDI;EACE;ADinDN;AC9nDI;EACE;ADioDN;AC9nDI;EACE;ADioDN;AC9nDI;EACE;ADioDN;AC9nDI;EACE;ADioDN;AC9oDI;EACE;ADipDN;AC9oDI;EACE;ADipDN;AC9oDI;EACE;ADipDN;AC9oDI;EACE;ADipDN;AC9pDI;EACE;ADiqDN;AC9pDI;EACE;ADiqDN;AC9pDI;EACE;ADiqDN;AC9pDI;EACE;ADiqDN;AC9qDI;EACE;ADirDN;AC9qDI;EACE;ADirDN;AC9qDI;EACE;ADirDN;AC9qDI;EACE;ADirDN;AC9rDI;EACE;ADisDN;AC9rDI;EACE;ADisDN;AC9rDI;EACE;ADisDN;AC9rDI;EACE;ADisDN;AC9sDI;EACE;ADitDN;AC9sDI;EACE;ADitDN;AC9sDI;EACE;ADitDN;AC9sDI;EACE;ADitDN;AC9tDI;EACE;ADiuDN;AC9tDI;EACE;ADiuDN;AC9tDI;EACE;ADiuDN;AC9tDI;EACE;ADiuDN;AC9uDI;EACE;ADivDN;AC9uDI;EACE;ADivDN;AC9uDI;EACE;ADivDN;AC9uDI;EACE;ADivDN;AC9vDI;EACE;ADiwDN;AC9vDI;EACE;ADiwDN;AC9vDI;EACE;ADiwDN;AC9vDI;EACE;ADiwDN;AC9wDI;EACE;ADixDN;AC9wDI;EACE;ADixDN;AC9wDI;EACE;ADixDN;AC9wDI;EACE;ADixDN;AC9xDI;EACE;ADiyDN;AC9xDI;EACE;ADiyDN;AC9xDI;EACE;ADiyDN;AC9xDI;EACE;ADiyDN;AC9yDI;EACE;ADizDN;AC9yDI;EACE;ADizDN;AC9yDI;EACE;ADizDN;AC9yDI;EACE;ADizDN;AC9zDI;EACE;ADi0DN;AC9zDI;EACE;ADi0DN;AC9zDI;EACE;ADi0DN;AC9zDI;EACE;ADi0DN;AC90DI;EACE;ADi1DN;AC90DI;EACE;ADi1DN;AC90DI;EACE;ADi1DN;AC90DI;EACE;ADi1DN;AC91DI;EACE;ADi2DN;AC91DI;EACE;ADi2DN;AC91DI;EACE;ADi2DN;AC91DI;EACE;ADi2DN;AC92DI;EACE;ADi3DN;AC92DI;EACE;ADi3DN;AC92DI;EACE;ADi3DN;AC92DI;EACE;ADi3DN;AC93DI;EACE;ADi4DN;AC93DI;EACE;ADi4DN;AC93DI;EACE;ADi4DN;AC93DI;EACE;ADi4DN;AC94DI;EACE;ADi5DN;AC94DI;EACE;ADi5DN;AC94DI;EACE;ADi5DN;AC94DI;EACE;ADi5DN;AC95DI;EACE;ADi6DN;AC95DI;EACE;ADi6DN;AC95DI;EACE;ADi6DN;AC95DI;EACE;ADi6DN;AC96DI;EACE;ADi7DN;AC96DI;EACE;ADi7DN;AC96DI;EACE;ADi7DN;AC96DI;EACE;ADi7DN;AC97DI;EACE;ADi8DN;AC97DI;EACE;ADi8DN;AC97DI;EACE;ADi8DN;AC97DI;EACE;ADi8DN;AC98DI;EACE;ADi9DN;AC98DI;EACE;ADi9DN;AC98DI;EACE;ADi9DN;AC98DI;EACE;ADi9DN;AC99DI;EACE;ADi+DN;AC99DI;EACE;ADi+DN;AC99DI;EACE;ADi+DN;AC99DI;EACE;ADi+DN;AC9+DI;EACE;ADi/DN;AC9+DI;EACE;ADi/DN;AC9+DI;EACE;ADi/DN;AC9+DI;EACE;ADi/DN;AC9/DI;EACE;ADigEN;AC9/DI;EACE;ADigEN;AC9/DI;EACE;ADigEN;AC9/DI;EACE;ADigEN;AC9gEI;EACE;ADihEN;AC9gEI;EACE;ADihEN;AC9gEI;EACE;ADihEN;AC9gEI;EACE;ADihEN;AC9hEI;EACE;ADiiEN;AC9hEI;EACE;ADiiEN;AC9hEI;EACE;ADiiEN;AC9hEI;EACE;ADiiEN;AC9iEI;EACE;ADijEN;AC9iEI;EACE;ADijEN;AC9iEI;EACE;ADijEN;AC9iEI;EACE;ADijEN;AC9jEI;EACE;ADikEN;AC9jEI;EACE;ADikEN;AC9jEI;EACE;ADikEN;AC9jEI;EACE;ADikEN;AC9kEI;EACE;ADilEN;AC9kEI;EACE;ADilEN;AC9kEI;EACE;ADilEN;AC9kEI;EACE;ADilEN;AC9lEI;EACE;ADimEN;AC9lEI;EACE;ADimEN;AC9lEI;EACE;ADimEN;AC9lEI;EACE;ADimEN;AC9mEI;EACE;ADinEN;AC9mEI;EACE;ADinEN;AC9mEI;EACE;ADinEN;AC9mEI;EACE;ADinEN;AC9nEI;EACE;ADioEN;AC9nEI;EACE;ADioEN;AC9nEI;EACE;ADioEN;AC9nEI;EACE;ADioEN;AC9oEI;EACE;ADipEN;AC9oEI;EACE;ADipEN;AC9oEI;EACE;ADipEN;AC9oEI;EACE;ADipEN;AC9pEI;EACE;ADiqEN;AC9pEI;EACE;ADiqEN;AC9pEI;EACE;ADiqEN;AC9pEI;EACE;ADiqEN;AC9qEI;EACE;ADirEN;AC9qEI;EACE;ADirEN;AC9qEI;EACE;ADirEN;AC9qEI;EACE;ADirEN;AC9rEI;EACE;ADisEN;AC9rEI;EACE;ADisEN;AC9rEI;EACE;ADisEN;AC9rEI;EACE;ADisEN;AC9sEI;EACE;ADitEN;AC9sEI;EACE;ADitEN;AC9sEI;EACE;ADitEN;AC9sEI;EACE;ADitEN;AC9tEI;EACE;ADiuEN;AC9tEI;EACE;ADiuEN;AC9tEI;EACE;ADiuEN;AC9tEI;EACE;ADiuEN;AC9uEI;EACE;ADivEN;AC9uEI;EACE;ADivEN;AC9uEI;EACE;ADivEN;AC9uEI;EACE;ADivEN;AC9vEI;EACE;ADiwEN;AC9vEI;EACE;ADiwEN;AC9vEI;EACE;ADiwEN;AC9vEI;EACE;ADiwEN;AC9wEI;EACE;ADixEN;AC9wEI;EACE;ADixEN;AC9wEI;EACE;ADixEN;AC9wEI;EACE;ADixEN;AC9xEI;EACE;ADiyEN;AC9xEI;EACE;ADiyEN;AC9xEI;EACE;ADiyEN;AC9xEI;EACE;ADiyEN;AC9yEI;EACE;ADizEN;AC9yEI;EACE;ADizEN;AC9yEI;EACE;ADizEN;AC9yEI;EACE;ADizEN;AC9zEI;EACE;ADi0EN;AC9zEI;EACE;ADi0EN;AC9zEI;EACE;ADi0EN;AC9zEI;EACE;ADi0EN;AC90EI;EACE;ADi1EN;AC90EI;EACE;ADi1EN;AC90EI;EACE;ADi1EN;AC90EI;EACE;ADi1EN;AC91EI;EACE;ADi2EN;AC91EI;EACE;ADi2EN;AC91EI;EACE;ADi2EN;AC91EI;EACE;ADi2EN;AC92EI;EACE;ADi3EN;AC92EI;EACE;ADi3EN;AC92EI;EACE;ADi3EN;AC92EI;EACE;ADi3EN;AC93EI;EACE;ADi4EN;AC93EI;EACE;ADi4EN;AC93EI;EACE;ADi4EN;AC93EI;EACE;ADi4EN;AC94EI;EACE;ADi5EN;AC94EI;EACE;ADi5EN;AC94EI;EACE;ADi5EN;AC94EI;EACE;ADi5EN;AC95EI;EACE;ADi6EN;AC95EI;EACE;ADi6EN;AC95EI;EACE;ADi6EN;AC95EI;EACE;ADi6EN;AC96EI;EACE;ADi7EN;AC96EI;EACE;ADi7EN;AC96EI;EACE;ADi7EN;AC96EI;EACE;ADi7EN;AC97EI;EACE;ADi8EN;AC97EI;EACE;ADi8EN;AC97EI;EACE;ADi8EN;AC97EI;EACE;ADi8EN;AC98EI;EACE;ADi9EN;AC98EI;EACE;ADi9EN;AC98EI;EACE;ADi9EN;AC98EI;EACE;ADi9EN;AC99EI;EACE;ADi+EN;AC99EI;EACE;ADi+EN;AC99EI;EACE;ADi+EN;AC99EI;EACE;ADi+EN;AC9+EI;EACE;ADi/EN;AC9+EI;EACE;ADi/EN;AC9+EI;EACE;ADi/EN;AC9+EI;EACE;ADi/EN;AC9/EI;EACE;ADigFN;AC9/EI;EACE;ADigFN;AC9/EI;EACE;ADigFN;AC9/EI;EACE;ADigFN;AC9gFI;EACE;ADihFN;AC9gFI;EACE;ADihFN;AC9gFI;EACE;ADihFN;AC9gFI;EACE;ADihFN;AC9hFI;EACE;ADiiFN;AC9hFI;EACE;ADiiFN;AC9hFI;EACE;ADiiFN;AC9hFI;EACE;ADiiFN;AC9iFI;EACE;ADijFN;AC9iFI;EACE;ADijFN;AC9iFI;EACE;ADijFN;AC9iFI;EACE;ADijFN;AC3iFI;EACE;AD8iFN;AC3iFI;EACE;AD8iFN;AC3iFI;EACE;AD8iFN;AC3iFI;EACE;AD8iFN;AC3iFI;EACE;AD8iFN;AC3iFI;EACE;EACA;AD8iFN;AC3iFI;EACE;EACA;AD8iFN;ACpnFI;EACE;ADunFN;ACxnFI;EACE;AD2nFN;AC5nFI;EACE;AD+nFN;AChoFI;EACE;ADmoFN;ACpoFI;EACE;ADuoFN;ACxoFI;EACE;AD2oFN;AC5oFI;EACE;AD+oFN;AChpFI;EACE;ADmpFN;ACppFI;EACE;ADupFN;ACxpFI;EACE;AD2pFN;AC5pFI;EACE;AD+pFN;AChqFI;EACE;ADmqFN;ACpqFI;EACE;ADuqFN;ACxqFI;EACE;AD2qFN;AC5qFI;EACE;AD+qFN;AChrFI;EACE;ADmrFN;ACprFI;EACE;ADurFN;ACxrFI;EACE;AD2rFN;AC5rFI;EACE;AD+rFN;AChsFI;EACE;ADmsFN;ACpsFI;EACE;ADusFN;ACxsFI;EACE;AD2sFN;AC5sFI;EACE;AD+sFN;AChtFI;EACE;ADmtFN;ACptFI;EACE;ADutFN;ACxtFI;EACE;AD2tFN;AC5tFI;EACE;AD+tFN;AChuFI;EACE;ADmuFN;ACpuFI;EACE;ADuuFN;ACxuFI;EACE;AD2uFN;AC5uFI;EACE;AD+uFN;AChvFI;EACE;ADmvFN;ACpvFI;EACE;ADuvFN;ACxvFI;EACE;AD2vFN;AC5vFI;EACE;AD+vFN;AChwFI;EACE;ADmwFN;ACpwFI;EACE;ADuwFN;ACxwFI;EACE;AD2wFN;AC5wFI;EACE;AD+wFN;AChxFI;EACE;ADmxFN;ACpxFI;EACE;ADuxFN;ACxxFI;EACE;AD2xFN;AC5xFI;EACE;AD+xFN;AChyFI;EACE;ADmyFN;ACpyFI;EACE;ADuyFN;ACxyFI;EACE;AD2yFN;AC5yFI;EACE;AD+yFN;AChzFI;EACE;ADmzFN;ACpzFI;EACE;ADuzFN;ACxzFI;EACE;AD2zFN;AC5zFI;EACE;AD+zFN;ACh0FI;EACE;ADm0FN;ACp0FI;EACE;ADu0FN;ACx0FI;EACE;AD20FN;AC50FI;EACE;AD+0FN;ACh1FI;EACE;ADm1FN;ACp1FI;EACE;ADu1FN;ACx1FI;EACE;AD21FN;AC51FI;EACE;AD+1FN;ACh2FI;EACE;ADm2FN;ACp2FI;EACE;ADu2FN;ACx2FI;EACE;AD22FN;AC52FI;EACE;AD+2FN;ACh3FI;EACE;ADm3FN;ACp3FI;EACE;ADu3FN;AC/2FI;EACE;EACA;ADk3FN;AC/2FI;EACE;EACA;ADk3FN;ACz3FI;EACE;EACA;AD43FN;ACz3FI;EACE;EACA;AD43FN;ACn4FI;EACE;EACA;ADs4FN;ACn4FI;EACE;EACA;ADs4FN;AC74FI;EACE;EACA;ADg5FN;AC74FI;EACE;EACA;ADg5FN;ACv5FI;EACE;EACA;AD05FN;ACv5FI;EACE;EACA;AD05FN;ACj6FI;EACE;EACA;ADo6FN;ACj6FI;EACE;EACA;ADo6FN;AC36FI;EACE;EACA;AD86FN;AC36FI;EACE;EACA;AD86FN;ACr7FI;EACE;EACA;ADw7FN;ACr7FI;EACE;EACA;ADw7FN;AC/7FI;EACE;EACA;ADk8FN;AC/7FI;EACE;EACA;ADk8FN;ACz8FI;EACE;EACA;AD48FN;ACz8FI;EACE;EACA;AD48FN;ACn9FI;EACE;EACA;ADs9FN;ACn9FI;EACE;EACA;ADs9FN;AC79FI;EACE;EACA;ADg+FN;AC79FI;EACE;EACA;ADg+FN;ACv+FI;EACE;EACA;AD0+FN;ACv+FI;EACE;EACA;AD0+FN;ACj/FI;EACE;EACA;ADo/FN;ACj/FI;EACE;EACA;ADo/FN;AC3/FI;EACE;EACA;AD8/FN;AC3/FI;EACE;EACA;AD8/FN;ACrgGI;EACE;EACA;ADwgGN;ACrgGI;EACE;EACA;ADwgGN;AC/gGI;EACE;EACA;ADkhGN;AC/gGI;EACE;EACA;ADkhGN;ACzhGI;EACE;EACA;AD4hGN;ACzhGI;EACE;EACA;AD4hGN;ACniGI;EACE;EACA;ADsiGN;ACniGI;EACE;EACA;ADsiGN;AC7iGI;EACE;EACA;ADgjGN;AC7iGI;EACE;EACA;ADgjGN;ACvjGI;EACE;EACA;AD0jGN;ACvjGI;EACE;EACA;AD0jGN;ACjkGI;EACE;EACA;ADokGN;ACjkGI;EACE;EACA;ADokGN;AC3kGI;EACE;EACA;AD8kGN;AC3kGI;EACE;EACA;AD8kGN;ACrlGI;EACE;EACA;ADwlGN;ACrlGI;EACE;EACA;ADwlGN;AC/lGI;EACE;EACA;ADkmGN;AC/lGI;EACE;EACA;ADkmGN;ACzmGI;EACE;EACA;AD4mGN;ACzmGI;EACE;EACA;AD4mGN;ACnnGI;EACE;EACA;ADsnGN;ACnnGI;EACE;EACA;ADsnGN;AC7nGI;EACE;EACA;ADgoGN;AC7nGI;EACE;EACA;ADgoGN;ACvoGI;EACE;EACA;AD0oGN;ACvoGI;EACE;EACA;AD0oGN;ACjpGI;EACE;EACA;ADopGN;ACjpGI;EACE;EACA;ADopGN;AC3pGI;EACE;EACA;AD8pGN;AC3pGI;EACE;EACA;AD8pGN;ACrqGI;EACE;EACA;ADwqGN;ACrqGI;EACE;EACA;ADwqGN;AC/qGI;EACE;EACA;ADkrGN;AC/qGI;EACE;EACA;ADkrGN;ACzrGI;EACE;EACA;AD4rGN;ACzrGI;EACE;EACA;AD4rGN;ACnsGI;EACE;EACA;ADssGN;ACnsGI;EACE;EACA;ADssGN;AC7sGI;EACE;EACA;ADgtGN;AC7sGI;EACE;EACA;ADgtGN;ACvtGI;EACE;EACA;AD0tGN;ACvtGI;EACE;EACA;AD0tGN;ACjuGI;EACE;EACA;ADouGN;ACjuGI;EACE;EACA;ADouGN;AC3uGI;EACE;EACA;AD8uGN;AC3uGI;EACE;EACA;AD8uGN;ACrvGI;EACE;EACA;ADwvGN;ACrvGI;EACE;EACA;ADwvGN;AC/vGI;EACE;EACA;ADkwGN;AC/vGI;EACE;EACA;ADkwGN;ACzwGI;EACE;EACA;AD4wGN;ACzwGI;EACE;EACA;AD4wGN;ACnxGI;EACE;EACA;ADsxGN;ACnxGI;EACE;EACA;ADsxGN;AC7xGI;EACE;EACA;ADgyGN;AC7xGI;EACE;EACA;ADgyGN;ACvyGI;EACE;EACA;AD0yGN;ACvyGI;EACE;EACA;AD0yGN;ACjzGI;EACE;EACA;ADozGN;ACjzGI;EACE;EACA;ADozGN;AC3zGI;EACE;EACA;AD8zGN;AC3zGI;EACE;EACA;AD8zGN;ACr0GI;EACE;EACA;ADw0GN;ACr0GI;EACE;EACA;ADw0GN;AC/0GI;EACE;EACA;ADk1GN;AC/0GI;EACE;EACA;ADk1GN;ACz1GI;EACE;EACA;AD41GN;ACz1GI;EACE;EACA;AD41GN;ACn2GI;EACE;EACA;ADs2GN;ACn2GI;EACE;EACA;ADs2GN;AC72GI;EACE;EACA;ADg3GN;AC72GI;EACE;EACA;ADg3GN;ACv3GI;EACE;EACA;AD03GN;ACv3GI;EACE;EACA;AD03GN;ACj4GI;EACE;EACA;ADo4GN;ACj4GI;EACE;EACA;ADo4GN;AC34GI;EACE;EACA;AD84GN;AC34GI;EACE;EACA;AD84GN;ACr5GI;EACE;EACA;ADw5GN;ACr5GI;EACE;EACA;ADw5GN;AC/5GI;EACE;EACA;ADk6GN;AC/5GI;EACE;EACA;ADk6GN;ACz6GI;EACE;EACA;AD46GN;ACz6GI;EACE;EACA;AD46GN;ACn7GI;EACE;EACA;ADs7GN;ACn7GI;EACE;EACA;ADs7GN;AC77GI;EACE;EACA;ADg8GN;AC77GI;EACE;EACA;ADg8GN;ACv8GI;EACE;EACA;AD08GN;ACv8GI;EACE;EACA;AD08GN;ACj9GI;EACE;EACA;ADo9GN;ACj9GI;EACE;EACA;ADo9GN;AC39GI;EACE;EACA;AD89GN;AC39GI;EACE;EACA;AD89GN;ACr+GI;EACE;EACA;ADw+GN;ACr+GI;EACE;EACA;ADw+GN;AC/+GI;EACE;EACA;ADk/GN;AC/+GI;EACE;EACA;ADk/GN;AC1+GI;EACE;AD6+GN;AC1+GI;EACE;AD6+GN;AC1+GI;EACE;AD6+GN;AC1+GI;EACE;AD6+GN;AC1/GI;EACE;AD6/GN;AC1/GI;EACE;AD6/GN;AC1/GI;EACE;AD6/GN;AC1/GI;EACE;AD6/GN;AC1gHI;EACE;AD6gHN;AC1gHI;EACE;AD6gHN;AC1gHI;EACE;AD6gHN;AC1gHI;EACE;AD6gHN;AC1hHI;EACE;AD6hHN;AC1hHI;EACE;AD6hHN;AC1hHI;EACE;AD6hHN;AC1hHI;EACE;AD6hHN;AC1iHI;EACE;AD6iHN;AC1iHI;EACE;AD6iHN;AC1iHI;EACE;AD6iHN;AC1iHI;EACE;AD6iHN;AC1jHI;EACE;AD6jHN;AC1jHI;EACE;AD6jHN;AC1jHI;EACE;AD6jHN;AC1jHI;EACE;AD6jHN;AC1kHI;EACE;AD6kHN;AC1kHI;EACE;AD6kHN;AC1kHI;EACE;AD6kHN;AC1kHI;EACE;AD6kHN;AC1lHI;EACE;AD6lHN;AC1lHI;EACE;AD6lHN;AC1lHI;EACE;AD6lHN;AC1lHI;EACE;AD6lHN;AC1mHI;EACE;AD6mHN;AC1mHI;EACE;AD6mHN;AC1mHI;EACE;AD6mHN;AC1mHI;EACE;AD6mHN;AC1nHI;EACE;AD6nHN;AC1nHI;EACE;AD6nHN;AC1nHI;EACE;AD6nHN;AC1nHI;EACE;AD6nHN;AC1oHI;EACE;AD6oHN;AC1oHI;EACE;AD6oHN;AC1oHI;EACE;AD6oHN;AC1oHI;EACE;AD6oHN;AC1pHI;EACE;AD6pHN;AC1pHI;EACE;AD6pHN;AC1pHI;EACE;AD6pHN;AC1pHI;EACE;AD6pHN;AC1qHI;EACE;AD6qHN;AC1qHI;EACE;AD6qHN;AC1qHI;EACE;AD6qHN;AC1qHI;EACE;AD6qHN;AC1rHI;EACE;AD6rHN;AC1rHI;EACE;AD6rHN;AC1rHI;EACE;AD6rHN;AC1rHI;EACE;AD6rHN;AC1sHI;EACE;AD6sHN;AC1sHI;EACE;AD6sHN;AC1sHI;EACE;AD6sHN;AC1sHI;EACE;AD6sHN;AC1tHI;EACE;AD6tHN;AC1tHI;EACE;AD6tHN;AC1tHI;EACE;AD6tHN;AC1tHI;EACE;AD6tHN;AC1uHI;EACE;AD6uHN;AC1uHI;EACE;AD6uHN;AC1uHI;EACE;AD6uHN;AC1uHI;EACE;AD6uHN;AC1vHI;EACE;AD6vHN;AC1vHI;EACE;AD6vHN;AC1vHI;EACE;AD6vHN;AC1vHI;EACE;AD6vHN;AC1wHI;EACE;AD6wHN;AC1wHI;EACE;AD6wHN;AC1wHI;EACE;AD6wHN;AC1wHI;EACE;AD6wHN;AC1xHI;EACE;AD6xHN;AC1xHI;EACE;AD6xHN;AC1xHI;EACE;AD6xHN;AC1xHI;EACE;AD6xHN;AC1yHI;EACE;AD6yHN;AC1yHI;EACE;AD6yHN;AC1yHI;EACE;AD6yHN;AC1yHI;EACE;AD6yHN;AC1zHI;EACE;AD6zHN;AC1zHI;EACE;AD6zHN;AC1zHI;EACE;AD6zHN;AC1zHI;EACE;AD6zHN;AC10HI;EACE;AD60HN;AC10HI;EACE;AD60HN;AC10HI;EACE;AD60HN;AC10HI;EACE;AD60HN;AC11HI;EACE;AD61HN;AC11HI;EACE;AD61HN;AC11HI;EACE;AD61HN;AC11HI;EACE;AD61HN;AC12HI;EACE;AD62HN;AC12HI;EACE;AD62HN;AC12HI;EACE;AD62HN;AC12HI;EACE;AD62HN;AC13HI;EACE;AD63HN;AC13HI;EACE;AD63HN;AC13HI;EACE;AD63HN;AC13HI;EACE;AD63HN;AC14HI;EACE;AD64HN;AC14HI;EACE;AD64HN;AC14HI;EACE;AD64HN;AC14HI;EACE;AD64HN;AC15HI;EACE;AD65HN;AC15HI;EACE;AD65HN;AC15HI;EACE;AD65HN;AC15HI;EACE;AD65HN;AC16HI;EACE;AD66HN;AC16HI;EACE;AD66HN;AC16HI;EACE;AD66HN;AC16HI;EACE;AD66HN;AC17HI;EACE;AD67HN;AC17HI;EACE;AD67HN;AC17HI;EACE;AD67HN;AC17HI;EACE;AD67HN;AC18HI;EACE;AD68HN;AC18HI;EACE;AD68HN;AC18HI;EACE;AD68HN;AC18HI;EACE;AD68HN;AC19HI;EACE;AD69HN;AC19HI;EACE;AD69HN;AC19HI;EACE;AD69HN;AC19HI;EACE;AD69HN;AC1+HI;EACE;AD6+HN;AC1+HI;EACE;AD6+HN;AC1+HI;EACE;AD6+HN;AC1+HI;EACE;AD6+HN;AC1/HI;EACE;AD6/HN;AC1/HI;EACE;AD6/HN;AC1/HI;EACE;AD6/HN;AC1/HI;EACE;AD6/HN;AC1gII;EACE;AD6gIN;AC1gII;EACE;AD6gIN;AC1gII;EACE;AD6gIN;AC1gII;EACE;AD6gIN;AC1hII;EACE;AD6hIN;AC1hII;EACE;AD6hIN;AC1hII;EACE;AD6hIN;AC1hII;EACE;AD6hIN;AC1iII;EACE;AD6iIN;AC1iII;EACE;AD6iIN;AC1iII;EACE;AD6iIN;AC1iII;EACE;AD6iIN;AC1jII;EACE;AD6jIN;AC1jII;EACE;AD6jIN;AC1jII;EACE;AD6jIN;AC1jII;EACE;AD6jIN;AC1kII;EACE;AD6kIN;AC1kII;EACE;AD6kIN;AC1kII;EACE;AD6kIN;AC1kII;EACE;AD6kIN;AC1lII;EACE;AD6lIN;AC1lII;EACE;AD6lIN;AC1lII;EACE;AD6lIN;AC1lII;EACE;AD6lIN;AC1mII;EACE;AD6mIN;AC1mII;EACE;AD6mIN;AC1mII;EACE;AD6mIN;AC1mII;EACE;AD6mIN;AC1nII;EACE;AD6nIN;AC1nII;EACE;AD6nIN;AC1nII;EACE;AD6nIN;AC1nII;EACE;AD6nIN;AC1oII;EACE;AD6oIN;AC1oII;EACE;AD6oIN;AC1oII;EACE;AD6oIN;AC1oII;EACE;AD6oIN;AC1pII;EACE;AD6pIN;AC1pII;EACE;AD6pIN;AC1pII;EACE;AD6pIN;AC1pII;EACE;AD6pIN;AC1qII;EACE;AD6qIN;AC1qII;EACE;AD6qIN;AC1qII;EACE;AD6qIN;AC1qII;EACE;AD6qIN;AC1rII;EACE;AD6rIN;AC1rII;EACE;AD6rIN;AC1rII;EACE;AD6rIN;AC1rII;EACE;AD6rIN;AC1sII;EACE;AD6sIN;AC1sII;EACE;AD6sIN;AC1sII;EACE;AD6sIN;AC1sII;EACE;AD6sIN;AC1tII;EACE;AD6tIN;AC1tII;EACE;AD6tIN;AC1tII;EACE;AD6tIN;AC1tII;EACE;AD6tIN;AC1uII;EACE;AD6uIN;AC1uII;EACE;AD6uIN;AC1uII;EACE;AD6uIN;AC1uII;EACE;AD6uIN;AC1vII;EACE;AD6vIN;AC1vII;EACE;AD6vIN;AC1vII;EACE;AD6vIN;AC1vII;EACE;AD6vIN;AC1wII;EACE;AD6wIN;AC1wII;EACE;AD6wIN;AC1wII;EACE;AD6wIN;AC1wII;EACE;AD6wIN;AC1xII;EACE;AD6xIN;AC1xII;EACE;AD6xIN;AC1xII;EACE;AD6xIN;AC1xII;EACE;AD6xIN;AC1yII;EACE;AD6yIN;AC1yII;EACE;AD6yIN;AC1yII;EACE;AD6yIN;AC1yII;EACE;AD6yIN;AC1zII;EACE;AD6zIN;AC1zII;EACE;AD6zIN;AC1zII;EACE;AD6zIN;AC1zII;EACE;AD6zIN;AC10II;EACE;AD60IN;AC10II;EACE;AD60IN;AC10II;EACE;AD60IN;AC10II;EACE;AD60IN;AC11II;EACE;AD61IN;AC11II;EACE;AD61IN;AC11II;EACE;AD61IN;AC11II;EACE;AD61IN;AC12II;EACE;AD62IN;AC12II;EACE;AD62IN;AC12II;EACE;AD62IN;AC12II;EACE;AD62IN;AC13II;EACE;AD63IN;AC13II;EACE;AD63IN;AC13II;EACE;AD63IN;AC13II;EACE;AD63IN;AC14II;EACE;AD64IN;AC14II;EACE;AD64IN;AC14II;EACE;AD64IN;AC14II;EACE;AD64IN;AC15II;EACE;AD65IN;AC15II;EACE;AD65IN;AC15II;EACE;AD65IN;AC15II;EACE;AD65IN;AC16II;EACE;AD66IN;AC16II;EACE;AD66IN;AC16II;EACE;AD66IN;AC16II;EACE;AD66IN;AC17II;EACE;AD67IN;AC17II;EACE;AD67IN;AC17II;EACE;AD67IN;AC17II;EACE;AD67IN;AC18II;EACE;AD68IN;AC18II;EACE;AD68IN;AC18II;EACE;AD68IN;AC18II;EACE;AD68IN;AC19II;EACE;AD69IN;AC19II;EACE;AD69IN;AC19II;EACE;AD69IN;AC19II;EACE;AD69IN;AC1+II;EACE;AD6+IN;AC1+II;EACE;AD6+IN;AC1+II;EACE;AD6+IN;AC1+II;EACE;AD6+IN;ACn8IA;EACE;ADs8IF;ACn8IA;EACE;ADs8IF;AC/7IA;EACE;ADk8IF;AC/7IA;EACE;ADk8IF;AC/7IA;EACE;ADk8IF;AC37IA;EACE;AD87IF;AC37IA;EACE;AD87IF;AC37IA;EACE;AD87IF;AC37IA;EACE;AD87IF;ACtjJI;EACE;ADyjJN;AC1jJI;EACE;AD6jJN;AC9jJI;EACE;ADikJN;AClkJI;EACE;ADqkJN;ACtkJI;EACE;ADykJN;AC1kJI;EACE;AD6kJN;AC9kJI;EACE;ADilJN;ACllJI;EACE;ADqlJN;ACtlJI;EACE;ADylJN;AC1lJI;EACE;AD6lJN;AC9lJI;EACE;ADimJN;AClmJI;EACE;ADqmJN;ACtmJI;EACE;ADymJN;AC1mJI;EACE;AD6mJN;AC9mJI;EACE;ADinJN;AClnJI;EACE;ADqnJN;ACtnJI;EACE;ADynJN;AC1nJI;EACE;AD6nJN;AC9nJI;EACE;ADioJN;ACloJI;EACE;ADqoJN;ACtoJI;EACE;ADyoJN;AC1oJI;EACE;AD6oJN;AC9oJI;EACE;ADipJN;AClpJI;EACE;ADqpJN;ACtpJI;EACE;ADypJN;AC1pJI;EACE;AD6pJN;AC9pJI;EACE;ADiqJN;AClqJI;EACE;ADqqJN;ACtqJI;EACE;ADyqJN;AC1qJI;EACE;AD6qJN;AC9qJI;EACE;ADirJN;AClrJI;EACE;ADqrJN;ACtrJI;EACE;ADyrJN;AC1rJI;EACE;AD6rJN;AC9rJI;EACE;ADisJN;AClsJI;EACE;ADqsJN;ACtsJI;EACE;ADysJN;AC1sJI;EACE;AD6sJN;AC9sJI;EACE;ADitJN;ACltJI;EACE;ADqtJN;ACttJI;EACE;ADytJN;AC1tJI;EACE;AD6tJN;AC9tJI;EACE;ADiuJN;ACluJI;EACE;ADquJN;ACtuJI;EACE;ADyuJN;AC1uJI;EACE;AD6uJN;AC9uJI;EACE;ADivJN;AClvJI;EACE;ADqvJN;ACtvJI;EACE;ADyvJN;AC1vJI;EACE;AD6vJN;AC9vJI;EACE;ADiwJN;AClwJI;EACE;ADqwJN;ACtwJI;EACE;ADywJN;AC1wJI;EACE;AD6wJN;AC9wJI;EACE;ADixJN;AClxJI;EACE;ADqxJN;ACtxJI;EACE;ADyxJN;AC1xJI;EACE;AD6xJN;AC9xJI;EACE;ADiyJN;AClyJI;EACE;ADqyJN;ACtyJI;EACE;ADyyJN;AC1yJI;EACE;AD6yJN;AC9yJI;EACE;ADizJN;AClzJI;EACE;ADqzJN;ACtzJI;EACE;ADyzJN;ACjzJI;EACE;EACA;ADozJN;ACjzJI;EACE;EACA;ADozJN;AC3zJI;EACE;EACA;AD8zJN;AC3zJI;EACE;EACA;AD8zJN;ACr0JI;EACE;EACA;ADw0JN;ACr0JI;EACE;EACA;ADw0JN;AC/0JI;EACE;EACA;ADk1JN;AC/0JI;EACE;EACA;ADk1JN;ACz1JI;EACE;EACA;AD41JN;ACz1JI;EACE;EACA;AD41JN;ACn2JI;EACE;EACA;ADs2JN;ACn2JI;EACE;EACA;ADs2JN;AC72JI;EACE;EACA;ADg3JN;AC72JI;EACE;EACA;ADg3JN;ACv3JI;EACE;EACA;AD03JN;ACv3JI;EACE;EACA;AD03JN;ACj4JI;EACE;EACA;ADo4JN;ACj4JI;EACE;EACA;ADo4JN;AC34JI;EACE;EACA;AD84JN;AC34JI;EACE;EACA;AD84JN;ACr5JI;EACE;EACA;ADw5JN;ACr5JI;EACE;EACA;ADw5JN;AC/5JI;EACE;EACA;ADk6JN;AC/5JI;EACE;EACA;ADk6JN;ACz6JI;EACE;EACA;AD46JN;ACz6JI;EACE;EACA;AD46JN;ACn7JI;EACE;EACA;ADs7JN;ACn7JI;EACE;EACA;ADs7JN;AC77JI;EACE;EACA;ADg8JN;AC77JI;EACE;EACA;ADg8JN;ACv8JI;EACE;EACA;AD08JN;ACv8JI;EACE;EACA;AD08JN;ACj9JI;EACE;EACA;ADo9JN;ACj9JI;EACE;EACA;ADo9JN;AC39JI;EACE;EACA;AD89JN;AC39JI;EACE;EACA;AD89JN;ACr+JI;EACE;EACA;ADw+JN;ACr+JI;EACE;EACA;ADw+JN;AC/+JI;EACE;EACA;ADk/JN;AC/+JI;EACE;EACA;ADk/JN;ACz/JI;EACE;EACA;AD4/JN;ACz/JI;EACE;EACA;AD4/JN;ACngKI;EACE;EACA;ADsgKN;ACngKI;EACE;EACA;ADsgKN;AC7gKI;EACE;EACA;ADghKN;AC7gKI;EACE;EACA;ADghKN;ACvhKI;EACE;EACA;AD0hKN;ACvhKI;EACE;EACA;AD0hKN;ACjiKI;EACE;EACA;ADoiKN;ACjiKI;EACE;EACA;ADoiKN;AC3iKI;EACE;EACA;AD8iKN;AC3iKI;EACE;EACA;AD8iKN;ACrjKI;EACE;EACA;ADwjKN;ACrjKI;EACE;EACA;ADwjKN;AC/jKI;EACE;EACA;ADkkKN;AC/jKI;EACE;EACA;ADkkKN;ACzkKI;EACE;EACA;AD4kKN;ACzkKI;EACE;EACA;AD4kKN;ACnlKI;EACE;EACA;ADslKN;ACnlKI;EACE;EACA;ADslKN;AC7lKI;EACE;EACA;ADgmKN;AC7lKI;EACE;EACA;ADgmKN;ACvmKI;EACE;EACA;AD0mKN;ACvmKI;EACE;EACA;AD0mKN;ACjnKI;EACE;EACA;ADonKN;ACjnKI;EACE;EACA;ADonKN;AC3nKI;EACE;EACA;AD8nKN;AC3nKI;EACE;EACA;AD8nKN;ACroKI;EACE;EACA;ADwoKN;ACroKI;EACE;EACA;ADwoKN;AC/oKI;EACE;EACA;ADkpKN;AC/oKI;EACE;EACA;ADkpKN;ACzpKI;EACE;EACA;AD4pKN;ACzpKI;EACE;EACA;AD4pKN;ACnqKI;EACE;EACA;ADsqKN;ACnqKI;EACE;EACA;ADsqKN;AC7qKI;EACE;EACA;ADgrKN;AC7qKI;EACE;EACA;ADgrKN;ACvrKI;EACE;EACA;AD0rKN;ACvrKI;EACE;EACA;AD0rKN;ACjsKI;EACE;EACA;ADosKN;ACjsKI;EACE;EACA;ADosKN;AC3sKI;EACE;EACA;AD8sKN;AC3sKI;EACE;EACA;AD8sKN;ACrtKI;EACE;EACA;ADwtKN;ACrtKI;EACE;EACA;ADwtKN;AC/tKI;EACE;EACA;ADkuKN;AC/tKI;EACE;EACA;ADkuKN;ACzuKI;EACE;EACA;AD4uKN;ACzuKI;EACE;EACA;AD4uKN;ACnvKI;EACE;EACA;ADsvKN;ACnvKI;EACE;EACA;ADsvKN;AC7vKI;EACE;EACA;ADgwKN;AC7vKI;EACE;EACA;ADgwKN;ACvwKI;EACE;EACA;AD0wKN;ACvwKI;EACE;EACA;AD0wKN;ACjxKI;EACE;EACA;ADoxKN;ACjxKI;EACE;EACA;ADoxKN;AC3xKI;EACE;EACA;AD8xKN;AC3xKI;EACE;EACA;AD8xKN;ACryKI;EACE;EACA;ADwyKN;ACryKI;EACE;EACA;ADwyKN;AC/yKI;EACE;EACA;ADkzKN;AC/yKI;EACE;EACA;ADkzKN;ACzzKI;EACE;EACA;AD4zKN;ACzzKI;EACE;EACA;AD4zKN;ACn0KI;EACE;EACA;ADs0KN;ACn0KI;EACE;EACA;ADs0KN;AC70KI;EACE;EACA;ADg1KN;AC70KI;EACE;EACA;ADg1KN;ACv1KI;EACE;EACA;AD01KN;ACv1KI;EACE;EACA;AD01KN;ACj2KI;EACE;EACA;ADo2KN;ACj2KI;EACE;EACA;ADo2KN;AC32KI;EACE;EACA;AD82KN;AC32KI;EACE;EACA;AD82KN;ACr3KI;EACE;EACA;ADw3KN;ACr3KI;EACE;EACA;ADw3KN;AC/3KI;EACE;EACA;ADk4KN;AC/3KI;EACE;EACA;ADk4KN;ACz4KI;EACE;EACA;AD44KN;ACz4KI;EACE;EACA;AD44KN;ACn5KI;EACE;EACA;ADs5KN;ACn5KI;EACE;EACA;ADs5KN;AC75KI;EACE;EACA;ADg6KN;AC75KI;EACE;EACA;ADg6KN;ACv6KI;EACE;EACA;AD06KN;ACv6KI;EACE;EACA;AD06KN;ACj7KI;EACE;EACA;ADo7KN;ACj7KI;EACE;EACA;ADo7KN;AC56KI;EACE;AD+6KN;AC56KI;EACE;AD+6KN;AC56KI;EACE;AD+6KN;AC56KI;EACE;AD+6KN;AC57KI;EACE;AD+7KN;AC57KI;EACE;AD+7KN;AC57KI;EACE;AD+7KN;AC57KI;EACE;AD+7KN;AC58KI;EACE;AD+8KN;AC58KI;EACE;AD+8KN;AC58KI;EACE;AD+8KN;AC58KI;EACE;AD+8KN;AC59KI;EACE;AD+9KN;AC59KI;EACE;AD+9KN;AC59KI;EACE;AD+9KN;AC59KI;EACE;AD+9KN;AC5+KI;EACE;AD++KN;AC5+KI;EACE;AD++KN;AC5+KI;EACE;AD++KN;AC5+KI;EACE;AD++KN;AC5/KI;EACE;AD+/KN;AC5/KI;EACE;AD+/KN;AC5/KI;EACE;AD+/KN;AC5/KI;EACE;AD+/KN;AC5gLI;EACE;AD+gLN;AC5gLI;EACE;AD+gLN;AC5gLI;EACE;AD+gLN;AC5gLI;EACE;AD+gLN;AC5hLI;EACE;AD+hLN;AC5hLI;EACE;AD+hLN;AC5hLI;EACE;AD+hLN;AC5hLI;EACE;AD+hLN;AC5iLI;EACE;AD+iLN;AC5iLI;EACE;AD+iLN;AC5iLI;EACE;AD+iLN;AC5iLI;EACE;AD+iLN;AC5jLI;EACE;AD+jLN;AC5jLI;EACE;AD+jLN;AC5jLI;EACE;AD+jLN;AC5jLI;EACE;AD+jLN;AC5kLI;EACE;AD+kLN;AC5kLI;EACE;AD+kLN;AC5kLI;EACE;AD+kLN;AC5kLI;EACE;AD+kLN;AC5lLI;EACE;AD+lLN;AC5lLI;EACE;AD+lLN;AC5lLI;EACE;AD+lLN;AC5lLI;EACE;AD+lLN;AC5mLI;EACE;AD+mLN;AC5mLI;EACE;AD+mLN;AC5mLI;EACE;AD+mLN;AC5mLI;EACE;AD+mLN;AC5nLI;EACE;AD+nLN;AC5nLI;EACE;AD+nLN;AC5nLI;EACE;AD+nLN;AC5nLI;EACE;AD+nLN;AC5oLI;EACE;AD+oLN;AC5oLI;EACE;AD+oLN;AC5oLI;EACE;AD+oLN;AC5oLI;EACE;AD+oLN;AC5pLI;EACE;AD+pLN;AC5pLI;EACE;AD+pLN;AC5pLI;EACE;AD+pLN;AC5pLI;EACE;AD+pLN;AC5qLI;EACE;AD+qLN;AC5qLI;EACE;AD+qLN;AC5qLI;EACE;AD+qLN;AC5qLI;EACE;AD+qLN;AC5rLI;EACE;AD+rLN;AC5rLI;EACE;AD+rLN;AC5rLI;EACE;AD+rLN;AC5rLI;EACE;AD+rLN;AC5sLI;EACE;AD+sLN;AC5sLI;EACE;AD+sLN;AC5sLI;EACE;AD+sLN;AC5sLI;EACE;AD+sLN;AC5tLI;EACE;AD+tLN;AC5tLI;EACE;AD+tLN;AC5tLI;EACE;AD+tLN;AC5tLI;EACE;AD+tLN;AC5uLI;EACE;AD+uLN;AC5uLI;EACE;AD+uLN;AC5uLI;EACE;AD+uLN;AC5uLI;EACE;AD+uLN;AC5vLI;EACE;AD+vLN;AC5vLI;EACE;AD+vLN;AC5vLI;EACE;AD+vLN;AC5vLI;EACE;AD+vLN;AC5wLI;EACE;AD+wLN;AC5wLI;EACE;AD+wLN;AC5wLI;EACE;AD+wLN;AC5wLI;EACE;AD+wLN;AC5xLI;EACE;AD+xLN;AC5xLI;EACE;AD+xLN;AC5xLI;EACE;AD+xLN;AC5xLI;EACE;AD+xLN;AC5yLI;EACE;AD+yLN;AC5yLI;EACE;AD+yLN;AC5yLI;EACE;AD+yLN;AC5yLI;EACE;AD+yLN;AC5zLI;EACE;AD+zLN;AC5zLI;EACE;AD+zLN;AC5zLI;EACE;AD+zLN;AC5zLI;EACE;AD+zLN;AC50LI;EACE;AD+0LN;AC50LI;EACE;AD+0LN;AC50LI;EACE;AD+0LN;AC50LI;EACE;AD+0LN;AC51LI;EACE;AD+1LN;AC51LI;EACE;AD+1LN;AC51LI;EACE;AD+1LN;AC51LI;EACE;AD+1LN;AC52LI;EACE;AD+2LN;AC52LI;EACE;AD+2LN;AC52LI;EACE;AD+2LN;AC52LI;EACE;AD+2LN;AC53LI;EACE;AD+3LN;AC53LI;EACE;AD+3LN;AC53LI;EACE;AD+3LN;AC53LI;EACE;AD+3LN;AC54LI;EACE;AD+4LN;AC54LI;EACE;AD+4LN;AC54LI;EACE;AD+4LN;AC54LI;EACE;AD+4LN;AC55LI;EACE;AD+5LN;AC55LI;EACE;AD+5LN;AC55LI;EACE;AD+5LN;AC55LI;EACE;AD+5LN;AC56LI;EACE;AD+6LN;AC56LI;EACE;AD+6LN;AC56LI;EACE;AD+6LN;AC56LI;EACE;AD+6LN;AC57LI;EACE;AD+7LN;AC57LI;EACE;AD+7LN;AC57LI;EACE;AD+7LN;AC57LI;EACE;AD+7LN;AC58LI;EACE;AD+8LN;AC58LI;EACE;AD+8LN;AC58LI;EACE;AD+8LN;AC58LI;EACE;AD+8LN;AC59LI;EACE;AD+9LN;AC59LI;EACE;AD+9LN;AC59LI;EACE;AD+9LN;AC59LI;EACE;AD+9LN;AC5+LI;EACE;AD++LN;AC5+LI;EACE;AD++LN;AC5+LI;EACE;AD++LN;AC5+LI;EACE;AD++LN;AC5/LI;EACE;AD+/LN;AC5/LI;EACE;AD+/LN;AC5/LI;EACE;AD+/LN;AC5/LI;EACE;AD+/LN;AC5gMI;EACE;AD+gMN;AC5gMI;EACE;AD+gMN;AC5gMI;EACE;AD+gMN;AC5gMI;EACE;AD+gMN;AC5hMI;EACE;AD+hMN;AC5hMI;EACE;AD+hMN;AC5hMI;EACE;AD+hMN;AC5hMI;EACE;AD+hMN;AC5iMI;EACE;AD+iMN;AC5iMI;EACE;AD+iMN;AC5iMI;EACE;AD+iMN;AC5iMI;EACE;AD+iMN;AC5jMI;EACE;AD+jMN;AC5jMI;EACE;AD+jMN;AC5jMI;EACE;AD+jMN;AC5jMI;EACE;AD+jMN;AC5kMI;EACE;AD+kMN;AC5kMI;EACE;AD+kMN;AC5kMI;EACE;AD+kMN;AC5kMI;EACE;AD+kMN;AC5lMI;EACE;AD+lMN;AC5lMI;EACE;AD+lMN;AC5lMI;EACE;AD+lMN;AC5lMI;EACE;AD+lMN;AC5mMI;EACE;AD+mMN;AC5mMI;EACE;AD+mMN;AC5mMI;EACE;AD+mMN;AC5mMI;EACE;AD+mMN;AC5nMI;EACE;AD+nMN;AC5nMI;EACE;AD+nMN;AC5nMI;EACE;AD+nMN;AC5nMI;EACE;AD+nMN;AC5oMI;EACE;AD+oMN;AC5oMI;EACE;AD+oMN;AC5oMI;EACE;AD+oMN;AC5oMI;EACE;AD+oMN;AC5pMI;EACE;AD+pMN;AC5pMI;EACE;AD+pMN;AC5pMI;EACE;AD+pMN;AC5pMI;EACE;AD+pMN;AC5qMI;EACE;AD+qMN;AC5qMI;EACE;AD+qMN;AC5qMI;EACE;AD+qMN;AC5qMI;EACE;AD+qMN;AC5rMI;EACE;AD+rMN;AC5rMI;EACE;AD+rMN;AC5rMI;EACE;AD+rMN;AC5rMI;EACE;AD+rMN;AC5sMI;EACE;AD+sMN;AC5sMI;EACE;AD+sMN;AC5sMI;EACE;AD+sMN;AC5sMI;EACE;AD+sMN;AC5tMI;EACE;AD+tMN;AC5tMI;EACE;AD+tMN;AC5tMI;EACE;AD+tMN;AC5tMI;EACE;AD+tMN;AC5uMI;EACE;AD+uMN;AC5uMI;EACE;AD+uMN;AC5uMI;EACE;AD+uMN;AC5uMI;EACE;AD+uMN;AC5vMI;EACE;AD+vMN;AC5vMI;EACE;AD+vMN;AC5vMI;EACE;AD+vMN;AC5vMI;EACE;AD+vMN;AC5wMI;EACE;AD+wMN;AC5wMI;EACE;AD+wMN;AC5wMI;EACE;AD+wMN;AC5wMI;EACE;AD+wMN;AC5xMI;EACE;AD+xMN;AC5xMI;EACE;AD+xMN;AC5xMI;EACE;AD+xMN;AC5xMI;EACE;AD+xMN;AC5yMI;EACE;AD+yMN;AC5yMI;EACE;AD+yMN;AC5yMI;EACE;AD+yMN;AC5yMI;EACE;AD+yMN;AC5zMI;EACE;AD+zMN;AC5zMI;EACE;AD+zMN;AC5zMI;EACE;AD+zMN;AC5zMI;EACE;AD+zMN;AC50MI;EACE;AD+0MN;AC50MI;EACE;AD+0MN;AC50MI;EACE;AD+0MN;AC50MI;EACE;AD+0MN;AC51MI;EACE;AD+1MN;AC51MI;EACE;AD+1MN;AC51MI;EACE;AD+1MN;AC51MI;EACE;AD+1MN;AC52MI;EACE;AD+2MN;AC52MI;EACE;AD+2MN;AC52MI;EACE;AD+2MN;AC52MI;EACE;AD+2MN;AC53MI;EACE;AD+3MN;AC53MI;EACE;AD+3MN;AC53MI;EACE;AD+3MN;AC53MI;EACE;AD+3MN;AC54MI;EACE;AD+4MN;AC54MI;EACE;AD+4MN;AC54MI;EACE;AD+4MN;AC54MI;EACE;AD+4MN;AC55MI;EACE;AD+5MN;AC55MI;EACE;AD+5MN;AC55MI;EACE;AD+5MN;AC55MI;EACE;AD+5MN;AC56MI;EACE;AD+6MN;AC56MI;EACE;AD+6MN;AC56MI;EACE;AD+6MN;AC56MI;EACE;AD+6MN;ACz6MI;EACE;AD46MN;ACz6MI;EACE;AD46MN;ACz6MI;EACE;AD46MN;ACz6MI;EACE;AD46MN;ACz6MI;EACE;AD46MN;ACz6MI;EACE;EACA;AD46MN;ACz6MI;EACE;EACA;AD46MN;ACl/MI;EACE;ADq/MN;ACt/MI;EACE;ADy/MN;AC1/MI;EACE;AD6/MN;AC9/MI;EACE;ADigNN;AClgNI;EACE;ADqgNN;ACtgNI;EACE;ADygNN;AC1gNI;EACE;AD6gNN;AC9gNI;EACE;ADihNN;AClhNI;EACE;ADqhNN;ACthNI;EACE;ADyhNN;AC1hNI;EACE;AD6hNN;AC9hNI;EACE;ADiiNN;ACliNI;EACE;ADqiNN;ACtiNI;EACE;ADyiNN;AC1iNI;EACE;AD6iNN;AC9iNI;EACE;ADijNN;ACljNI;EACE;ADqjNN;ACtjNI;EACE;ADyjNN;AC1jNI;EACE;AD6jNN;AC9jNI;EACE;ADikNN;AClkNI;EACE;ADqkNN;ACtkNI;EACE;ADykNN;AC1kNI;EACE;AD6kNN;AC9kNI;EACE;ADilNN;ACllNI;EACE;ADqlNN;ACtlNI;EACE;ADylNN;AC1lNI;EACE;AD6lNN;AC9lNI;EACE;ADimNN;AClmNI;EACE;ADqmNN;ACtmNI;EACE;ADymNN;AC1mNI;EACE;AD6mNN;AC9mNI;EACE;ADinNN;AClnNI;EACE;ADqnNN;ACtnNI;EACE;ADynNN;AC1nNI;EACE;AD6nNN;AC9nNI;EACE;ADioNN;ACloNI;EACE;ADqoNN;ACtoNI;EACE;ADyoNN;AC1oNI;EACE;AD6oNN;AC9oNI;EACE;ADipNN;AClpNI;EACE;ADqpNN;ACtpNI;EACE;ADypNN;AC1pNI;EACE;AD6pNN;AC9pNI;EACE;ADiqNN;AClqNI;EACE;ADqqNN;ACtqNI;EACE;ADyqNN;AC1qNI;EACE;AD6qNN;AC9qNI;EACE;ADirNN;AClrNI;EACE;ADqrNN;ACtrNI;EACE;ADyrNN;AC1rNI;EACE;AD6rNN;AC9rNI;EACE;ADisNN;AClsNI;EACE;ADqsNN;ACtsNI;EACE;ADysNN;AC1sNI;EACE;AD6sNN;AC9sNI;EACE;ADitNN;ACltNI;EACE;ADqtNN;ACttNI;EACE;ADytNN;AC1tNI;EACE;AD6tNN;AC9tNI;EACE;ADiuNN;ACluNI;EACE;ADquNN;ACtuNI;EACE;ADyuNN;AC1uNI;EACE;AD6uNN;AC9uNI;EACE;ADivNN;AClvNI;EACE;ADqvNN;AC7uNI;EACE;EACA;ADgvNN;AC7uNI;EACE;EACA;ADgvNN;ACvvNI;EACE;EACA;AD0vNN;ACvvNI;EACE;EACA;AD0vNN;ACjwNI;EACE;EACA;ADowNN;ACjwNI;EACE;EACA;ADowNN;AC3wNI;EACE;EACA;AD8wNN;AC3wNI;EACE;EACA;AD8wNN;ACrxNI;EACE;EACA;ADwxNN;ACrxNI;EACE;EACA;ADwxNN;AC/xNI;EACE;EACA;ADkyNN;AC/xNI;EACE;EACA;ADkyNN;ACzyNI;EACE;EACA;AD4yNN;ACzyNI;EACE;EACA;AD4yNN;ACnzNI;EACE;EACA;ADszNN;ACnzNI;EACE;EACA;ADszNN;AC7zNI;EACE;EACA;ADg0NN;AC7zNI;EACE;EACA;ADg0NN;ACv0NI;EACE;EACA;AD00NN;ACv0NI;EACE;EACA;AD00NN;ACj1NI;EACE;EACA;ADo1NN;ACj1NI;EACE;EACA;ADo1NN;AC31NI;EACE;EACA;AD81NN;AC31NI;EACE;EACA;AD81NN;ACr2NI;EACE;EACA;ADw2NN;ACr2NI;EACE;EACA;ADw2NN;AC/2NI;EACE;EACA;ADk3NN;AC/2NI;EACE;EACA;ADk3NN;ACz3NI;EACE;EACA;AD43NN;ACz3NI;EACE;EACA;AD43NN;ACn4NI;EACE;EACA;ADs4NN;ACn4NI;EACE;EACA;ADs4NN;AC74NI;EACE;EACA;ADg5NN;AC74NI;EACE;EACA;ADg5NN;ACv5NI;EACE;EACA;AD05NN;ACv5NI;EACE;EACA;AD05NN;ACj6NI;EACE;EACA;ADo6NN;ACj6NI;EACE;EACA;ADo6NN;AC36NI;EACE;EACA;AD86NN;AC36NI;EACE;EACA;AD86NN;ACr7NI;EACE;EACA;ADw7NN;ACr7NI;EACE;EACA;ADw7NN;AC/7NI;EACE;EACA;ADk8NN;AC/7NI;EACE;EACA;ADk8NN;ACz8NI;EACE;EACA;AD48NN;ACz8NI;EACE;EACA;AD48NN;ACn9NI;EACE;EACA;ADs9NN;ACn9NI;EACE;EACA;ADs9NN;AC79NI;EACE;EACA;ADg+NN;AC79NI;EACE;EACA;ADg+NN;ACv+NI;EACE;EACA;AD0+NN;ACv+NI;EACE;EACA;AD0+NN;ACj/NI;EACE;EACA;ADo/NN;ACj/NI;EACE;EACA;ADo/NN;AC3/NI;EACE;EACA;AD8/NN;AC3/NI;EACE;EACA;AD8/NN;ACrgOI;EACE;EACA;ADwgON;ACrgOI;EACE;EACA;ADwgON;AC/gOI;EACE;EACA;ADkhON;AC/gOI;EACE;EACA;ADkhON;ACzhOI;EACE;EACA;AD4hON;ACzhOI;EACE;EACA;AD4hON;ACniOI;EACE;EACA;ADsiON;ACniOI;EACE;EACA;ADsiON;AC7iOI;EACE;EACA;ADgjON;AC7iOI;EACE;EACA;ADgjON;ACvjOI;EACE;EACA;AD0jON;ACvjOI;EACE;EACA;AD0jON;ACjkOI;EACE;EACA;ADokON;ACjkOI;EACE;EACA;ADokON;AC3kOI;EACE;EACA;AD8kON;AC3kOI;EACE;EACA;AD8kON;ACrlOI;EACE;EACA;ADwlON;ACrlOI;EACE;EACA;ADwlON;AC/lOI;EACE;EACA;ADkmON;AC/lOI;EACE;EACA;ADkmON;ACzmOI;EACE;EACA;AD4mON;ACzmOI;EACE;EACA;AD4mON;ACnnOI;EACE;EACA;ADsnON;ACnnOI;EACE;EACA;ADsnON;AC7nOI;EACE;EACA;ADgoON;AC7nOI;EACE;EACA;ADgoON;ACvoOI;EACE;EACA;AD0oON;ACvoOI;EACE;EACA;AD0oON;ACjpOI;EACE;EACA;ADopON;ACjpOI;EACE;EACA;ADopON;AC3pOI;EACE;EACA;AD8pON;AC3pOI;EACE;EACA;AD8pON;ACrqOI;EACE;EACA;ADwqON;ACrqOI;EACE;EACA;ADwqON;AC/qOI;EACE;EACA;ADkrON;AC/qOI;EACE;EACA;ADkrON;ACzrOI;EACE;EACA;AD4rON;ACzrOI;EACE;EACA;AD4rON;ACnsOI;EACE;EACA;ADssON;ACnsOI;EACE;EACA;ADssON;AC7sOI;EACE;EACA;ADgtON;AC7sOI;EACE;EACA;ADgtON;ACvtOI;EACE;EACA;AD0tON;ACvtOI;EACE;EACA;AD0tON;ACjuOI;EACE;EACA;ADouON;ACjuOI;EACE;EACA;ADouON;AC3uOI;EACE;EACA;AD8uON;AC3uOI;EACE;EACA;AD8uON;ACrvOI;EACE;EACA;ADwvON;ACrvOI;EACE;EACA;ADwvON;AC/vOI;EACE;EACA;ADkwON;AC/vOI;EACE;EACA;ADkwON;ACzwOI;EACE;EACA;AD4wON;ACzwOI;EACE;EACA;AD4wON;ACnxOI;EACE;EACA;ADsxON;ACnxOI;EACE;EACA;ADsxON;AC7xOI;EACE;EACA;ADgyON;AC7xOI;EACE;EACA;ADgyON;ACvyOI;EACE;EACA;AD0yON;ACvyOI;EACE;EACA;AD0yON;ACjzOI;EACE;EACA;ADozON;ACjzOI;EACE;EACA;ADozON;AC3zOI;EACE;EACA;AD8zON;AC3zOI;EACE;EACA;AD8zON;ACr0OI;EACE;EACA;ADw0ON;ACr0OI;EACE;EACA;ADw0ON;AC/0OI;EACE;EACA;ADk1ON;AC/0OI;EACE;EACA;ADk1ON;ACz1OI;EACE;EACA;AD41ON;ACz1OI;EACE;EACA;AD41ON;ACn2OI;EACE;EACA;ADs2ON;ACn2OI;EACE;EACA;ADs2ON;AC72OI;EACE;EACA;ADg3ON;AC72OI;EACE;EACA;ADg3ON;ACx2OI;EACE;AD22ON;ACx2OI;EACE;AD22ON;ACx2OI;EACE;AD22ON;ACx2OI;EACE;AD22ON;ACx3OI;EACE;AD23ON;ACx3OI;EACE;AD23ON;ACx3OI;EACE;AD23ON;ACx3OI;EACE;AD23ON;ACx4OI;EACE;AD24ON;ACx4OI;EACE;AD24ON;ACx4OI;EACE;AD24ON;ACx4OI;EACE;AD24ON;ACx5OI;EACE;AD25ON;ACx5OI;EACE;AD25ON;ACx5OI;EACE;AD25ON;ACx5OI;EACE;AD25ON;ACx6OI;EACE;AD26ON;ACx6OI;EACE;AD26ON;ACx6OI;EACE;AD26ON;ACx6OI;EACE;AD26ON;ACx7OI;EACE;AD27ON;ACx7OI;EACE;AD27ON;ACx7OI;EACE;AD27ON;ACx7OI;EACE;AD27ON;ACx8OI;EACE;AD28ON;ACx8OI;EACE;AD28ON;ACx8OI;EACE;AD28ON;ACx8OI;EACE;AD28ON;ACx9OI;EACE;AD29ON;ACx9OI;EACE;AD29ON;ACx9OI;EACE;AD29ON;ACx9OI;EACE;AD29ON;ACx+OI;EACE;AD2+ON;ACx+OI;EACE;AD2+ON;ACx+OI;EACE;AD2+ON;ACx+OI;EACE;AD2+ON;ACx/OI;EACE;AD2/ON;ACx/OI;EACE;AD2/ON;ACx/OI;EACE;AD2/ON;ACx/OI;EACE;AD2/ON;ACxgPI;EACE;AD2gPN;ACxgPI;EACE;AD2gPN;ACxgPI;EACE;AD2gPN;ACxgPI;EACE;AD2gPN;ACxhPI;EACE;AD2hPN;ACxhPI;EACE;AD2hPN;ACxhPI;EACE;AD2hPN;ACxhPI;EACE;AD2hPN;ACxiPI;EACE;AD2iPN;ACxiPI;EACE;AD2iPN;ACxiPI;EACE;AD2iPN;ACxiPI;EACE;AD2iPN;ACxjPI;EACE;AD2jPN;ACxjPI;EACE;AD2jPN;ACxjPI;EACE;AD2jPN;ACxjPI;EACE;AD2jPN;ACxkPI;EACE;AD2kPN;ACxkPI;EACE;AD2kPN;ACxkPI;EACE;AD2kPN;ACxkPI;EACE;AD2kPN;ACxlPI;EACE;AD2lPN;ACxlPI;EACE;AD2lPN;ACxlPI;EACE;AD2lPN;ACxlPI;EACE;AD2lPN;ACxmPI;EACE;AD2mPN;ACxmPI;EACE;AD2mPN;ACxmPI;EACE;AD2mPN;ACxmPI;EACE;AD2mPN;ACxnPI;EACE;AD2nPN;ACxnPI;EACE;AD2nPN;ACxnPI;EACE;AD2nPN;ACxnPI;EACE;AD2nPN;ACxoPI;EACE;AD2oPN;ACxoPI;EACE;AD2oPN;ACxoPI;EACE;AD2oPN;ACxoPI;EACE;AD2oPN;ACxpPI;EACE;AD2pPN;ACxpPI;EACE;AD2pPN;ACxpPI;EACE;AD2pPN;ACxpPI;EACE;AD2pPN;ACxqPI;EACE;AD2qPN;ACxqPI;EACE;AD2qPN;ACxqPI;EACE;AD2qPN;ACxqPI;EACE;AD2qPN;ACxrPI;EACE;AD2rPN;ACxrPI;EACE;AD2rPN;ACxrPI;EACE;AD2rPN;ACxrPI;EACE;AD2rPN;ACxsPI;EACE;AD2sPN;ACxsPI;EACE;AD2sPN;ACxsPI;EACE;AD2sPN;ACxsPI;EACE;AD2sPN;ACxtPI;EACE;AD2tPN;ACxtPI;EACE;AD2tPN;ACxtPI;EACE;AD2tPN;ACxtPI;EACE;AD2tPN;ACxuPI;EACE;AD2uPN;ACxuPI;EACE;AD2uPN;ACxuPI;EACE;AD2uPN;ACxuPI;EACE;AD2uPN;ACxvPI;EACE;AD2vPN;ACxvPI;EACE;AD2vPN;ACxvPI;EACE;AD2vPN;ACxvPI;EACE;AD2vPN;ACxwPI;EACE;AD2wPN;ACxwPI;EACE;AD2wPN;ACxwPI;EACE;AD2wPN;ACxwPI;EACE;AD2wPN;ACxxPI;EACE;AD2xPN;ACxxPI;EACE;AD2xPN;ACxxPI;EACE;AD2xPN;ACxxPI;EACE;AD2xPN;ACxyPI;EACE;AD2yPN;ACxyPI;EACE;AD2yPN;ACxyPI;EACE;AD2yPN;ACxyPI;EACE;AD2yPN;ACxzPI;EACE;AD2zPN;ACxzPI;EACE;AD2zPN;ACxzPI;EACE;AD2zPN;ACxzPI;EACE;AD2zPN;ACx0PI;EACE;AD20PN;ACx0PI;EACE;AD20PN;ACx0PI;EACE;AD20PN;ACx0PI;EACE;AD20PN;ACx1PI;EACE;AD21PN;ACx1PI;EACE;AD21PN;ACx1PI;EACE;AD21PN;ACx1PI;EACE;AD21PN;ACx2PI;EACE;AD22PN;ACx2PI;EACE;AD22PN;ACx2PI;EACE;AD22PN;ACx2PI;EACE;AD22PN;ACx3PI;EACE;AD23PN;ACx3PI;EACE;AD23PN;ACx3PI;EACE;AD23PN;ACx3PI;EACE;AD23PN;ACx4PI;EACE;AD24PN;ACx4PI;EACE;AD24PN;ACx4PI;EACE;AD24PN;ACx4PI;EACE;AD24PN;ACx5PI;EACE;AD25PN;ACx5PI;EACE;AD25PN;ACx5PI;EACE;AD25PN;ACx5PI;EACE;AD25PN;ACx6PI;EACE;AD26PN;ACx6PI;EACE;AD26PN;ACx6PI;EACE;AD26PN;ACx6PI;EACE;AD26PN;ACx7PI;EACE;AD27PN;ACx7PI;EACE;AD27PN;ACx7PI;EACE;AD27PN;ACx7PI;EACE;AD27PN;ACx8PI;EACE;AD28PN;ACx8PI;EACE;AD28PN;ACx8PI;EACE;AD28PN;ACx8PI;EACE;AD28PN;ACx9PI;EACE;AD29PN;ACx9PI;EACE;AD29PN;ACx9PI;EACE;AD29PN;ACx9PI;EACE;AD29PN;ACx+PI;EACE;AD2+PN;ACx+PI;EACE;AD2+PN;ACx+PI;EACE;AD2+PN;ACx+PI;EACE;AD2+PN;ACx/PI;EACE;AD2/PN;ACx/PI;EACE;AD2/PN;ACx/PI;EACE;AD2/PN;ACx/PI;EACE;AD2/PN;ACxgQI;EACE;AD2gQN;ACxgQI;EACE;AD2gQN;ACxgQI;EACE;AD2gQN;ACxgQI;EACE;AD2gQN;ACxhQI;EACE;AD2hQN;ACxhQI;EACE;AD2hQN;ACxhQI;EACE;AD2hQN;ACxhQI;EACE;AD2hQN;ACxiQI;EACE;AD2iQN;ACxiQI;EACE;AD2iQN;ACxiQI;EACE;AD2iQN;ACxiQI;EACE;AD2iQN;ACxjQI;EACE;AD2jQN;ACxjQI;EACE;AD2jQN;ACxjQI;EACE;AD2jQN;ACxjQI;EACE;AD2jQN;ACxkQI;EACE;AD2kQN;ACxkQI;EACE;AD2kQN;ACxkQI;EACE;AD2kQN;ACxkQI;EACE;AD2kQN;ACxlQI;EACE;AD2lQN;ACxlQI;EACE;AD2lQN;ACxlQI;EACE;AD2lQN;ACxlQI;EACE;AD2lQN;ACxmQI;EACE;AD2mQN;ACxmQI;EACE;AD2mQN;ACxmQI;EACE;AD2mQN;ACxmQI;EACE;AD2mQN;ACxnQI;EACE;AD2nQN;ACxnQI;EACE;AD2nQN;ACxnQI;EACE;AD2nQN;ACxnQI;EACE;AD2nQN;ACxoQI;EACE;AD2oQN;ACxoQI;EACE;AD2oQN;ACxoQI;EACE;AD2oQN;ACxoQI;EACE;AD2oQN;ACxpQI;EACE;AD2pQN;ACxpQI;EACE;AD2pQN;ACxpQI;EACE;AD2pQN;ACxpQI;EACE;AD2pQN;ACxqQI;EACE;AD2qQN;ACxqQI;EACE;AD2qQN;ACxqQI;EACE;AD2qQN;ACxqQI;EACE;AD2qQN;ACxrQI;EACE;AD2rQN;ACxrQI;EACE;AD2rQN;ACxrQI;EACE;AD2rQN;ACxrQI;EACE;AD2rQN;ACxsQI;EACE;AD2sQN;ACxsQI;EACE;AD2sQN;ACxsQI;EACE;AD2sQN;ACxsQI;EACE;AD2sQN;ACxtQI;EACE;AD2tQN;ACxtQI;EACE;AD2tQN;ACxtQI;EACE;AD2tQN;ACxtQI;EACE;AD2tQN;ACxuQI;EACE;AD2uQN;ACxuQI;EACE;AD2uQN;ACxuQI;EACE;AD2uQN;ACxuQI;EACE;AD2uQN;ACxvQI;EACE;AD2vQN;ACxvQI;EACE;AD2vQN;ACxvQI;EACE;AD2vQN;ACxvQI;EACE;AD2vQN;ACxwQI;EACE;AD2wQN;ACxwQI;EACE;AD2wQN;ACxwQI;EACE;AD2wQN;ACxwQI;EACE;AD2wQN;ACxxQI;EACE;AD2xQN;ACxxQI;EACE;AD2xQN;ACxxQI;EACE;AD2xQN;ACxxQI;EACE;AD2xQN;ACxyQI;EACE;AD2yQN;ACxyQI;EACE;AD2yQN;ACxyQI;EACE;AD2yQN;ACxyQI;EACE;AD2yQN;ACxzQI;EACE;AD2zQN;ACxzQI;EACE;AD2zQN;ACxzQI;EACE;AD2zQN;ACxzQI;EACE;AD2zQN;ACx0QI;EACE;AD20QN;ACx0QI;EACE;AD20QN;ACx0QI;EACE;AD20QN;ACx0QI;EACE;AD20QN;ACx1QI;EACE;AD21QN;ACx1QI;EACE;AD21QN;ACx1QI;EACE;AD21QN;ACx1QI;EACE;AD21QN;ACx2QI;EACE;AD22QN;ACx2QI;EACE;AD22QN;ACx2QI;EACE;AD22QN;ACx2QI;EACE;AD22QN;ACj0QA;EACE;ADo0QF;ACj0QA;EACE;ADo0QF;AC7zQA;EACE;ADg0QF;AC7zQA;EACE;ADg0QF;AC7zQA;EACE;ADg0QF;ACzzQA;EACE;AD4zQF;ACzzQA;EACE;AD4zQF;ACzzQA;EACE;AD4zQF;ACzzQA;EACE;AD4zQF;ACp7QI;EACE;ADu7QN;ACx7QI;EACE;AD27QN;AC57QI;EACE;AD+7QN;ACh8QI;EACE;ADm8QN;ACp8QI;EACE;ADu8QN;ACx8QI;EACE;AD28QN;AC58QI;EACE;AD+8QN;ACh9QI;EACE;ADm9QN;ACp9QI;EACE;ADu9QN;ACx9QI;EACE;AD29QN;AC59QI;EACE;AD+9QN;ACh+QI;EACE;ADm+QN;ACp+QI;EACE;ADu+QN;ACx+QI;EACE;AD2+QN;AC5+QI;EACE;AD++QN;ACh/QI;EACE;ADm/QN;ACp/QI;EACE;ADu/QN;ACx/QI;EACE;AD2/QN;AC5/QI;EACE;AD+/QN;AChgRI;EACE;ADmgRN;ACpgRI;EACE;ADugRN;ACxgRI;EACE;AD2gRN;AC5gRI;EACE;AD+gRN;AChhRI;EACE;ADmhRN;ACphRI;EACE;ADuhRN;ACxhRI;EACE;AD2hRN;AC5hRI;EACE;AD+hRN;AChiRI;EACE;ADmiRN;ACpiRI;EACE;ADuiRN;ACxiRI;EACE;AD2iRN;AC5iRI;EACE;AD+iRN;AChjRI;EACE;ADmjRN;ACpjRI;EACE;ADujRN;ACxjRI;EACE;AD2jRN;AC5jRI;EACE;AD+jRN;AChkRI;EACE;ADmkRN;ACpkRI;EACE;ADukRN;ACxkRI;EACE;AD2kRN;AC5kRI;EACE;AD+kRN;AChlRI;EACE;ADmlRN;ACplRI;EACE;ADulRN;ACxlRI;EACE;AD2lRN;AC5lRI;EACE;AD+lRN;AChmRI;EACE;ADmmRN;ACpmRI;EACE;ADumRN;ACxmRI;EACE;AD2mRN;AC5mRI;EACE;AD+mRN;AChnRI;EACE;ADmnRN;ACpnRI;EACE;ADunRN;ACxnRI;EACE;AD2nRN;AC5nRI;EACE;AD+nRN;AChoRI;EACE;ADmoRN;ACpoRI;EACE;ADuoRN;ACxoRI;EACE;AD2oRN;AC5oRI;EACE;AD+oRN;AChpRI;EACE;ADmpRN;ACppRI;EACE;ADupRN;ACxpRI;EACE;AD2pRN;AC5pRI;EACE;AD+pRN;AChqRI;EACE;ADmqRN;ACpqRI;EACE;ADuqRN;ACxqRI;EACE;AD2qRN;AC5qRI;EACE;AD+qRN;AChrRI;EACE;ADmrRN;ACprRI;EACE;ADurRN;AC/qRI;EACE;EACA;ADkrRN;AC/qRI;EACE;EACA;ADkrRN;ACzrRI;EACE;EACA;AD4rRN;ACzrRI;EACE;EACA;AD4rRN;ACnsRI;EACE;EACA;ADssRN;ACnsRI;EACE;EACA;ADssRN;AC7sRI;EACE;EACA;ADgtRN;AC7sRI;EACE;EACA;ADgtRN;ACvtRI;EACE;EACA;AD0tRN;ACvtRI;EACE;EACA;AD0tRN;ACjuRI;EACE;EACA;ADouRN;ACjuRI;EACE;EACA;ADouRN;AC3uRI;EACE;EACA;AD8uRN;AC3uRI;EACE;EACA;AD8uRN;ACrvRI;EACE;EACA;ADwvRN;ACrvRI;EACE;EACA;ADwvRN;AC/vRI;EACE;EACA;ADkwRN;AC/vRI;EACE;EACA;ADkwRN;ACzwRI;EACE;EACA;AD4wRN;ACzwRI;EACE;EACA;AD4wRN;ACnxRI;EACE;EACA;ADsxRN;ACnxRI;EACE;EACA;ADsxRN;AC7xRI;EACE;EACA;ADgyRN;AC7xRI;EACE;EACA;ADgyRN;ACvyRI;EACE;EACA;AD0yRN;ACvyRI;EACE;EACA;AD0yRN;ACjzRI;EACE;EACA;ADozRN;ACjzRI;EACE;EACA;ADozRN;AC3zRI;EACE;EACA;AD8zRN;AC3zRI;EACE;EACA;AD8zRN;ACr0RI;EACE;EACA;ADw0RN;ACr0RI;EACE;EACA;ADw0RN;AC/0RI;EACE;EACA;ADk1RN;AC/0RI;EACE;EACA;ADk1RN;ACz1RI;EACE;EACA;AD41RN;ACz1RI;EACE;EACA;AD41RN;ACn2RI;EACE;EACA;ADs2RN;ACn2RI;EACE;EACA;ADs2RN;AC72RI;EACE;EACA;ADg3RN;AC72RI;EACE;EACA;ADg3RN;ACv3RI;EACE;EACA;AD03RN;ACv3RI;EACE;EACA;AD03RN;ACj4RI;EACE;EACA;ADo4RN;ACj4RI;EACE;EACA;ADo4RN;AC34RI;EACE;EACA;AD84RN;AC34RI;EACE;EACA;AD84RN;ACr5RI;EACE;EACA;ADw5RN;ACr5RI;EACE;EACA;ADw5RN;AC/5RI;EACE;EACA;ADk6RN;AC/5RI;EACE;EACA;ADk6RN;ACz6RI;EACE;EACA;AD46RN;ACz6RI;EACE;EACA;AD46RN;ACn7RI;EACE;EACA;ADs7RN;ACn7RI;EACE;EACA;ADs7RN;AC77RI;EACE;EACA;ADg8RN;AC77RI;EACE;EACA;ADg8RN;ACv8RI;EACE;EACA;AD08RN;ACv8RI;EACE;EACA;AD08RN;ACj9RI;EACE;EACA;ADo9RN;ACj9RI;EACE;EACA;ADo9RN;AC39RI;EACE;EACA;AD89RN;AC39RI;EACE;EACA;AD89RN;ACr+RI;EACE;EACA;ADw+RN;ACr+RI;EACE;EACA;ADw+RN;AC/+RI;EACE;EACA;ADk/RN;AC/+RI;EACE;EACA;ADk/RN;ACz/RI;EACE;EACA;AD4/RN;ACz/RI;EACE;EACA;AD4/RN;ACngSI;EACE;EACA;ADsgSN;ACngSI;EACE;EACA;ADsgSN;AC7gSI;EACE;EACA;ADghSN;AC7gSI;EACE;EACA;ADghSN;ACvhSI;EACE;EACA;AD0hSN;ACvhSI;EACE;EACA;AD0hSN;ACjiSI;EACE;EACA;ADoiSN;ACjiSI;EACE;EACA;ADoiSN;AC3iSI;EACE;EACA;AD8iSN;AC3iSI;EACE;EACA;AD8iSN;ACrjSI;EACE;EACA;ADwjSN;ACrjSI;EACE;EACA;ADwjSN;AC/jSI;EACE;EACA;ADkkSN;AC/jSI;EACE;EACA;ADkkSN;ACzkSI;EACE;EACA;AD4kSN;ACzkSI;EACE;EACA;AD4kSN;ACnlSI;EACE;EACA;ADslSN;ACnlSI;EACE;EACA;ADslSN;AC7lSI;EACE;EACA;ADgmSN;AC7lSI;EACE;EACA;ADgmSN;ACvmSI;EACE;EACA;AD0mSN;ACvmSI;EACE;EACA;AD0mSN;ACjnSI;EACE;EACA;ADonSN;ACjnSI;EACE;EACA;ADonSN;AC3nSI;EACE;EACA;AD8nSN;AC3nSI;EACE;EACA;AD8nSN;ACroSI;EACE;EACA;ADwoSN;ACroSI;EACE;EACA;ADwoSN;AC/oSI;EACE;EACA;ADkpSN;AC/oSI;EACE;EACA;ADkpSN;ACzpSI;EACE;EACA;AD4pSN;ACzpSI;EACE;EACA;AD4pSN;ACnqSI;EACE;EACA;ADsqSN;ACnqSI;EACE;EACA;ADsqSN;AC7qSI;EACE;EACA;ADgrSN;AC7qSI;EACE;EACA;ADgrSN;ACvrSI;EACE;EACA;AD0rSN;ACvrSI;EACE;EACA;AD0rSN;ACjsSI;EACE;EACA;ADosSN;ACjsSI;EACE;EACA;ADosSN;AC3sSI;EACE;EACA;AD8sSN;AC3sSI;EACE;EACA;AD8sSN;ACrtSI;EACE;EACA;ADwtSN;ACrtSI;EACE;EACA;ADwtSN;AC/tSI;EACE;EACA;ADkuSN;AC/tSI;EACE;EACA;ADkuSN;ACzuSI;EACE;EACA;AD4uSN;ACzuSI;EACE;EACA;AD4uSN;ACnvSI;EACE;EACA;ADsvSN;ACnvSI;EACE;EACA;ADsvSN;AC7vSI;EACE;EACA;ADgwSN;AC7vSI;EACE;EACA;ADgwSN;ACvwSI;EACE;EACA;AD0wSN;ACvwSI;EACE;EACA;AD0wSN;ACjxSI;EACE;EACA;ADoxSN;ACjxSI;EACE;EACA;ADoxSN;AC3xSI;EACE;EACA;AD8xSN;AC3xSI;EACE;EACA;AD8xSN;ACrySI;EACE;EACA;ADwySN;ACrySI;EACE;EACA;ADwySN;AC/ySI;EACE;EACA;ADkzSN;AC/ySI;EACE;EACA;ADkzSN;AC1ySI;EACE;AD6ySN;AC1ySI;EACE;AD6ySN;AC1ySI;EACE;AD6ySN;AC1ySI;EACE;AD6ySN;AC1zSI;EACE;AD6zSN;AC1zSI;EACE;AD6zSN;AC1zSI;EACE;AD6zSN;AC1zSI;EACE;AD6zSN;AC10SI;EACE;AD60SN;AC10SI;EACE;AD60SN;AC10SI;EACE;AD60SN;AC10SI;EACE;AD60SN;AC11SI;EACE;AD61SN;AC11SI;EACE;AD61SN;AC11SI;EACE;AD61SN;AC11SI;EACE;AD61SN;AC12SI;EACE;AD62SN;AC12SI;EACE;AD62SN;AC12SI;EACE;AD62SN;AC12SI;EACE;AD62SN;AC13SI;EACE;AD63SN;AC13SI;EACE;AD63SN;AC13SI;EACE;AD63SN;AC13SI;EACE;AD63SN;AC14SI;EACE;AD64SN;AC14SI;EACE;AD64SN;AC14SI;EACE;AD64SN;AC14SI;EACE;AD64SN;AC15SI;EACE;AD65SN;AC15SI;EACE;AD65SN;AC15SI;EACE;AD65SN;AC15SI;EACE;AD65SN;AC16SI;EACE;AD66SN;AC16SI;EACE;AD66SN;AC16SI;EACE;AD66SN;AC16SI;EACE;AD66SN;AC17SI;EACE;AD67SN;AC17SI;EACE;AD67SN;AC17SI;EACE;AD67SN;AC17SI;EACE;AD67SN;AC18SI;EACE;AD68SN;AC18SI;EACE;AD68SN;AC18SI;EACE;AD68SN;AC18SI;EACE;AD68SN;AC19SI;EACE;AD69SN;AC19SI;EACE;AD69SN;AC19SI;EACE;AD69SN;AC19SI;EACE;AD69SN;AC1+SI;EACE;AD6+SN;AC1+SI;EACE;AD6+SN;AC1+SI;EACE;AD6+SN;AC1+SI;EACE;AD6+SN;AC1/SI;EACE;AD6/SN;AC1/SI;EACE;AD6/SN;AC1/SI;EACE;AD6/SN;AC1/SI;EACE;AD6/SN;AC1gTI;EACE;AD6gTN;AC1gTI;EACE;AD6gTN;AC1gTI;EACE;AD6gTN;AC1gTI;EACE;AD6gTN;AC1hTI;EACE;AD6hTN;AC1hTI;EACE;AD6hTN;AC1hTI;EACE;AD6hTN;AC1hTI;EACE;AD6hTN;AC1iTI;EACE;AD6iTN;AC1iTI;EACE;AD6iTN;AC1iTI;EACE;AD6iTN;AC1iTI;EACE;AD6iTN;AC1jTI;EACE;AD6jTN;AC1jTI;EACE;AD6jTN;AC1jTI;EACE;AD6jTN;AC1jTI;EACE;AD6jTN;AC1kTI;EACE;AD6kTN;AC1kTI;EACE;AD6kTN;AC1kTI;EACE;AD6kTN;AC1kTI;EACE;AD6kTN;AC1lTI;EACE;AD6lTN;AC1lTI;EACE;AD6lTN;AC1lTI;EACE;AD6lTN;AC1lTI;EACE;AD6lTN;AC1mTI;EACE;AD6mTN;AC1mTI;EACE;AD6mTN;AC1mTI;EACE;AD6mTN;AC1mTI;EACE;AD6mTN;AC1nTI;EACE;AD6nTN;AC1nTI;EACE;AD6nTN;AC1nTI;EACE;AD6nTN;AC1nTI;EACE;AD6nTN;AC1oTI;EACE;AD6oTN;AC1oTI;EACE;AD6oTN;AC1oTI;EACE;AD6oTN;AC1oTI;EACE;AD6oTN;AC1pTI;EACE;AD6pTN;AC1pTI;EACE;AD6pTN;AC1pTI;EACE;AD6pTN;AC1pTI;EACE;AD6pTN;AC1qTI;EACE;AD6qTN;AC1qTI;EACE;AD6qTN;AC1qTI;EACE;AD6qTN;AC1qTI;EACE;AD6qTN;AC1rTI;EACE;AD6rTN;AC1rTI;EACE;AD6rTN;AC1rTI;EACE;AD6rTN;AC1rTI;EACE;AD6rTN;AC1sTI;EACE;AD6sTN;AC1sTI;EACE;AD6sTN;AC1sTI;EACE;AD6sTN;AC1sTI;EACE;AD6sTN;AC1tTI;EACE;AD6tTN;AC1tTI;EACE;AD6tTN;AC1tTI;EACE;AD6tTN;AC1tTI;EACE;AD6tTN;AC1uTI;EACE;AD6uTN;AC1uTI;EACE;AD6uTN;AC1uTI;EACE;AD6uTN;AC1uTI;EACE;AD6uTN;AC1vTI;EACE;AD6vTN;AC1vTI;EACE;AD6vTN;AC1vTI;EACE;AD6vTN;AC1vTI;EACE;AD6vTN;AC1wTI;EACE;AD6wTN;AC1wTI;EACE;AD6wTN;AC1wTI;EACE;AD6wTN;AC1wTI;EACE;AD6wTN;AC1xTI;EACE;AD6xTN;AC1xTI;EACE;AD6xTN;AC1xTI;EACE;AD6xTN;AC1xTI;EACE;AD6xTN;AC1yTI;EACE;AD6yTN;AC1yTI;EACE;AD6yTN;AC1yTI;EACE;AD6yTN;AC1yTI;EACE;AD6yTN;AC1zTI;EACE;AD6zTN;AC1zTI;EACE;AD6zTN;AC1zTI;EACE;AD6zTN;AC1zTI;EACE;AD6zTN;AC10TI;EACE;AD60TN;AC10TI;EACE;AD60TN;AC10TI;EACE;AD60TN;AC10TI;EACE;AD60TN;AC11TI;EACE;AD61TN;AC11TI;EACE;AD61TN;AC11TI;EACE;AD61TN;AC11TI;EACE;AD61TN;AC12TI;EACE;AD62TN;AC12TI;EACE;AD62TN;AC12TI;EACE;AD62TN;AC12TI;EACE;AD62TN;AC13TI;EACE;AD63TN;AC13TI;EACE;AD63TN;AC13TI;EACE;AD63TN;AC13TI;EACE;AD63TN;AC14TI;EACE;AD64TN;AC14TI;EACE;AD64TN;AC14TI;EACE;AD64TN;AC14TI;EACE;AD64TN;AC15TI;EACE;AD65TN;AC15TI;EACE;AD65TN;AC15TI;EACE;AD65TN;AC15TI;EACE;AD65TN;AC16TI;EACE;AD66TN;AC16TI;EACE;AD66TN;AC16TI;EACE;AD66TN;AC16TI;EACE;AD66TN;AC17TI;EACE;AD67TN;AC17TI;EACE;AD67TN;AC17TI;EACE;AD67TN;AC17TI;EACE;AD67TN;AC18TI;EACE;AD68TN;AC18TI;EACE;AD68TN;AC18TI;EACE;AD68TN;AC18TI;EACE;AD68TN;AC19TI;EACE;AD69TN;AC19TI;EACE;AD69TN;AC19TI;EACE;AD69TN;AC19TI;EACE;AD69TN;AC1+TI;EACE;AD6+TN;AC1+TI;EACE;AD6+TN;AC1+TI;EACE;AD6+TN;AC1+TI;EACE;AD6+TN;AC1/TI;EACE;AD6/TN;AC1/TI;EACE;AD6/TN;AC1/TI;EACE;AD6/TN;AC1/TI;EACE;AD6/TN;AC1gUI;EACE;AD6gUN;AC1gUI;EACE;AD6gUN;AC1gUI;EACE;AD6gUN;AC1gUI;EACE;AD6gUN;AC1hUI;EACE;AD6hUN;AC1hUI;EACE;AD6hUN;AC1hUI;EACE;AD6hUN;AC1hUI;EACE;AD6hUN;AC1iUI;EACE;AD6iUN;AC1iUI;EACE;AD6iUN;AC1iUI;EACE;AD6iUN;AC1iUI;EACE;AD6iUN;AC1jUI;EACE;AD6jUN;AC1jUI;EACE;AD6jUN;AC1jUI;EACE;AD6jUN;AC1jUI;EACE;AD6jUN;AC1kUI;EACE;AD6kUN;AC1kUI;EACE;AD6kUN;AC1kUI;EACE;AD6kUN;AC1kUI;EACE;AD6kUN;AC1lUI;EACE;AD6lUN;AC1lUI;EACE;AD6lUN;AC1lUI;EACE;AD6lUN;AC1lUI;EACE;AD6lUN;AC1mUI;EACE;AD6mUN;AC1mUI;EACE;AD6mUN;AC1mUI;EACE;AD6mUN;AC1mUI;EACE;AD6mUN;AC1nUI;EACE;AD6nUN;AC1nUI;EACE;AD6nUN;AC1nUI;EACE;AD6nUN;AC1nUI;EACE;AD6nUN;AC1oUI;EACE;AD6oUN;AC1oUI;EACE;AD6oUN;AC1oUI;EACE;AD6oUN;AC1oUI;EACE;AD6oUN;AC1pUI;EACE;AD6pUN;AC1pUI;EACE;AD6pUN;AC1pUI;EACE;AD6pUN;AC1pUI;EACE;AD6pUN;AC1qUI;EACE;AD6qUN;AC1qUI;EACE;AD6qUN;AC1qUI;EACE;AD6qUN;AC1qUI;EACE;AD6qUN;AC1rUI;EACE;AD6rUN;AC1rUI;EACE;AD6rUN;AC1rUI;EACE;AD6rUN;AC1rUI;EACE;AD6rUN;AC1sUI;EACE;AD6sUN;AC1sUI;EACE;AD6sUN;AC1sUI;EACE;AD6sUN;AC1sUI;EACE;AD6sUN;AC1tUI;EACE;AD6tUN;AC1tUI;EACE;AD6tUN;AC1tUI;EACE;AD6tUN;AC1tUI;EACE;AD6tUN;AC1uUI;EACE;AD6uUN;AC1uUI;EACE;AD6uUN;AC1uUI;EACE;AD6uUN;AC1uUI;EACE;AD6uUN;AC1vUI;EACE;AD6vUN;AC1vUI;EACE;AD6vUN;AC1vUI;EACE;AD6vUN;AC1vUI;EACE;AD6vUN;AC1wUI;EACE;AD6wUN;AC1wUI;EACE;AD6wUN;AC1wUI;EACE;AD6wUN;AC1wUI;EACE;AD6wUN;AC1xUI;EACE;AD6xUN;AC1xUI;EACE;AD6xUN;AC1xUI;EACE;AD6xUN;AC1xUI;EACE;AD6xUN;AC1yUI;EACE;AD6yUN;AC1yUI;EACE;AD6yUN;AC1yUI;EACE;AD6yUN;AC1yUI;EACE;AD6yUN;ACvyUI;EACE;AD0yUN;ACvyUI;EACE;AD0yUN;ACvyUI;EACE;AD0yUN;ACvyUI;EACE;AD0yUN;ACvyUI;EACE;AD0yUN;ACvyUI;EACE;EACA;AD0yUN;ACvyUI;EACE;EACA;AD0yUN;ACh3UI;EACE;ADm3UN;ACp3UI;EACE;ADu3UN;ACx3UI;EACE;AD23UN;AC53UI;EACE;AD+3UN;ACh4UI;EACE;ADm4UN;ACp4UI;EACE;ADu4UN;ACx4UI;EACE;AD24UN;AC54UI;EACE;AD+4UN;ACh5UI;EACE;ADm5UN;ACp5UI;EACE;ADu5UN;ACx5UI;EACE;AD25UN;AC55UI;EACE;AD+5UN;ACh6UI;EACE;ADm6UN;ACp6UI;EACE;ADu6UN;ACx6UI;EACE;AD26UN;AC56UI;EACE;AD+6UN;ACh7UI;EACE;ADm7UN;ACp7UI;EACE;ADu7UN;ACx7UI;EACE;AD27UN;AC57UI;EACE;AD+7UN;ACh8UI;EACE;ADm8UN;ACp8UI;EACE;ADu8UN;ACx8UI;EACE;AD28UN;AC58UI;EACE;AD+8UN;ACh9UI;EACE;ADm9UN;ACp9UI;EACE;ADu9UN;ACx9UI;EACE;AD29UN;AC59UI;EACE;AD+9UN;ACh+UI;EACE;ADm+UN;ACp+UI;EACE;ADu+UN;ACx+UI;EACE;AD2+UN;AC5+UI;EACE;AD++UN;ACh/UI;EACE;ADm/UN;ACp/UI;EACE;ADu/UN;ACx/UI;EACE;AD2/UN;AC5/UI;EACE;AD+/UN;AChgVI;EACE;ADmgVN;ACpgVI;EACE;ADugVN;ACxgVI;EACE;AD2gVN;AC5gVI;EACE;AD+gVN;AChhVI;EACE;ADmhVN;ACphVI;EACE;ADuhVN;ACxhVI;EACE;AD2hVN;AC5hVI;EACE;AD+hVN;AChiVI;EACE;ADmiVN;ACpiVI;EACE;ADuiVN;ACxiVI;EACE;AD2iVN;AC5iVI;EACE;AD+iVN;AChjVI;EACE;ADmjVN;ACpjVI;EACE;ADujVN;ACxjVI;EACE;AD2jVN;AC5jVI;EACE;AD+jVN;AChkVI;EACE;ADmkVN;ACpkVI;EACE;ADukVN;ACxkVI;EACE;AD2kVN;AC5kVI;EACE;AD+kVN;AChlVI;EACE;ADmlVN;ACplVI;EACE;ADulVN;ACxlVI;EACE;AD2lVN;AC5lVI;EACE;AD+lVN;AChmVI;EACE;ADmmVN;ACpmVI;EACE;ADumVN;ACxmVI;EACE;AD2mVN;AC5mVI;EACE;AD+mVN;AChnVI;EACE;ADmnVN;AC3mVI;EACE;EACA;AD8mVN;AC3mVI;EACE;EACA;AD8mVN;ACrnVI;EACE;EACA;ADwnVN;ACrnVI;EACE;EACA;ADwnVN;AC/nVI;EACE;EACA;ADkoVN;AC/nVI;EACE;EACA;ADkoVN;ACzoVI;EACE;EACA;AD4oVN;ACzoVI;EACE;EACA;AD4oVN;ACnpVI;EACE;EACA;ADspVN;ACnpVI;EACE;EACA;ADspVN;AC7pVI;EACE;EACA;ADgqVN;AC7pVI;EACE;EACA;ADgqVN;ACvqVI;EACE;EACA;AD0qVN;ACvqVI;EACE;EACA;AD0qVN;ACjrVI;EACE;EACA;ADorVN;ACjrVI;EACE;EACA;ADorVN;AC3rVI;EACE;EACA;AD8rVN;AC3rVI;EACE;EACA;AD8rVN;ACrsVI;EACE;EACA;ADwsVN;ACrsVI;EACE;EACA;ADwsVN;AC/sVI;EACE;EACA;ADktVN;AC/sVI;EACE;EACA;ADktVN;ACztVI;EACE;EACA;AD4tVN;ACztVI;EACE;EACA;AD4tVN;ACnuVI;EACE;EACA;ADsuVN;ACnuVI;EACE;EACA;ADsuVN;AC7uVI;EACE;EACA;ADgvVN;AC7uVI;EACE;EACA;ADgvVN;ACvvVI;EACE;EACA;AD0vVN;ACvvVI;EACE;EACA;AD0vVN;ACjwVI;EACE;EACA;ADowVN;ACjwVI;EACE;EACA;ADowVN;AC3wVI;EACE;EACA;AD8wVN;AC3wVI;EACE;EACA;AD8wVN;ACrxVI;EACE;EACA;ADwxVN;ACrxVI;EACE;EACA;ADwxVN;AC/xVI;EACE;EACA;ADkyVN;AC/xVI;EACE;EACA;ADkyVN;ACzyVI;EACE;EACA;AD4yVN;ACzyVI;EACE;EACA;AD4yVN;ACnzVI;EACE;EACA;ADszVN;ACnzVI;EACE;EACA;ADszVN;AC7zVI;EACE;EACA;ADg0VN;AC7zVI;EACE;EACA;ADg0VN;ACv0VI;EACE;EACA;AD00VN;ACv0VI;EACE;EACA;AD00VN;ACj1VI;EACE;EACA;ADo1VN;ACj1VI;EACE;EACA;ADo1VN;AC31VI;EACE;EACA;AD81VN;AC31VI;EACE;EACA;AD81VN;ACr2VI;EACE;EACA;ADw2VN;ACr2VI;EACE;EACA;ADw2VN;AC/2VI;EACE;EACA;ADk3VN;AC/2VI;EACE;EACA;ADk3VN;ACz3VI;EACE;EACA;AD43VN;ACz3VI;EACE;EACA;AD43VN;ACn4VI;EACE;EACA;ADs4VN;ACn4VI;EACE;EACA;ADs4VN;AC74VI;EACE;EACA;ADg5VN;AC74VI;EACE;EACA;ADg5VN;ACv5VI;EACE;EACA;AD05VN;ACv5VI;EACE;EACA;AD05VN;ACj6VI;EACE;EACA;ADo6VN;ACj6VI;EACE;EACA;ADo6VN;AC36VI;EACE;EACA;AD86VN;AC36VI;EACE;EACA;AD86VN;ACr7VI;EACE;EACA;ADw7VN;ACr7VI;EACE;EACA;ADw7VN;AC/7VI;EACE;EACA;ADk8VN;AC/7VI;EACE;EACA;ADk8VN;ACz8VI;EACE;EACA;AD48VN;ACz8VI;EACE;EACA;AD48VN;ACn9VI;EACE;EACA;ADs9VN;ACn9VI;EACE;EACA;ADs9VN;AC79VI;EACE;EACA;ADg+VN;AC79VI;EACE;EACA;ADg+VN;ACv+VI;EACE;EACA;AD0+VN;ACv+VI;EACE;EACA;AD0+VN;ACj/VI;EACE;EACA;ADo/VN;ACj/VI;EACE;EACA;ADo/VN;AC3/VI;EACE;EACA;AD8/VN;AC3/VI;EACE;EACA;AD8/VN;ACrgWI;EACE;EACA;ADwgWN;ACrgWI;EACE;EACA;ADwgWN;AC/gWI;EACE;EACA;ADkhWN;AC/gWI;EACE;EACA;ADkhWN;ACzhWI;EACE;EACA;AD4hWN;ACzhWI;EACE;EACA;AD4hWN;ACniWI;EACE;EACA;ADsiWN;ACniWI;EACE;EACA;ADsiWN;AC7iWI;EACE;EACA;ADgjWN;AC7iWI;EACE;EACA;ADgjWN;ACvjWI;EACE;EACA;AD0jWN;ACvjWI;EACE;EACA;AD0jWN;ACjkWI;EACE;EACA;ADokWN;ACjkWI;EACE;EACA;ADokWN;AC3kWI;EACE;EACA;AD8kWN;AC3kWI;EACE;EACA;AD8kWN;ACrlWI;EACE;EACA;ADwlWN;ACrlWI;EACE;EACA;ADwlWN;AC/lWI;EACE;EACA;ADkmWN;AC/lWI;EACE;EACA;ADkmWN;ACzmWI;EACE;EACA;AD4mWN;ACzmWI;EACE;EACA;AD4mWN;ACnnWI;EACE;EACA;ADsnWN;ACnnWI;EACE;EACA;ADsnWN;AC7nWI;EACE;EACA;ADgoWN;AC7nWI;EACE;EACA;ADgoWN;ACvoWI;EACE;EACA;AD0oWN;ACvoWI;EACE;EACA;AD0oWN;ACjpWI;EACE;EACA;ADopWN;ACjpWI;EACE;EACA;ADopWN;AC3pWI;EACE;EACA;AD8pWN;AC3pWI;EACE;EACA;AD8pWN;ACrqWI;EACE;EACA;ADwqWN;ACrqWI;EACE;EACA;ADwqWN;AC/qWI;EACE;EACA;ADkrWN;AC/qWI;EACE;EACA;ADkrWN;ACzrWI;EACE;EACA;AD4rWN;ACzrWI;EACE;EACA;AD4rWN;ACnsWI;EACE;EACA;ADssWN;ACnsWI;EACE;EACA;ADssWN;AC7sWI;EACE;EACA;ADgtWN;AC7sWI;EACE;EACA;ADgtWN;ACvtWI;EACE;EACA;AD0tWN;ACvtWI;EACE;EACA;AD0tWN;ACjuWI;EACE;EACA;ADouWN;ACjuWI;EACE;EACA;ADouWN;AC3uWI;EACE;EACA;AD8uWN;AC3uWI;EACE;EACA;AD8uWN;ACtuWI;EACE;ADyuWN;ACtuWI;EACE;ADyuWN;ACtuWI;EACE;ADyuWN;ACtuWI;EACE;ADyuWN;ACtvWI;EACE;ADyvWN;ACtvWI;EACE;ADyvWN;ACtvWI;EACE;ADyvWN;ACtvWI;EACE;ADyvWN;ACtwWI;EACE;ADywWN;ACtwWI;EACE;ADywWN;ACtwWI;EACE;ADywWN;ACtwWI;EACE;ADywWN;ACtxWI;EACE;ADyxWN;ACtxWI;EACE;ADyxWN;ACtxWI;EACE;ADyxWN;ACtxWI;EACE;ADyxWN;ACtyWI;EACE;ADyyWN;ACtyWI;EACE;ADyyWN;ACtyWI;EACE;ADyyWN;ACtyWI;EACE;ADyyWN;ACtzWI;EACE;ADyzWN;ACtzWI;EACE;ADyzWN;ACtzWI;EACE;ADyzWN;ACtzWI;EACE;ADyzWN;ACt0WI;EACE;ADy0WN;ACt0WI;EACE;ADy0WN;ACt0WI;EACE;ADy0WN;ACt0WI;EACE;ADy0WN;ACt1WI;EACE;ADy1WN;ACt1WI;EACE;ADy1WN;ACt1WI;EACE;ADy1WN;ACt1WI;EACE;ADy1WN;ACt2WI;EACE;ADy2WN;ACt2WI;EACE;ADy2WN;ACt2WI;EACE;ADy2WN;ACt2WI;EACE;ADy2WN;ACt3WI;EACE;ADy3WN;ACt3WI;EACE;ADy3WN;ACt3WI;EACE;ADy3WN;ACt3WI;EACE;ADy3WN;ACt4WI;EACE;ADy4WN;ACt4WI;EACE;ADy4WN;ACt4WI;EACE;ADy4WN;ACt4WI;EACE;ADy4WN;ACt5WI;EACE;ADy5WN;ACt5WI;EACE;ADy5WN;ACt5WI;EACE;ADy5WN;ACt5WI;EACE;ADy5WN;ACt6WI;EACE;ADy6WN;ACt6WI;EACE;ADy6WN;ACt6WI;EACE;ADy6WN;ACt6WI;EACE;ADy6WN;ACt7WI;EACE;ADy7WN;ACt7WI;EACE;ADy7WN;ACt7WI;EACE;ADy7WN;ACt7WI;EACE;ADy7WN;ACt8WI;EACE;ADy8WN;ACt8WI;EACE;ADy8WN;ACt8WI;EACE;ADy8WN;ACt8WI;EACE;ADy8WN;ACt9WI;EACE;ADy9WN;ACt9WI;EACE;ADy9WN;ACt9WI;EACE;ADy9WN;ACt9WI;EACE;ADy9WN;ACt+WI;EACE;ADy+WN;ACt+WI;EACE;ADy+WN;ACt+WI;EACE;ADy+WN;ACt+WI;EACE;ADy+WN;ACt/WI;EACE;ADy/WN;ACt/WI;EACE;ADy/WN;ACt/WI;EACE;ADy/WN;ACt/WI;EACE;ADy/WN;ACtgXI;EACE;ADygXN;ACtgXI;EACE;ADygXN;ACtgXI;EACE;ADygXN;ACtgXI;EACE;ADygXN;ACthXI;EACE;ADyhXN;ACthXI;EACE;ADyhXN;ACthXI;EACE;ADyhXN;ACthXI;EACE;ADyhXN;ACtiXI;EACE;ADyiXN;ACtiXI;EACE;ADyiXN;ACtiXI;EACE;ADyiXN;ACtiXI;EACE;ADyiXN;ACtjXI;EACE;ADyjXN;ACtjXI;EACE;ADyjXN;ACtjXI;EACE;ADyjXN;ACtjXI;EACE;ADyjXN;ACtkXI;EACE;ADykXN;ACtkXI;EACE;ADykXN;ACtkXI;EACE;ADykXN;ACtkXI;EACE;ADykXN;ACtlXI;EACE;ADylXN;ACtlXI;EACE;ADylXN;ACtlXI;EACE;ADylXN;ACtlXI;EACE;ADylXN;ACtmXI;EACE;ADymXN;ACtmXI;EACE;ADymXN;ACtmXI;EACE;ADymXN;ACtmXI;EACE;ADymXN;ACtnXI;EACE;ADynXN;ACtnXI;EACE;ADynXN;ACtnXI;EACE;ADynXN;ACtnXI;EACE;ADynXN;ACtoXI;EACE;ADyoXN;ACtoXI;EACE;ADyoXN;ACtoXI;EACE;ADyoXN;ACtoXI;EACE;ADyoXN;ACtpXI;EACE;ADypXN;ACtpXI;EACE;ADypXN;ACtpXI;EACE;ADypXN;ACtpXI;EACE;ADypXN;ACtqXI;EACE;ADyqXN;ACtqXI;EACE;ADyqXN;ACtqXI;EACE;ADyqXN;ACtqXI;EACE;ADyqXN;ACtrXI;EACE;ADyrXN;ACtrXI;EACE;ADyrXN;ACtrXI;EACE;ADyrXN;ACtrXI;EACE;ADyrXN;ACtsXI;EACE;ADysXN;ACtsXI;EACE;ADysXN;ACtsXI;EACE;ADysXN;ACtsXI;EACE;ADysXN;ACttXI;EACE;ADytXN;ACttXI;EACE;ADytXN;ACttXI;EACE;ADytXN;ACttXI;EACE;ADytXN;ACtuXI;EACE;ADyuXN;ACtuXI;EACE;ADyuXN;ACtuXI;EACE;ADyuXN;ACtuXI;EACE;ADyuXN;ACtvXI;EACE;ADyvXN;ACtvXI;EACE;ADyvXN;ACtvXI;EACE;ADyvXN;ACtvXI;EACE;ADyvXN;ACtwXI;EACE;ADywXN;ACtwXI;EACE;ADywXN;ACtwXI;EACE;ADywXN;ACtwXI;EACE;ADywXN;ACtxXI;EACE;ADyxXN;ACtxXI;EACE;ADyxXN;ACtxXI;EACE;ADyxXN;ACtxXI;EACE;ADyxXN;ACtyXI;EACE;ADyyXN;ACtyXI;EACE;ADyyXN;ACtyXI;EACE;ADyyXN;ACtyXI;EACE;ADyyXN;ACtzXI;EACE;ADyzXN;ACtzXI;EACE;ADyzXN;ACtzXI;EACE;ADyzXN;ACtzXI;EACE;ADyzXN;ACt0XI;EACE;ADy0XN;ACt0XI;EACE;ADy0XN;ACt0XI;EACE;ADy0XN;ACt0XI;EACE;ADy0XN;ACt1XI;EACE;ADy1XN;ACt1XI;EACE;ADy1XN;ACt1XI;EACE;ADy1XN;ACt1XI;EACE;ADy1XN;ACt2XI;EACE;ADy2XN;ACt2XI;EACE;ADy2XN;ACt2XI;EACE;ADy2XN;ACt2XI;EACE;ADy2XN;ACt3XI;EACE;ADy3XN;ACt3XI;EACE;ADy3XN;ACt3XI;EACE;ADy3XN;ACt3XI;EACE;ADy3XN;ACt4XI;EACE;ADy4XN;ACt4XI;EACE;ADy4XN;ACt4XI;EACE;ADy4XN;ACt4XI;EACE;ADy4XN;ACt5XI;EACE;ADy5XN;ACt5XI;EACE;ADy5XN;ACt5XI;EACE;ADy5XN;ACt5XI;EACE;ADy5XN;ACt6XI;EACE;ADy6XN;ACt6XI;EACE;ADy6XN;ACt6XI;EACE;ADy6XN;ACt6XI;EACE;ADy6XN;ACt7XI;EACE;ADy7XN;ACt7XI;EACE;ADy7XN;ACt7XI;EACE;ADy7XN;ACt7XI;EACE;ADy7XN;ACt8XI;EACE;ADy8XN;ACt8XI;EACE;ADy8XN;ACt8XI;EACE;ADy8XN;ACt8XI;EACE;ADy8XN;ACt9XI;EACE;ADy9XN;ACt9XI;EACE;ADy9XN;ACt9XI;EACE;ADy9XN;ACt9XI;EACE;ADy9XN;ACt+XI;EACE;ADy+XN;ACt+XI;EACE;ADy+XN;ACt+XI;EACE;ADy+XN;ACt+XI;EACE;ADy+XN;ACt/XI;EACE;ADy/XN;ACt/XI;EACE;ADy/XN;ACt/XI;EACE;ADy/XN;ACt/XI;EACE;ADy/XN;ACtgYI;EACE;ADygYN;ACtgYI;EACE;ADygYN;ACtgYI;EACE;ADygYN;ACtgYI;EACE;ADygYN;ACthYI;EACE;ADyhYN;ACthYI;EACE;ADyhYN;ACthYI;EACE;ADyhYN;ACthYI;EACE;ADyhYN;ACtiYI;EACE;ADyiYN;ACtiYI;EACE;ADyiYN;ACtiYI;EACE;ADyiYN;ACtiYI;EACE;ADyiYN;ACtjYI;EACE;ADyjYN;ACtjYI;EACE;ADyjYN;ACtjYI;EACE;ADyjYN;ACtjYI;EACE;ADyjYN;ACtkYI;EACE;ADykYN;ACtkYI;EACE;ADykYN;ACtkYI;EACE;ADykYN;ACtkYI;EACE;ADykYN;ACtlYI;EACE;ADylYN;ACtlYI;EACE;ADylYN;ACtlYI;EACE;ADylYN;ACtlYI;EACE;ADylYN;ACtmYI;EACE;ADymYN;ACtmYI;EACE;ADymYN;ACtmYI;EACE;ADymYN;ACtmYI;EACE;ADymYN;ACtnYI;EACE;ADynYN;ACtnYI;EACE;ADynYN;ACtnYI;EACE;ADynYN;ACtnYI;EACE;ADynYN;ACtoYI;EACE;ADyoYN;ACtoYI;EACE;ADyoYN;ACtoYI;EACE;ADyoYN;ACtoYI;EACE;ADyoYN;ACtpYI;EACE;ADypYN;ACtpYI;EACE;ADypYN;ACtpYI;EACE;ADypYN;ACtpYI;EACE;ADypYN;ACtqYI;EACE;ADyqYN;ACtqYI;EACE;ADyqYN;ACtqYI;EACE;ADyqYN;ACtqYI;EACE;ADyqYN;ACtrYI;EACE;ADyrYN;ACtrYI;EACE;ADyrYN;ACtrYI;EACE;ADyrYN;ACtrYI;EACE;ADyrYN;ACtsYI;EACE;ADysYN;ACtsYI;EACE;ADysYN;ACtsYI;EACE;ADysYN;ACtsYI;EACE;ADysYN;ACttYI;EACE;ADytYN;ACttYI;EACE;ADytYN;ACttYI;EACE;ADytYN;ACttYI;EACE;ADytYN;ACtuYI;EACE;ADyuYN;ACtuYI;EACE;ADyuYN;ACtuYI;EACE;ADyuYN;ACtuYI;EACE;ADyuYN;AC/rYA;EACE;ADksYF;AC/rYA;EACE;ADksYF;AC3rYA;EACE;AD8rYF;AC3rYA;EACE;AD8rYF;AC3rYA;EACE;AD8rYF;ACvrYA;EACE;AD0rYF;ACvrYA;EACE;AD0rYF;ACvrYA;EACE;AD0rYF;ACvrYA;EACE;AD0rYF;AExzYI;EACI;EACA;AF2zYR;AG/xYQ;ED9BJ;IAKQ;EF4zYV;AACF;AGpyYQ;ED9BJ;IASQ;IACA;IACA;EF6zYV;AACF;AG3yYQ;ED9BJ;IAeQ;IACA;EF8zYV;AACF;AE5zYQ;EACI;EACA;AF8zYZ;AE5zYY;;EAEI;EACA;AF8zYhB;ACl1YI;EACE;ADq1YN;ACt1YI;EACE;ADy1YN;AC11YI;EACE;AD61YN;AC91YI;EACE;ADi2YN;ACl2YI;EACE;ADq2YN;ACt2YI;EACE;ADy2YN;AC12YI;EACE;AD62YN;AC92YI;EACE;ADi3YN;ACl3YI;EACE;ADq3YN;ACt3YI;EACE;ADy3YN;AC13YI;EACE;AD63YN;AC93YI;EACE;ADi4YN;ACl4YI;EACE;ADq4YN;ACt4YI;EACE;ADy4YN;AC14YI;EACE;AD64YN;AC94YI;EACE;ADi5YN;ACl5YI;EACE;ADq5YN;ACt5YI;EACE;ADy5YN;AC15YI;EACE;AD65YN;AC95YI;EACE;ADi6YN;ACl6YI;EACE;ADq6YN;ACt6YI;EACE;ADy6YN;AC16YI;EACE;AD66YN;AC96YI;EACE;ADi7YN;ACl7YI;EACE;ADq7YN;ACt7YI;EACE;ADy7YN;AC17YI;EACE;AD67YN;AC97YI;EACE;ADi8YN;ACl8YI;EACE;ADq8YN;ACt8YI;EACE;ADy8YN;AC18YI;EACE;AD68YN;AC98YI;EACE;ADi9YN;ACl9YI;EACE;ADq9YN;ACt9YI;EACE;ADy9YN;AC19YI;EACE;AD69YN;AC99YI;EACE;ADi+YN;ACl+YI;EACE;ADq+YN;ACt+YI;EACE;ADy+YN;AC1+YI;EACE;AD6+YN;AC9+YI;EACE;ADi/YN;ACl/YI;EACE;ADq/YN;ACt/YI;EACE;ADy/YN;AC1/YI;EACE;AD6/YN;AC9/YI;EACE;ADigZN;AClgZI;EACE;ADqgZN;ACtgZI;EACE;ADygZN;AC1gZI;EACE;AD6gZN;AC9gZI;EACE;ADihZN;AClhZI;EACE;ADqhZN;ACthZI;EACE;ADyhZN;AC1hZI;EACE;AD6hZN;AC9hZI;EACE;ADiiZN;ACliZI;EACE;ADqiZN;ACtiZI;EACE;ADyiZN;AC1iZI;EACE;AD6iZN;AC9iZI;EACE;ADijZN;ACljZI;EACE;ADqjZN;ACtjZI;EACE;ADyjZN;AC1jZI;EACE;AD6jZN;AC9jZI;EACE;ADikZN;AClkZI;EACE;ADqkZN;ACtkZI;EACE;ADykZN;AC1kZI;EACE;AD6kZN;AC9kZI;EACE;ADilZN;ACllZI;EACE;ADqlZN;AC7kZI;EACE;EACA;ADglZN;AC7kZI;EACE;EACA;ADglZN;ACvlZI;EACE;EACA;AD0lZN;ACvlZI;EACE;EACA;AD0lZN;ACjmZI;EACE;EACA;ADomZN;ACjmZI;EACE;EACA;ADomZN;AC3mZI;EACE;EACA;AD8mZN;AC3mZI;EACE;EACA;AD8mZN;ACrnZI;EACE;EACA;ADwnZN;ACrnZI;EACE;EACA;ADwnZN;AC/nZI;EACE;EACA;ADkoZN;AC/nZI;EACE;EACA;ADkoZN;ACzoZI;EACE;EACA;AD4oZN;ACzoZI;EACE;EACA;AD4oZN;ACnpZI;EACE;EACA;ADspZN;ACnpZI;EACE;EACA;ADspZN;AC7pZI;EACE;EACA;ADgqZN;AC7pZI;EACE;EACA;ADgqZN;ACvqZI;EACE;EACA;AD0qZN;ACvqZI;EACE;EACA;AD0qZN;ACjrZI;EACE;EACA;ADorZN;ACjrZI;EACE;EACA;ADorZN;AC3rZI;EACE;EACA;AD8rZN;AC3rZI;EACE;EACA;AD8rZN;ACrsZI;EACE;EACA;ADwsZN;ACrsZI;EACE;EACA;ADwsZN;AC/sZI;EACE;EACA;ADktZN;AC/sZI;EACE;EACA;ADktZN;ACztZI;EACE;EACA;AD4tZN;ACztZI;EACE;EACA;AD4tZN;ACnuZI;EACE;EACA;ADsuZN;ACnuZI;EACE;EACA;ADsuZN;AC7uZI;EACE;EACA;ADgvZN;AC7uZI;EACE;EACA;ADgvZN;ACvvZI;EACE;EACA;AD0vZN;ACvvZI;EACE;EACA;AD0vZN;ACjwZI;EACE;EACA;ADowZN;ACjwZI;EACE;EACA;ADowZN;AC3wZI;EACE;EACA;AD8wZN;AC3wZI;EACE;EACA;AD8wZN;ACrxZI;EACE;EACA;ADwxZN;ACrxZI;EACE;EACA;ADwxZN;AC/xZI;EACE;EACA;ADkyZN;AC/xZI;EACE;EACA;ADkyZN;ACzyZI;EACE;EACA;AD4yZN;ACzyZI;EACE;EACA;AD4yZN;ACnzZI;EACE;EACA;ADszZN;ACnzZI;EACE;EACA;ADszZN;AC7zZI;EACE;EACA;ADg0ZN;AC7zZI;EACE;EACA;ADg0ZN;ACv0ZI;EACE;EACA;AD00ZN;ACv0ZI;EACE;EACA;AD00ZN;ACj1ZI;EACE;EACA;ADo1ZN;ACj1ZI;EACE;EACA;ADo1ZN;AC31ZI;EACE;EACA;AD81ZN;AC31ZI;EACE;EACA;AD81ZN;ACr2ZI;EACE;EACA;ADw2ZN;ACr2ZI;EACE;EACA;ADw2ZN;AC/2ZI;EACE;EACA;ADk3ZN;AC/2ZI;EACE;EACA;ADk3ZN;ACz3ZI;EACE;EACA;AD43ZN;ACz3ZI;EACE;EACA;AD43ZN;ACn4ZI;EACE;EACA;ADs4ZN;ACn4ZI;EACE;EACA;ADs4ZN;AC74ZI;EACE;EACA;ADg5ZN;AC74ZI;EACE;EACA;ADg5ZN;ACv5ZI;EACE;EACA;AD05ZN;ACv5ZI;EACE;EACA;AD05ZN;ACj6ZI;EACE;EACA;ADo6ZN;ACj6ZI;EACE;EACA;ADo6ZN;AC36ZI;EACE;EACA;AD86ZN;AC36ZI;EACE;EACA;AD86ZN;ACr7ZI;EACE;EACA;ADw7ZN;ACr7ZI;EACE;EACA;ADw7ZN;AC/7ZI;EACE;EACA;ADk8ZN;AC/7ZI;EACE;EACA;ADk8ZN;ACz8ZI;EACE;EACA;AD48ZN;ACz8ZI;EACE;EACA;AD48ZN;ACn9ZI;EACE;EACA;ADs9ZN;ACn9ZI;EACE;EACA;ADs9ZN;AC79ZI;EACE;EACA;ADg+ZN;AC79ZI;EACE;EACA;ADg+ZN;ACv+ZI;EACE;EACA;AD0+ZN;ACv+ZI;EACE;EACA;AD0+ZN;ACj/ZI;EACE;EACA;ADo/ZN;ACj/ZI;EACE;EACA;ADo/ZN;AC3/ZI;EACE;EACA;AD8/ZN;AC3/ZI;EACE;EACA;AD8/ZN;ACrgaI;EACE;EACA;ADwgaN;ACrgaI;EACE;EACA;ADwgaN;AC/gaI;EACE;EACA;ADkhaN;AC/gaI;EACE;EACA;ADkhaN;ACzhaI;EACE;EACA;AD4haN;ACzhaI;EACE;EACA;AD4haN;ACniaI;EACE;EACA;ADsiaN;ACniaI;EACE;EACA;ADsiaN;AC7iaI;EACE;EACA;ADgjaN;AC7iaI;EACE;EACA;ADgjaN;ACvjaI;EACE;EACA;AD0jaN;ACvjaI;EACE;EACA;AD0jaN;ACjkaI;EACE;EACA;ADokaN;ACjkaI;EACE;EACA;ADokaN;AC3kaI;EACE;EACA;AD8kaN;AC3kaI;EACE;EACA;AD8kaN;ACrlaI;EACE;EACA;ADwlaN;ACrlaI;EACE;EACA;ADwlaN;AC/laI;EACE;EACA;ADkmaN;AC/laI;EACE;EACA;ADkmaN;ACzmaI;EACE;EACA;AD4maN;ACzmaI;EACE;EACA;AD4maN;ACnnaI;EACE;EACA;ADsnaN;ACnnaI;EACE;EACA;ADsnaN;AC7naI;EACE;EACA;ADgoaN;AC7naI;EACE;EACA;ADgoaN;ACvoaI;EACE;EACA;AD0oaN;ACvoaI;EACE;EACA;AD0oaN;ACjpaI;EACE;EACA;ADopaN;ACjpaI;EACE;EACA;ADopaN;AC3paI;EACE;EACA;AD8paN;AC3paI;EACE;EACA;AD8paN;ACrqaI;EACE;EACA;ADwqaN;ACrqaI;EACE;EACA;ADwqaN;AC/qaI;EACE;EACA;ADkraN;AC/qaI;EACE;EACA;ADkraN;ACzraI;EACE;EACA;AD4raN;ACzraI;EACE;EACA;AD4raN;ACnsaI;EACE;EACA;ADssaN;ACnsaI;EACE;EACA;ADssaN;AC7saI;EACE;EACA;ADgtaN;AC7saI;EACE;EACA;ADgtaN;ACxsaI;EACE;AD2saN;ACxsaI;EACE;AD2saN;ACxsaI;EACE;AD2saN;ACxsaI;EACE;AD2saN;ACxtaI;EACE;AD2taN;ACxtaI;EACE;AD2taN;ACxtaI;EACE;AD2taN;ACxtaI;EACE;AD2taN;ACxuaI;EACE;AD2uaN;ACxuaI;EACE;AD2uaN;ACxuaI;EACE;AD2uaN;ACxuaI;EACE;AD2uaN;ACxvaI;EACE;AD2vaN;ACxvaI;EACE;AD2vaN;ACxvaI;EACE;AD2vaN;ACxvaI;EACE;AD2vaN;ACxwaI;EACE;AD2waN;ACxwaI;EACE;AD2waN;ACxwaI;EACE;AD2waN;ACxwaI;EACE;AD2waN;ACxxaI;EACE;AD2xaN;ACxxaI;EACE;AD2xaN;ACxxaI;EACE;AD2xaN;ACxxaI;EACE;AD2xaN;ACxyaI;EACE;AD2yaN;ACxyaI;EACE;AD2yaN;ACxyaI;EACE;AD2yaN;ACxyaI;EACE;AD2yaN;ACxzaI;EACE;AD2zaN;ACxzaI;EACE;AD2zaN;ACxzaI;EACE;AD2zaN;ACxzaI;EACE;AD2zaN;ACx0aI;EACE;AD20aN;ACx0aI;EACE;AD20aN;ACx0aI;EACE;AD20aN;ACx0aI;EACE;AD20aN;ACx1aI;EACE;AD21aN;ACx1aI;EACE;AD21aN;ACx1aI;EACE;AD21aN;ACx1aI;EACE;AD21aN;ACx2aI;EACE;AD22aN;ACx2aI;EACE;AD22aN;ACx2aI;EACE;AD22aN;ACx2aI;EACE;AD22aN;ACx3aI;EACE;AD23aN;ACx3aI;EACE;AD23aN;ACx3aI;EACE;AD23aN;ACx3aI;EACE;AD23aN;ACx4aI;EACE;AD24aN;ACx4aI;EACE;AD24aN;ACx4aI;EACE;AD24aN;ACx4aI;EACE;AD24aN;ACx5aI;EACE;AD25aN;ACx5aI;EACE;AD25aN;ACx5aI;EACE;AD25aN;ACx5aI;EACE;AD25aN;ACx6aI;EACE;AD26aN;ACx6aI;EACE;AD26aN;ACx6aI;EACE;AD26aN;ACx6aI;EACE;AD26aN;ACx7aI;EACE;AD27aN;ACx7aI;EACE;AD27aN;ACx7aI;EACE;AD27aN;ACx7aI;EACE;AD27aN;ACx8aI;EACE;AD28aN;ACx8aI;EACE;AD28aN;ACx8aI;EACE;AD28aN;ACx8aI;EACE;AD28aN;ACx9aI;EACE;AD29aN;ACx9aI;EACE;AD29aN;ACx9aI;EACE;AD29aN;ACx9aI;EACE;AD29aN;ACx+aI;EACE;AD2+aN;ACx+aI;EACE;AD2+aN;ACx+aI;EACE;AD2+aN;ACx+aI;EACE;AD2+aN;ACx/aI;EACE;AD2/aN;ACx/aI;EACE;AD2/aN;ACx/aI;EACE;AD2/aN;ACx/aI;EACE;AD2/aN;ACxgbI;EACE;AD2gbN;ACxgbI;EACE;AD2gbN;ACxgbI;EACE;AD2gbN;ACxgbI;EACE;AD2gbN;ACxhbI;EACE;AD2hbN;ACxhbI;EACE;AD2hbN;ACxhbI;EACE;AD2hbN;ACxhbI;EACE;AD2hbN;ACxibI;EACE;AD2ibN;ACxibI;EACE;AD2ibN;ACxibI;EACE;AD2ibN;ACxibI;EACE;AD2ibN;ACxjbI;EACE;AD2jbN;ACxjbI;EACE;AD2jbN;ACxjbI;EACE;AD2jbN;ACxjbI;EACE;AD2jbN;ACxkbI;EACE;AD2kbN;ACxkbI;EACE;AD2kbN;ACxkbI;EACE;AD2kbN;ACxkbI;EACE;AD2kbN;ACxlbI;EACE;AD2lbN;ACxlbI;EACE;AD2lbN;ACxlbI;EACE;AD2lbN;ACxlbI;EACE;AD2lbN;ACxmbI;EACE;AD2mbN;ACxmbI;EACE;AD2mbN;ACxmbI;EACE;AD2mbN;ACxmbI;EACE;AD2mbN;ACxnbI;EACE;AD2nbN;ACxnbI;EACE;AD2nbN;ACxnbI;EACE;AD2nbN;ACxnbI;EACE;AD2nbN;ACxobI;EACE;AD2obN;ACxobI;EACE;AD2obN;ACxobI;EACE;AD2obN;ACxobI;EACE;AD2obN;ACxpbI;EACE;AD2pbN;ACxpbI;EACE;AD2pbN;ACxpbI;EACE;AD2pbN;ACxpbI;EACE;AD2pbN;ACxqbI;EACE;AD2qbN;ACxqbI;EACE;AD2qbN;ACxqbI;EACE;AD2qbN;ACxqbI;EACE;AD2qbN;ACxrbI;EACE;AD2rbN;ACxrbI;EACE;AD2rbN;ACxrbI;EACE;AD2rbN;ACxrbI;EACE;AD2rbN;ACxsbI;EACE;AD2sbN;ACxsbI;EACE;AD2sbN;ACxsbI;EACE;AD2sbN;ACxsbI;EACE;AD2sbN;ACxtbI;EACE;AD2tbN;ACxtbI;EACE;AD2tbN;ACxtbI;EACE;AD2tbN;ACxtbI;EACE;AD2tbN;ACxubI;EACE;AD2ubN;ACxubI;EACE;AD2ubN;ACxubI;EACE;AD2ubN;ACxubI;EACE;AD2ubN;ACxvbI;EACE;AD2vbN;ACxvbI;EACE;AD2vbN;ACxvbI;EACE;AD2vbN;ACxvbI;EACE;AD2vbN;ACxwbI;EACE;AD2wbN;ACxwbI;EACE;AD2wbN;ACxwbI;EACE;AD2wbN;ACxwbI;EACE;AD2wbN;ACxxbI;EACE;AD2xbN;ACxxbI;EACE;AD2xbN;ACxxbI;EACE;AD2xbN;ACxxbI;EACE;AD2xbN;ACxybI;EACE;AD2ybN;ACxybI;EACE;AD2ybN;ACxybI;EACE;AD2ybN;ACxybI;EACE;AD2ybN;ACxzbI;EACE;AD2zbN;ACxzbI;EACE;AD2zbN;ACxzbI;EACE;AD2zbN;ACxzbI;EACE;AD2zbN;ACx0bI;EACE;AD20bN;ACx0bI;EACE;AD20bN;ACx0bI;EACE;AD20bN;ACx0bI;EACE;AD20bN;ACx1bI;EACE;AD21bN;ACx1bI;EACE;AD21bN;ACx1bI;EACE;AD21bN;ACx1bI;EACE;AD21bN;ACx2bI;EACE;AD22bN;ACx2bI;EACE;AD22bN;ACx2bI;EACE;AD22bN;ACx2bI;EACE;AD22bN;ACx3bI;EACE;AD23bN;ACx3bI;EACE;AD23bN;ACx3bI;EACE;AD23bN;ACx3bI;EACE;AD23bN;ACx4bI;EACE;AD24bN;ACx4bI;EACE;AD24bN;ACx4bI;EACE;AD24bN;ACx4bI;EACE;AD24bN;ACx5bI;EACE;AD25bN;ACx5bI;EACE;AD25bN;ACx5bI;EACE;AD25bN;ACx5bI;EACE;AD25bN;ACx6bI;EACE;AD26bN;ACx6bI;EACE;AD26bN;ACx6bI;EACE;AD26bN;ACx6bI;EACE;AD26bN;ACx7bI;EACE;AD27bN;ACx7bI;EACE;AD27bN;ACx7bI;EACE;AD27bN;ACx7bI;EACE;AD27bN;ACx8bI;EACE;AD28bN;ACx8bI;EACE;AD28bN;ACx8bI;EACE;AD28bN;ACx8bI;EACE;AD28bN;ACx9bI;EACE;AD29bN;ACx9bI;EACE;AD29bN;ACx9bI;EACE;AD29bN;ACx9bI;EACE;AD29bN;ACx+bI;EACE;AD2+bN;ACx+bI;EACE;AD2+bN;ACx+bI;EACE;AD2+bN;ACx+bI;EACE;AD2+bN;ACx/bI;EACE;AD2/bN;ACx/bI;EACE;AD2/bN;ACx/bI;EACE;AD2/bN;ACx/bI;EACE;AD2/bN;ACxgcI;EACE;AD2gcN;ACxgcI;EACE;AD2gcN;ACxgcI;EACE;AD2gcN;ACxgcI;EACE;AD2gcN;ACxhcI;EACE;AD2hcN;ACxhcI;EACE;AD2hcN;ACxhcI;EACE;AD2hcN;ACxhcI;EACE;AD2hcN;ACxicI;EACE;AD2icN;ACxicI;EACE;AD2icN;ACxicI;EACE;AD2icN;ACxicI;EACE;AD2icN;ACxjcI;EACE;AD2jcN;ACxjcI;EACE;AD2jcN;ACxjcI;EACE;AD2jcN;ACxjcI;EACE;AD2jcN;ACxkcI;EACE;AD2kcN;ACxkcI;EACE;AD2kcN;ACxkcI;EACE;AD2kcN;ACxkcI;EACE;AD2kcN;ACxlcI;EACE;AD2lcN;ACxlcI;EACE;AD2lcN;ACxlcI;EACE;AD2lcN;ACxlcI;EACE;AD2lcN;ACxmcI;EACE;AD2mcN;ACxmcI;EACE;AD2mcN;ACxmcI;EACE;AD2mcN;ACxmcI;EACE;AD2mcN;ACxncI;EACE;AD2ncN;ACxncI;EACE;AD2ncN;ACxncI;EACE;AD2ncN;ACxncI;EACE;AD2ncN;ACxocI;EACE;AD2ocN;ACxocI;EACE;AD2ocN;ACxocI;EACE;AD2ocN;ACxocI;EACE;AD2ocN;ACxpcI;EACE;AD2pcN;ACxpcI;EACE;AD2pcN;ACxpcI;EACE;AD2pcN;ACxpcI;EACE;AD2pcN;ACxqcI;EACE;AD2qcN;ACxqcI;EACE;AD2qcN;ACxqcI;EACE;AD2qcN;ACxqcI;EACE;AD2qcN;ACxrcI;EACE;AD2rcN;ACxrcI;EACE;AD2rcN;ACxrcI;EACE;AD2rcN;ACxrcI;EACE;AD2rcN;ACxscI;EACE;AD2scN;ACxscI;EACE;AD2scN;ACxscI;EACE;AD2scN;ACxscI;EACE;AD2scN;ACrscI;EACE;ADwscN;ACrscI;EACE;ADwscN;ACrscI;EACE;ADwscN;ACrscI;EACE;ADwscN;ACrscI;EACE;ADwscN;ACrscI;EACE;EACA;ADwscN;ACrscI;EACE;EACA;ADwscN;AC9wcI;EACE;ADixcN;AClxcI;EACE;ADqxcN;ACtxcI;EACE;ADyxcN;AC1xcI;EACE;AD6xcN;AC9xcI;EACE;ADiycN;AClycI;EACE;ADqycN;ACtycI;EACE;ADyycN;AC1ycI;EACE;AD6ycN;AC9ycI;EACE;ADizcN;AClzcI;EACE;ADqzcN;ACtzcI;EACE;ADyzcN;AC1zcI;EACE;AD6zcN;AC9zcI;EACE;ADi0cN;ACl0cI;EACE;ADq0cN;ACt0cI;EACE;ADy0cN;AC10cI;EACE;AD60cN;AC90cI;EACE;ADi1cN;ACl1cI;EACE;ADq1cN;ACt1cI;EACE;ADy1cN;AC11cI;EACE;AD61cN;AC91cI;EACE;ADi2cN;ACl2cI;EACE;ADq2cN;ACt2cI;EACE;ADy2cN;AC12cI;EACE;AD62cN;AC92cI;EACE;ADi3cN;ACl3cI;EACE;ADq3cN;ACt3cI;EACE;ADy3cN;AC13cI;EACE;AD63cN;AC93cI;EACE;ADi4cN;ACl4cI;EACE;ADq4cN;ACt4cI;EACE;ADy4cN;AC14cI;EACE;AD64cN;AC94cI;EACE;ADi5cN;ACl5cI;EACE;ADq5cN;ACt5cI;EACE;ADy5cN;AC15cI;EACE;AD65cN;AC95cI;EACE;ADi6cN;ACl6cI;EACE;ADq6cN;ACt6cI;EACE;ADy6cN;AC16cI;EACE;AD66cN;AC96cI;EACE;ADi7cN;ACl7cI;EACE;ADq7cN;ACt7cI;EACE;ADy7cN;AC17cI;EACE;AD67cN;AC97cI;EACE;ADi8cN;ACl8cI;EACE;ADq8cN;ACt8cI;EACE;ADy8cN;AC18cI;EACE;AD68cN;AC98cI;EACE;ADi9cN;ACl9cI;EACE;ADq9cN;ACt9cI;EACE;ADy9cN;AC19cI;EACE;AD69cN;AC99cI;EACE;ADi+cN;ACl+cI;EACE;ADq+cN;ACt+cI;EACE;ADy+cN;AC1+cI;EACE;AD6+cN;AC9+cI;EACE;ADi/cN;ACl/cI;EACE;ADq/cN;ACt/cI;EACE;ADy/cN;AC1/cI;EACE;AD6/cN;AC9/cI;EACE;ADigdN;AClgdI;EACE;ADqgdN;ACtgdI;EACE;ADygdN;AC1gdI;EACE;AD6gdN;AC9gdI;EACE;ADihdN;ACzgdI;EACE;EACA;AD4gdN;ACzgdI;EACE;EACA;AD4gdN;ACnhdI;EACE;EACA;ADshdN;ACnhdI;EACE;EACA;ADshdN;AC7hdI;EACE;EACA;ADgidN;AC7hdI;EACE;EACA;ADgidN;ACvidI;EACE;EACA;AD0idN;ACvidI;EACE;EACA;AD0idN;ACjjdI;EACE;EACA;ADojdN;ACjjdI;EACE;EACA;ADojdN;AC3jdI;EACE;EACA;AD8jdN;AC3jdI;EACE;EACA;AD8jdN;ACrkdI;EACE;EACA;ADwkdN;ACrkdI;EACE;EACA;ADwkdN;AC/kdI;EACE;EACA;ADkldN;AC/kdI;EACE;EACA;ADkldN;ACzldI;EACE;EACA;AD4ldN;ACzldI;EACE;EACA;AD4ldN;ACnmdI;EACE;EACA;ADsmdN;ACnmdI;EACE;EACA;ADsmdN;AC7mdI;EACE;EACA;ADgndN;AC7mdI;EACE;EACA;ADgndN;ACvndI;EACE;EACA;AD0ndN;ACvndI;EACE;EACA;AD0ndN;ACjodI;EACE;EACA;ADoodN;ACjodI;EACE;EACA;ADoodN;AC3odI;EACE;EACA;AD8odN;AC3odI;EACE;EACA;AD8odN;ACrpdI;EACE;EACA;ADwpdN;ACrpdI;EACE;EACA;ADwpdN;AC/pdI;EACE;EACA;ADkqdN;AC/pdI;EACE;EACA;ADkqdN;ACzqdI;EACE;EACA;AD4qdN;ACzqdI;EACE;EACA;AD4qdN;ACnrdI;EACE;EACA;ADsrdN;ACnrdI;EACE;EACA;ADsrdN;AC7rdI;EACE;EACA;ADgsdN;AC7rdI;EACE;EACA;ADgsdN;ACvsdI;EACE;EACA;AD0sdN;ACvsdI;EACE;EACA;AD0sdN;ACjtdI;EACE;EACA;ADotdN;ACjtdI;EACE;EACA;ADotdN;AC3tdI;EACE;EACA;AD8tdN;AC3tdI;EACE;EACA;AD8tdN;ACrudI;EACE;EACA;ADwudN;ACrudI;EACE;EACA;ADwudN;AC/udI;EACE;EACA;ADkvdN;AC/udI;EACE;EACA;ADkvdN;ACzvdI;EACE;EACA;AD4vdN;ACzvdI;EACE;EACA;AD4vdN;ACnwdI;EACE;EACA;ADswdN;ACnwdI;EACE;EACA;ADswdN;AC7wdI;EACE;EACA;ADgxdN;AC7wdI;EACE;EACA;ADgxdN;ACvxdI;EACE;EACA;AD0xdN;ACvxdI;EACE;EACA;AD0xdN;ACjydI;EACE;EACA;ADoydN;ACjydI;EACE;EACA;ADoydN;AC3ydI;EACE;EACA;AD8ydN;AC3ydI;EACE;EACA;AD8ydN;ACrzdI;EACE;EACA;ADwzdN;ACrzdI;EACE;EACA;ADwzdN;AC/zdI;EACE;EACA;ADk0dN;AC/zdI;EACE;EACA;ADk0dN;ACz0dI;EACE;EACA;AD40dN;ACz0dI;EACE;EACA;AD40dN;ACn1dI;EACE;EACA;ADs1dN;ACn1dI;EACE;EACA;ADs1dN;AC71dI;EACE;EACA;ADg2dN;AC71dI;EACE;EACA;ADg2dN;ACv2dI;EACE;EACA;AD02dN;ACv2dI;EACE;EACA;AD02dN;ACj3dI;EACE;EACA;ADo3dN;ACj3dI;EACE;EACA;ADo3dN;AC33dI;EACE;EACA;AD83dN;AC33dI;EACE;EACA;AD83dN;ACr4dI;EACE;EACA;ADw4dN;ACr4dI;EACE;EACA;ADw4dN;AC/4dI;EACE;EACA;ADk5dN;AC/4dI;EACE;EACA;ADk5dN;ACz5dI;EACE;EACA;AD45dN;ACz5dI;EACE;EACA;AD45dN;ACn6dI;EACE;EACA;ADs6dN;ACn6dI;EACE;EACA;ADs6dN;AC76dI;EACE;EACA;ADg7dN;AC76dI;EACE;EACA;ADg7dN;ACv7dI;EACE;EACA;AD07dN;ACv7dI;EACE;EACA;AD07dN;ACj8dI;EACE;EACA;ADo8dN;ACj8dI;EACE;EACA;ADo8dN;AC38dI;EACE;EACA;AD88dN;AC38dI;EACE;EACA;AD88dN;ACr9dI;EACE;EACA;ADw9dN;ACr9dI;EACE;EACA;ADw9dN;AC/9dI;EACE;EACA;ADk+dN;AC/9dI;EACE;EACA;ADk+dN;ACz+dI;EACE;EACA;AD4+dN;ACz+dI;EACE;EACA;AD4+dN;ACn/dI;EACE;EACA;ADs/dN;ACn/dI;EACE;EACA;ADs/dN;AC7/dI;EACE;EACA;ADggeN;AC7/dI;EACE;EACA;ADggeN;ACvgeI;EACE;EACA;AD0geN;ACvgeI;EACE;EACA;AD0geN;ACjheI;EACE;EACA;ADoheN;ACjheI;EACE;EACA;ADoheN;AC3heI;EACE;EACA;AD8heN;AC3heI;EACE;EACA;AD8heN;ACrieI;EACE;EACA;ADwieN;ACrieI;EACE;EACA;ADwieN;AC/ieI;EACE;EACA;ADkjeN;AC/ieI;EACE;EACA;ADkjeN;ACzjeI;EACE;EACA;AD4jeN;ACzjeI;EACE;EACA;AD4jeN;ACnkeI;EACE;EACA;ADskeN;ACnkeI;EACE;EACA;ADskeN;AC7keI;EACE;EACA;ADgleN;AC7keI;EACE;EACA;ADgleN;ACvleI;EACE;EACA;AD0leN;ACvleI;EACE;EACA;AD0leN;ACjmeI;EACE;EACA;ADomeN;ACjmeI;EACE;EACA;ADomeN;AC3meI;EACE;EACA;AD8meN;AC3meI;EACE;EACA;AD8meN;ACrneI;EACE;EACA;ADwneN;ACrneI;EACE;EACA;ADwneN;AC/neI;EACE;EACA;ADkoeN;AC/neI;EACE;EACA;ADkoeN;ACzoeI;EACE;EACA;AD4oeN;ACzoeI;EACE;EACA;AD4oeN;ACpoeI;EACE;ADuoeN;ACpoeI;EACE;ADuoeN;ACpoeI;EACE;ADuoeN;ACpoeI;EACE;ADuoeN;ACppeI;EACE;ADupeN;ACppeI;EACE;ADupeN;ACppeI;EACE;ADupeN;ACppeI;EACE;ADupeN;ACpqeI;EACE;ADuqeN;ACpqeI;EACE;ADuqeN;ACpqeI;EACE;ADuqeN;ACpqeI;EACE;ADuqeN;ACpreI;EACE;ADureN;ACpreI;EACE;ADureN;ACpreI;EACE;ADureN;ACpreI;EACE;ADureN;ACpseI;EACE;ADuseN;ACpseI;EACE;ADuseN;ACpseI;EACE;ADuseN;ACpseI;EACE;ADuseN;ACpteI;EACE;ADuteN;ACpteI;EACE;ADuteN;ACpteI;EACE;ADuteN;ACpteI;EACE;ADuteN;ACpueI;EACE;ADuueN;ACpueI;EACE;ADuueN;ACpueI;EACE;ADuueN;ACpueI;EACE;ADuueN;ACpveI;EACE;ADuveN;ACpveI;EACE;ADuveN;ACpveI;EACE;ADuveN;ACpveI;EACE;ADuveN;ACpweI;EACE;ADuweN;ACpweI;EACE;ADuweN;ACpweI;EACE;ADuweN;ACpweI;EACE;ADuweN;ACpxeI;EACE;ADuxeN;ACpxeI;EACE;ADuxeN;ACpxeI;EACE;ADuxeN;ACpxeI;EACE;ADuxeN;ACpyeI;EACE;ADuyeN;ACpyeI;EACE;ADuyeN;ACpyeI;EACE;ADuyeN;ACpyeI;EACE;ADuyeN;ACpzeI;EACE;ADuzeN;ACpzeI;EACE;ADuzeN;ACpzeI;EACE;ADuzeN;ACpzeI;EACE;ADuzeN;ACp0eI;EACE;ADu0eN;ACp0eI;EACE;ADu0eN;ACp0eI;EACE;ADu0eN;ACp0eI;EACE;ADu0eN;ACp1eI;EACE;ADu1eN;ACp1eI;EACE;ADu1eN;ACp1eI;EACE;ADu1eN;ACp1eI;EACE;ADu1eN;ACp2eI;EACE;ADu2eN;ACp2eI;EACE;ADu2eN;ACp2eI;EACE;ADu2eN;ACp2eI;EACE;ADu2eN;ACp3eI;EACE;ADu3eN;ACp3eI;EACE;ADu3eN;ACp3eI;EACE;ADu3eN;ACp3eI;EACE;ADu3eN;ACp4eI;EACE;ADu4eN;ACp4eI;EACE;ADu4eN;ACp4eI;EACE;ADu4eN;ACp4eI;EACE;ADu4eN;ACp5eI;EACE;ADu5eN;ACp5eI;EACE;ADu5eN;ACp5eI;EACE;ADu5eN;ACp5eI;EACE;ADu5eN;ACp6eI;EACE;ADu6eN;ACp6eI;EACE;ADu6eN;ACp6eI;EACE;ADu6eN;ACp6eI;EACE;ADu6eN;ACp7eI;EACE;ADu7eN;ACp7eI;EACE;ADu7eN;ACp7eI;EACE;ADu7eN;ACp7eI;EACE;ADu7eN;ACp8eI;EACE;ADu8eN;ACp8eI;EACE;ADu8eN;ACp8eI;EACE;ADu8eN;ACp8eI;EACE;ADu8eN;ACp9eI;EACE;ADu9eN;ACp9eI;EACE;ADu9eN;ACp9eI;EACE;ADu9eN;ACp9eI;EACE;ADu9eN;ACp+eI;EACE;ADu+eN;ACp+eI;EACE;ADu+eN;ACp+eI;EACE;ADu+eN;ACp+eI;EACE;ADu+eN;ACp/eI;EACE;ADu/eN;ACp/eI;EACE;ADu/eN;ACp/eI;EACE;ADu/eN;ACp/eI;EACE;ADu/eN;ACpgfI;EACE;ADugfN;ACpgfI;EACE;ADugfN;ACpgfI;EACE;ADugfN;ACpgfI;EACE;ADugfN;ACphfI;EACE;ADuhfN;ACphfI;EACE;ADuhfN;ACphfI;EACE;ADuhfN;ACphfI;EACE;ADuhfN;ACpifI;EACE;ADuifN;ACpifI;EACE;ADuifN;ACpifI;EACE;ADuifN;ACpifI;EACE;ADuifN;ACpjfI;EACE;ADujfN;ACpjfI;EACE;ADujfN;ACpjfI;EACE;ADujfN;ACpjfI;EACE;ADujfN;ACpkfI;EACE;ADukfN;ACpkfI;EACE;ADukfN;ACpkfI;EACE;ADukfN;ACpkfI;EACE;ADukfN;ACplfI;EACE;ADulfN;ACplfI;EACE;ADulfN;ACplfI;EACE;ADulfN;ACplfI;EACE;ADulfN;ACpmfI;EACE;ADumfN;ACpmfI;EACE;ADumfN;ACpmfI;EACE;ADumfN;ACpmfI;EACE;ADumfN;ACpnfI;EACE;ADunfN;ACpnfI;EACE;ADunfN;ACpnfI;EACE;ADunfN;ACpnfI;EACE;ADunfN;ACpofI;EACE;ADuofN;ACpofI;EACE;ADuofN;ACpofI;EACE;ADuofN;ACpofI;EACE;ADuofN;ACppfI;EACE;ADupfN;ACppfI;EACE;ADupfN;ACppfI;EACE;ADupfN;ACppfI;EACE;ADupfN;ACpqfI;EACE;ADuqfN;ACpqfI;EACE;ADuqfN;ACpqfI;EACE;ADuqfN;ACpqfI;EACE;ADuqfN;ACprfI;EACE;ADurfN;ACprfI;EACE;ADurfN;ACprfI;EACE;ADurfN;ACprfI;EACE;ADurfN;ACpsfI;EACE;ADusfN;ACpsfI;EACE;ADusfN;ACpsfI;EACE;ADusfN;ACpsfI;EACE;ADusfN;ACptfI;EACE;ADutfN;ACptfI;EACE;ADutfN;ACptfI;EACE;ADutfN;ACptfI;EACE;ADutfN;ACpufI;EACE;ADuufN;ACpufI;EACE;ADuufN;ACpufI;EACE;ADuufN;ACpufI;EACE;ADuufN;ACpvfI;EACE;ADuvfN;ACpvfI;EACE;ADuvfN;ACpvfI;EACE;ADuvfN;ACpvfI;EACE;ADuvfN;ACpwfI;EACE;ADuwfN;ACpwfI;EACE;ADuwfN;ACpwfI;EACE;ADuwfN;ACpwfI;EACE;ADuwfN;ACpxfI;EACE;ADuxfN;ACpxfI;EACE;ADuxfN;ACpxfI;EACE;ADuxfN;ACpxfI;EACE;ADuxfN;ACpyfI;EACE;ADuyfN;ACpyfI;EACE;ADuyfN;ACpyfI;EACE;ADuyfN;ACpyfI;EACE;ADuyfN;ACpzfI;EACE;ADuzfN;ACpzfI;EACE;ADuzfN;ACpzfI;EACE;ADuzfN;ACpzfI;EACE;ADuzfN;ACp0fI;EACE;ADu0fN;ACp0fI;EACE;ADu0fN;ACp0fI;EACE;ADu0fN;ACp0fI;EACE;ADu0fN;ACp1fI;EACE;ADu1fN;ACp1fI;EACE;ADu1fN;ACp1fI;EACE;ADu1fN;ACp1fI;EACE;ADu1fN;ACp2fI;EACE;ADu2fN;ACp2fI;EACE;ADu2fN;ACp2fI;EACE;ADu2fN;ACp2fI;EACE;ADu2fN;ACp3fI;EACE;ADu3fN;ACp3fI;EACE;ADu3fN;ACp3fI;EACE;ADu3fN;ACp3fI;EACE;ADu3fN;ACp4fI;EACE;ADu4fN;ACp4fI;EACE;ADu4fN;ACp4fI;EACE;ADu4fN;ACp4fI;EACE;ADu4fN;ACp5fI;EACE;ADu5fN;ACp5fI;EACE;ADu5fN;ACp5fI;EACE;ADu5fN;ACp5fI;EACE;ADu5fN;ACp6fI;EACE;ADu6fN;ACp6fI;EACE;ADu6fN;ACp6fI;EACE;ADu6fN;ACp6fI;EACE;ADu6fN;ACp7fI;EACE;ADu7fN;ACp7fI;EACE;ADu7fN;ACp7fI;EACE;ADu7fN;ACp7fI;EACE;ADu7fN;ACp8fI;EACE;ADu8fN;ACp8fI;EACE;ADu8fN;ACp8fI;EACE;ADu8fN;ACp8fI;EACE;ADu8fN;ACp9fI;EACE;ADu9fN;ACp9fI;EACE;ADu9fN;ACp9fI;EACE;ADu9fN;ACp9fI;EACE;ADu9fN;ACp+fI;EACE;ADu+fN;ACp+fI;EACE;ADu+fN;ACp+fI;EACE;ADu+fN;ACp+fI;EACE;ADu+fN;ACp/fI;EACE;ADu/fN;ACp/fI;EACE;ADu/fN;ACp/fI;EACE;ADu/fN;ACp/fI;EACE;ADu/fN;ACpggBI;EACE;ADuggBN;ACpggBI;EACE;ADuggBN;ACpggBI;EACE;ADuggBN;ACpggBI;EACE;ADuggBN;ACphgBI;EACE;ADuhgBN;ACphgBI;EACE;ADuhgBN;ACphgBI;EACE;ADuhgBN;ACphgBI;EACE;ADuhgBN;ACpigBI;EACE;ADuigBN;ACpigBI;EACE;ADuigBN;ACpigBI;EACE;ADuigBN;ACpigBI;EACE;ADuigBN;ACpjgBI;EACE;ADujgBN;ACpjgBI;EACE;ADujgBN;ACpjgBI;EACE;ADujgBN;ACpjgBI;EACE;ADujgBN;ACpkgBI;EACE;ADukgBN;ACpkgBI;EACE;ADukgBN;ACpkgBI;EACE;ADukgBN;ACpkgBI;EACE;ADukgBN;ACplgBI;EACE;ADulgBN;ACplgBI;EACE;ADulgBN;ACplgBI;EACE;ADulgBN;ACplgBI;EACE;ADulgBN;ACpmgBI;EACE;ADumgBN;ACpmgBI;EACE;ADumgBN;ACpmgBI;EACE;ADumgBN;ACpmgBI;EACE;ADumgBN;ACpngBI;EACE;ADungBN;ACpngBI;EACE;ADungBN;ACpngBI;EACE;ADungBN;ACpngBI;EACE;ADungBN;ACpogBI;EACE;ADuogBN;ACpogBI;EACE;ADuogBN;ACpogBI;EACE;ADuogBN;ACpogBI;EACE;ADuogBN;AC7lgBA;EACE;ADgmgBF;AC7lgBA;EACE;ADgmgBF;ACzlgBA;EACE;AD4lgBF;ACzlgBA;EACE;AD4lgBF;ACzlgBA;EACE;AD4lgBF;ACrlgBA;EACE;ADwlgBF;ACrlgBA;EACE;ADwlgBF;ACrlgBA;EACE;ADwlgBF;ACrlgBA;EACE;ADwlgBF;ADl5cA;AA+IA;AAobA;AAmwDA;AA6CA;AA72EE;EAII;ACi5cN;AD7pcE;EACE;AC+pcJ;AD7pcI;EAEE;AC8pcN;AD1pcI;EACE;AC4pcN;ADzpcI;EACE;EACA;AC2pcN;ADxpcI;EACE;AC0pcN;ADtpcE;EACE;ACwpcJ;ADrpcE;EACE;ACupcJ;ADppcE;EACE;ACspcJ;AD3mcE;EACE;AC6mcJ;AD1mcE;EACE;AC4mcJ;AD1jcE;EACE;AC4jcJ;AD1jcI;EACE;AC4jcN;ADxjcE;EACE,cAZe;ACskcnB;ADvjcE;;EAEE;ACyjcJ;ADjjcE;;;;EAIE;ACmjcJ;ADhjcE;;EAEE;ACkjcJ;AD7icI;;EACE,mBAxCa;ACwlcnB;AD95SE;EAIE;EACA;AC65SJ;ADt5SI;EAx4MF;ACiyfF;ADz5SI;EAx4MF;ACoyfF;AD55SI;EAx4MF;ACuyfF;AD/5SI;EAx4MF;AC0yfF;ADl6SI;EAx4MF;AC6yfF;ADr6SI;EAx4MF;ACgzfF;ADx6SI;EAx4MF;ACmzfF;AD36SI;EAx4MF;ACszfF;AD96SI;EAx4MF;ACyzfF;ADj7SI;EAx4MF;AC4zfF;ADp7SI;EAx4MF;AC+zfF;ADv7SI;EAx4MF;ACk0fF;AD17SI;EAx4MF;ACq0fF;AD77SI;EAx4MF;ACw0fF;ADh8SI;EAx4MF;AC20fF;ADn8SI;EAx4MF;AC80fF;ADt8SI;EAx4MF;ACi1fF;ADz8SI;EAx4MF;ACo1fF;AD58SI;EAx4MF;ACu1fF;AD/8SI;EAx4MF;AC01fF;ADl9SI;EAx4MF;AC61fF;ADr9SI;EAx4MF;ACg2fF;ADx9SI;EAx4MF;ACm2fF;AD39SI;EAx4MF;ACs2fF;AD99SI;EAx4MF;ACy2fF;AD19SI;EACE;AC49SN;ADt4bE;EAEE;EACA;ACw4bJ;ADt2fE;EAXA;ACo3fF;ADp4bI;EACE;ACs4bN;ADp4bM;EACE;ACs4bR;ADxwbE;EACE;EACA;AC0wbJ;AD7sgBI;EAs8EE;EACA;AC0wbN;ADrwbI;EACE;EACA;ACwwbN;ADnwbI;EACE;EACA;ACqwbN;ADjwbE;EACE;ACmwbJ;AD/vbI;EACE;ACiwbN;AD5vbI;EAWI;EAMF;AC+ubN;AD3ubE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AC6ubJ;AD1ubE;;EAEE;AC4ubJ;ADvubE;EAEE;ACwubJ;ADv4bE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;ACi5bvB;ADr4bI;EACE;ACu4bN;ADl4bI;EACE;ACo4bN;AD/3bI;EACE;ACi4bN;AD53bI;EACE;EACA;AC83bN;ADz3bI;EACE;AC23bN;ADt3bI;EACE;EACA;ACw3bN;ADl3bM;EACE;ACo3bR;AD/2bM;EACE;EACA;ACi3bR;AD52bM;EACE;AC82bR;ADz2bM;EACE;EACA;AC22bR;AD96bE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;ACy7bzB;AD56bI;EACE;AC86bN;ADz6bI;EACE;AC26bN;ADt6bI;EACE;ACw6bN;ADn6bI;EACE;EACA;ACq6bN;ADh6bI;EACE;ACk6bN;AD75bI;EACE;EACA;AC+5bN;ADz5bM;EACE;AC25bR;ADt5bM;EACE;EACA;ACw5bR;ADn5bM;EACE;ACq5bR;ADh5bM;EACE;EACA;ACk5bR;ADr9bE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AC89bvB;ADn9bI;EACE;ACq9bN;ADh9bI;EACE;ACk9bN;AD78bI;EACE;AC+8bN;AD18bI;EACE;EACA;AC48bN;ADv8bI;EACE;ACy8bN;ADp8bI;EACE;EACA;ACs8bN;ADh8bM;EACE;ACk8bR;AD77bM;EACE;EACA;AC+7bR;AD17bM;EACE;AC47bR;ADv7bM;EACE;EACA;ACy7bR;AD9xbE;EA/vEA;EAiwEE;EACA;ACgybJ;ADnqbE;EAKE;EACA;ACiqbJ;ADjsbE;EACE;ACmsbJ;ADjsbE;EACE;ACmsbJ;ADjsbE;EACE;ACmsbJ;AD/rbI;EAEE;ACgsbN;ADnwbE;EACE;ACqwbJ;ADlwbE;EACE;ACowbJ;ADjwbE;EACE;ACmwbJ;ADhwbE;EACE;ACkwbJ;ADjrbI;EACE,YAxGuB;EAyGvB;ACmrbN;AD/qbE;EACE;ACirbJ;AD5qbE;EACE;AC8qbJ;AD3qbE;EAEE;EACA;AC4qbJ;ADvubE;EACE;ACyubJ;ADvubE;EACE;ACyubJ;ADvubE;EACE;ACyubJ;ADrubI;EAEE;ACsubN;ADnvbE;EACE;ACqvbJ;ADnvbE;EACE;ACqvbJ;ADnvbE;EACE;ACqvbJ;ADjvbI;EAEE;ACkvbN;ADpxbE;EAXA,0CADmB;ACmybrB;ADnxbE;EAfA,0CADmB;ACsybrB;ADlxbE;EAnBA,0CADmB;ACyybrB;ADlmgBE;EAXA;ACgngBF;ADrmgBE;EAXA;ACmngBF;ADxmgBE;EAXA;ACsngBF;AD3mgBE;EAXA;ACyngBF;AD9mgBE;EAXA;AC4ngBF;ADjngBE;EAXA;AC+ngBF;ADpngBE;EAXA;ACkogBF;ADjobE;;EAjgFA;ACsogBF;ADhobE;;EAEE;ACkobJ;AD/nbE;EACE;ACiobJ;AD/nbI;EACE;ACiobN;AD7nbE;EACE;EACA;AC+nbJ;AD7nbI;EACE;AC+nbN;AD3nbE;EACE;AC6nbJ;AD1nbE;EACE;EACA;AC4nbJ;ADxnbI;EACE;EACA;EACA;AC0nbN;ADtnbE;EACE;EACA;ACwnbJ;ADtnbI;EACE;ACwnbN;ADpnbE;EACE;EACA;ACsnbJ;ADpnbI;EACE;ACsnbN;ADnnbI;EACE;ACqnbN;ADjnbE;;EAEE;ACmnbJ;ADlmbI;EACE,iBALc;ACymbpB;ADjkbE;EAEE;EACA;ACkkbJ;ADprgBE;EAXA;ACksgBF;ADvrgBE;EAXA;ACqsgBF;ADhkbE;EACE;ACkkbJ;AD1/aE;EACE;AC4/aJ;ADz/aE;EACE,aAdoB;ACygbxB;ADx/aE;EAGE;ACw/aJ;ADr/aE;EACE,yBAxBoB;AC+gbxB;ADn/aI;EACE;ACq/aN;ADl/aI;EACE;ACo/aN;ADj/aI;EACE;ACm/aN;AD5+aM;EACE,yBAtCW;ACohbnB;ADz+aM;EACE,qBA5CW;ACuhbnB;ADv+aI;EACE;ACy+aN;ADn+aE;EACE;ACq+aJ;ADh+aI;;EACE;ACm+aN;ADh+aI;;EACE;ACm+aN;ADh+aI;;EACE;ACm+aN;AD14aE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;ACg5a1B;ADt7aE;EACE,0BAqCsB;EApCtB;ACw7aJ;AD94aM;EA/2FJ;ACgwgBF;AD74aM;EACE;AC+4aR;AD34aI;EACE;AC64aN;AD14aI;EACE;AC44aN;ADv4aI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;ACq7anC;AD18aE;EACE,YAoB+B;EAnB/B;AC48aJ;ADv7aE;EATA,0CADmB;ACo8arB;AD94aI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;ACg8anC;ADr9aE;EACE,YAoB+B;EAnB/B;ACu9aJ;ADl8aE;EATA,0CADmB;AC+8arB;ADr5aI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AC28anC;ADh+aE;EACE,YAoB+B;EAnB/B;ACk+aJ;AD78aE;EATA,0CADmB;AC09arB;ADt0aE;EACE;ACw0aJ;ADr0aE;;;;EAIE;ACu0aJ;ADp0aE;;EAEE;ACs0aJ;ADn0aE;EACE;ACq0aJ;ADl0aE;EACE;ACo0aJ;AD3taE;EACE;AC6taJ;ADxtaE;;;EAGE;AC0taJ;ADvtaE;EACE;ACytaJ;ADttaE;EACE;ACwtaJ;ADrtaE;EACE;ACutaJ;ADptaE;;EAEE;EACA;ACstaJ;AD5vaE;EA2CI,0BAlCa;ACsvanB;ADhtaE;EACE,0BAvCe;ACyvanB;AD/saE;EAOI;AC2saN;ADrwaE;EAqEI;ACmsaN;ADxwaE;EA8EM;AC6raR;AD5maE;EACE,iCAtMA;ACozaJ;AD3maE;;EAEE,kCAViB;ACunarB;AD1maE;;EAEE;AC4maJ;ADzmaE;;EAEE;AC2maJ;ADxmaE;;EAEE,mBAxBc;ACkoalB;ADvmaE;;EAEE,mBA5BuB;ACqoa3B;ADt0aE;EACE;EACA;ACw0aJ;ADr0aE;EAII;ACo0aN;AD3zaE;EACE;AC6zaJ;AD5yaE;;;EARM;ACyzaR;ADrtaE;EAnrGA;EAqrGE;EACA;ACutaJ;ADvpaE;EACE,iCAtMA;AC+1aJ;ADtpaE;;EAEE,kCAViB;ACkqarB;ADrpaE;;EAEE;ACupaJ;ADppaE;;EAEE;ACspaJ;ADnpaE;;EAEE,mBAxBc;AC6qalB;ADlpaE;;EAEE,mBA5BuB;ACgra3B;ADj3aE;EACE;EACA;ACm3aJ;ADh3aE;EAII;AC+2aN;ADt2aE;EACE;ACw2aJ;ADv1aE;;;EARM;ACo2aR;AD7raE;EACE,kCAtMA;ACq4aJ;AD5raE;;EAEE,kCAViB;ACwsarB;AD3raE;;EAEE;AC6raJ;AD1raE;;EAEE;AC4raJ;ADzraE;;EAEE,mBAxBc;ACmtalB;ADxraE;;EAEE,mBA5BuB;ACsta3B;ADv5aE;EACE;EACA;ACy5aJ;ADt5aE;EAII;ACq5aN;AD54aE;EACE;AC84aJ;AD73aE;;;EARM;AC04aR;ADxxaE;EAjsGA;AC49gBF;ADvxaE;EACE;ACyxaJ;ADvxaI;EACE;ACyxaN;ADtxaI;EACE;ACwxaN;ADpxaE;EACE;ACsxaJ;ADpraE;EApzGA;EAszGE;EACA;ACsraJ;ADljbE;EACE;ACojbJ;ADjjbE;EACE;ACmjbJ;ADtmaE;EAEE;EACA;ACumaJ;AD5+gBE;EAXA;AC0/gBF;ADvmaE;EACE;ACymaJ;AD7naM;EAwBF;ACwmaJ;ADnmaE;EACE;IAEE;EComaJ;AACF;ADjmaE;EACE;ACmmaJ;ADhmaE;;EAEE;ACkmaJ;AD/laE;EACE;ACimaJ;AD/laI;;EAEE;ACimaN;ADrkaI;EACE,YALe;AC4karB;ADrkaM;EACE,YAVY;ACilapB;ADliVE;EACE,yBAXY;AC+iVhB;ADjiVE;EACE,yBAfY;ACkjVhB;ADhiVE;EACE,cAlBoB;ACojVxB;ADhiVI;EACE,cAhBqB;ACkjV3B;AD/hVI;EACE,cAnBmB;ACojVzB;AD7hVE;EACE,cA7BqB;AC4jVzB;AD5hVE;EACE,qCA9BqB;AC4jVzB;AD1hVI;EACE,yBAhCsB;AC4jV5B;AD1hVM;EACE,yBArCmB;ACikV3B;ADzhVM;EACE,yBAxCiB;ACmkVzB;ADrhVI;EACE,cA9CsB;ACqkV5B;ADphVI;EACE,cApDqB;AC0kV3B;ADnhVI;EACE,cAvDmB;AC4kVzB;AD7gVI;EACE,cAhEmB;AC+kVzB;AD7gVM;;EAEE,cApEiB;ACmlVzB;AD3gVI;;EAEE,yBA1EmB;ACulVzB;ADzgVE;EACE,cA/EqB;AC0lVzB;AD7+VI;EACE,0BALU;ACo/VhB;AD5+VI;EACE,0BATU;ACu/VhB;AD3+VI;EACE,qCAZc;ACy/VpB;AD1+VI;EAj/DF;EACA;EACA;AC89ZF;AD5pVI;EACE,qCAJc;ACkqVpB;AD3pVI;EAx0EF;EACA;EACA;ACs+ZF;AD7nWI;EACE,qCAPc;ACsoWpB;AD5nWI;EACE,qCAVuB;ACwoW7B;AD3nWI;EACE,qCAbc;AC0oWpB;ADznWM;EACE,0BAjBiB;AC4oWzB;ADxnWM;EACE;AC0nWR;ADr0VI;EACE,0BATY;ACg1VlB;ADp0VI;EACE,0BAZkB;ACk1VxB;ADl0VM;EACE,cAhBkB;ACo1V1B;ADj0VM;EACE,cAnBiB;ACs1VzB;ADh0VM;EACE,cAtBe;ACw1VvB;AD5zVM;EACE,cA7Be;AC21VvB;ADzzVM;EACE,0BAxCiB;ACm2VzB;ADxzVM;EACE,0BAtCmB;ACg2V3B;AD7jaI;EACE;AC+jaN;AD5jaI;EACE;AC8jaN;AD3jaI;EACE;AC6jaN;ADj9ZE;EACE;ACm9ZJ;ADh9ZE;;EAEE;ACk9ZJ;AD/8ZE;EACE;ACi9ZJ;AD1gaE;EA4DI;ACi9ZN;AD7gaE;EA4DI;ACi9ZN;ADzgaE;EAwDI;ACo9ZN;ADxgaE;EAoDI;ACu9ZN;ADvgaE;EAgDI;AC09ZN;ADv8ZE;EACE;ACy8ZJ;ADt8ZE;;EAEE;ACw8ZJ;ADr8ZE;EACE;ACu8ZJ;ADl5ZI;EACE;ACo5ZN;ADj5ZI;EACE;ACm5ZN;ADh5ZI;EACE;ACk5ZN;AD94ZE;EACE;ACg5ZJ;AD14ZI;;;;;EACE;ACg5ZN;AD34ZI;EACE;AC64ZN;ADrzZE;EAEE;ACszZJ;ADlshBE;EAXA;ACgthBF;ADtzZE;EACE;EACA;ACwzZJ;ADrzZM;;EAGE;ACszZR;ADjzZE;;EAEE;ACmzZJ;AD5yZI;;;;EACE;ACizZN;ADnvZE;EACE;ACqvZJ;ADlvZE;;EAEE;ACovZJ;ADjvZE;;EAEE;EACA;ACmvZJ;ADhvZE;;EAEE;ACkvZJ;AD9uZI;;;;EAIE;ACgvZN;AD3tZI;EACE,gBAJK;ACiuZX;AD5rZE;EACE;AC8rZJ;AD3rZE;EACE;AC6rZJ;AD1rZE;EACE;AC4rZJ;ADxrZI;EACE;AC0rZN;ADvrZI;EACE;ACyrZN;ADtrZI;EACE;ACwrZN;ADnrZI;EACE;ACqrZN;ADlrZI;EACE;ACorZN;ADjrZI;EACE;ACmrZN;AD5oZI;EACE;AC8oZN;AD3oZI;EACE;AC6oZN;AD1oZI;EACE;AC4oZN;ADvlZE;EACE;ACylZJ;AD9mZE;EACE;ACgnZJ;AD7mZE;;EAIE;AC6mZJ;ADrnZE;EACE;ACunZJ;ADpnZE;;EAIE;AConZJ;AD5nZE;EACE;AC8nZJ;AD3nZE;;EAIE;AC2nZJ;AD1lZM;;EAEE;AC4lZR;ADzlZM;;EAEE;AC2lZR;ADxlZM;EACE;AC0lZR;ADplZI;EACE;ACslZN;ADtiZE;EACE;ACwiZJ;ADriZE;EACE;ACuiZJ;ADpiZE;EACE;ACsiZJ;ADniZE;EACE;ACqiZJ;ADliZE;EACE;ACoiZJ;ADz0hBE;EAXA;ACu1hBF;ADpiZI;EACE;ACsiZN;ADhiZM;EACE;ACkiZR;AD/hZM;EACE;ACiiZR;AD9hZM;EACE;ACgiZR;AD5hZI;EACE;AC8hZN;AD3hZI;EACE;AC6hZN;ADp+YE;EACE,yBALmC;EAMnC;ACs+YJ;ADn+YE;EACE,uBAXwB;EAYxB;ACq+YJ;ADn+YI;EACE,uBAb2B;ACk/YjC;ADl+YI;EAl5IF;ACu3hBF;AD99YE;EACE,2CAvBmB;ACu/YvB;AD99YI;EACE,0CA1BiB;EA2BjB;ACg+YN;AD59YE;EACE,0CAhCmB;EAiCnB;AC89YJ;AD59YI;EACE;EACA,2CArCiB;ACmgZvB;AD19YE;EAQI;ACq9YN;AD56YI;EACE;AC86YN;AD36YI;EAGE;AC26YN;ADx6YI;EAGE;ACw6YN;ADr7YI;EACE;ACu7YN;ADp7YI;EAGE;ACo7YN;ADj7YI;EAGE;ACi7YN;AD97YI;EACE;ACg8YN;AD77YI;EAGE;AC67YN;AD17YI;EAGE;AC07YN;ADr5YI;EAGE,uBAhBqB;ACq6Y3B;ADj5YE;EAthJA;EAwhJE;ACm5YJ;ADh5YE;EACE,qCA3BoB;AC66YxB;ADp0YE;EACE,qCAVqB;ACg1YzB;AD/2YE;;;EAGE;ACi3YJ;AD92YE;EACE;ACg3YJ;AD72YE;EAGE,uCADQ;AC82YZ;AD13YE;;;EAGE;AC43YJ;ADz3YE;EACE;AC23YJ;ADx3YE;EAGE,uCADQ;ACy3YZ;ADr4YE;;;EAGE;ACu4YJ;ADp4YE;EACE;ACs4YJ;ADn4YE;EAGE,wCADQ;ACo4YZ;ADt1YI;;EACE,qCA3B2B;ACo3YjC;ADp1YI;;;EAGE,qCAlCwB;ACw3Y9B;ADl1YM;EACE,qCAvCsB;AC23Y9B;AD90YI;EAGE,qCADQ;AC+0Yd;ADp0YM;;EAEE,qCA3DqC;ACi4Y7C;ADl0YQ;;EAEE,qCAhEyC;ACo4YnD;AD9zYM;EACE,iCA3EiB;EA4EjB;ACg0YR;AD3zYQ;EACE,iCAjFuB;AC84YjC;AD1zYQ;EACE,iCApFoB;ACg5Y9B;ADtzYE;EACE,gCAvFsB;AC+4Y1B;AD/yYE;EACE;EAIA;AC8yYJ;ADpyYE;EACE;ACsyYJ;AD/sYI;EAGE;AC+sYN;ADzsYI;EACE;IACE;EC2sYN;AACF;ADxsYI;;EAIE;ACwsYN;ADrsYI;EAGE;EACA;ACqsYN;ADlsYI;;;EAGE;EACA;ACosYN;ADhsYM;EACE;ACksYR;AD/rYM;;;EAGE;EACA;ACisYR;AD5rYM;EACE;AC8rYR;AD3rYM;;;EAGE;EACA;AC6rYR;ADzrYI;EACE;EACA;AC2rYN;ADxrYI;EACE;AC0rYN;ADvrYI;EACE;ACyrYN;ADrrYE;EACE;ACurYJ;ADprYE;EACE;ACsrYJ;ADnrYE;;;EAGE;ACqrYJ;AD9oYI;EACE,YALK;ACqpYX;AD7oYI;;EAEE;AC+oYN;AD1oYI;EACE;EACA;AC4oYN;ADvoYM;EACE;ACyoYR;ADpoYI;EACE;ACsoYN;ADvmYE;EAYI;AC8lYN;ADljYE;;EAEE,4CAJc;ACwjYlB;ADhjYI;;EAEE,yCAVY;EAWZ;ACkjYN;AD9iYE;EACE;ACgjYJ;AD9iYI;EACE;ACgjYN;AD5iYE;EACE;AC8iYJ;AD3iYE;EACE;AC6iYJ;ADziYE;;EAEE;EACA;AC2iYJ;AD7/XM;;;;;EACE;ACmgYR;AD9gYE;EACE;ACghYJ;ADjhYE;EACE;ACmhYJ;AD1gYM;;;;;EACE;ACghYR;AD3hYE;EACE;AC6hYJ;AD9hYE;EACE;ACgiYJ;ADvhYM;;;;;EACE;AC6hYR;ADxiYE;EACE;AC0iYJ;AD3iYE;EACE;AC6iYJ;ADpiYM;;;;;EACE;AC0iYR;AD/hYE;EACE;ACiiYJ;AD7hYE;EACE;AC+hYJ;AD7hYI;EACE;AC+hYN;AD1hYE;;;;;EAGE;AC8hYJ;AD3hYE;EACE;AC6hYJ;ADxhYE;;;EAEE;AC2hYJ;ADnkYM;;;;;EACE;ACykYR;AD9jYE;EACE;ACgkYJ;AD5jYE;EACE;AC8jYJ;AD5jYI;EACE;AC8jYN;ADzjYE;;;;;EAGE;AC6jYJ;AD1jYE;EACE;AC4jYJ;ADvjYE;;;EAEE;AC0jYJ;ADlmYM;;;;;EACE;ACwmYR;AD7lYE;EACE;AC+lYJ;AD3lYE;EACE;AC6lYJ;AD3lYI;EACE;AC6lYN;ADxlYE;;;;;EAGE;AC4lYJ;ADzlYE;EACE;AC2lYJ;ADtlYE;;;EAEE;ACylYJ;ADp+XE;EACE;EACA;ACs+XJ;ADp+XI;EApCF;EACA;AC2gYF;ADp+XI;EAxCF;EACA;AC+gYF;ADp+XI;EA5CF;EACA;ACmhYF;AD/gYE;;;EAGE;ACihYJ;AD9gYE;;;;;EAKE;ACghYJ;AD7gYE;EACE;AC+gYJ;AD5iYE;EACE,gBA4Ee;ACk+XnB;AD5iYE;EACE,YAyEe;ACq+XnB;ADz9XI;EAzFF;IACE,gBA8Ec;ECu+XhB;EDnjYA;IACE,YA2Ec;EC0+XhB;AACF;ADv7XE;EACE;ACy7XJ;ADjiWE;EACE;ACmiWJ;ADhiWE;;EAEE;ACkiWJ;AD5gWI;EACE,gBAJK;ACkhWX;AD/4XE;EAGE;EACA;EA35KF;AC2yiBF;AD34XE;EACE;AC64XJ;AIrxjBQ;;;;;EAKI;AJuxjBZ;AIpxjBQ;EACI;EACA;EACA;AJsxjBZ;AIpxjBY;EACI;EACA;AJsxjBhB;AInxjBY;EACI;EACA;AJqxjBhB;AKzyjBQ;;;;;EAKI;AL2yjBZ;AKxyjBQ;EACI;EACA;AL0yjBZ;AKxyjBY;EACI;EACA;AL0yjBhB;AKvyjBY;EACI;EACA;ALyyjBhB;AKtyjBY;EACI;EACA;ALwyjBhB;AKryjBY;EACI;EACA;EACA;ALuyjBhB;AKpyjBY;EACI;ALsyjBhB;AKnyjBY;EACI;ALqyjBhB;AKlyjBY;EACI;EACA;ALoyjBhB;AKjyjBY;EACI;EACA;ALmyjBhB;AG70jBQ;EEwCI;IAKQ;ELoyjBlB;AACF;AKjyjBY;EACI;ALmyjBhB;AKhyjBY;EAEQ;EAGJ;EACA;EACA;EACA;AL+xjBhB;AMj2jBQ;;;;;EAKI;ANm2jBZ;AMh2jBQ;EACI;EACA;EACA;ANk2jBZ;AMh2jBY;EACI;ANk2jBhB;AMh2jBgB;EACI;EACA;ANk2jBpB;AM71jBQ;EAIQ;AN41jBhB;AMz1jBY;EACI;EACA;AN21jBhB;AMx1jBY;EAEQ;EAGJ;EACA;EACA;EACA;ANu1jBhB;AMp1jBY;EACI;ANs1jBhB;AMn1jBY;EAEI;ANo1jBhB;AMl1jBgB;EPgbd;ACq6iBF;AMj1jBgB;EACI;ANm1jBpB;AMh1jBgB;EACI;ANk1jBpB;AM/0jBgB;EACI;EACA;ANi1jBpB;AM50jBQ;EAIQ;AN20jBhB;AMx0jBY;;EAEI;AN00jBhB;AO95jBQ;;;;;EAKI;APg6jBZ;AO75jBQ;EACI;EACA;EACA;EACA;AP+5jBZ;AO55jBQ;EASQ;APs5jBhB;AGv6jBQ;EIQA;IAGQ;EPg6jBd;AACF;AOx5jBY;EACI;EACA;EACA;AP05jBhB;AOv5jBY;EACI;APy5jBhB;AOt5jBY;EACI;EACA;APw5jBhB;AOr5jBY;EACI;EACA;EACA;EACA;APu5jBhB;AOp5jBY;EACI;EACA;EACA;APs5jBhB;AOn5jBY;EACI;APq5jBhB;AGt8jBQ;EIgDI;IAIQ;IACA;IACA;EPs5jBlB;AACF;AOn5jBY;EACI;APq5jBhB;AOn5jBgB;ERoad;ACk/iBF;AOl5jBgB;EACI;APo5jBpB;AOj5jBgB;EACI;APm5jBpB;AO94jBgB;EACI;APg5jBpB;AO54jBY;EACI;EACA;AP84jBhB;AO34jBY;EAEQ;EAGJ;EACA;EACA;EACA;AP04jBhB;AOv4jBY;EACI;EACA;APy4jBhB;AOv4jBgB;EACI;EACA;APy4jBpB;AOr4jBY;EACI;EACA;EACA;EACA;APu4jBhB;AOp4jBY;EACI;EACA;APs4jBhB;AOj4jBgB;EACI;EACA;APm4jBpB;AOj4jBoB;EACI;APm4jBxB;AOh4jBoB;EACI;EACA;EACA;APk4jBxB;AO/3jBoB;;;;EAII;EACA;EACA;APi4jBxB;AO93jBoB;EACI;APg4jBxB;AO53jBgB;EACI;EACA;EACA;EACA;EACA;AP83jBpB;AO53jBoB;EACI;EACA;UAAA;AP83jBxB;AO13jBgB;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AP43jBpB;AD9vgBE;EAII;AC8vgBN;AD1ggBE;EACE;AC4ggBJ;AD1ggBI;EAEE;AC2ggBN;ADvggBI;EACE;ACyggBN;ADtggBI;EACE;EACA;ACwggBN;ADrggBI;EACE;ACuggBN;ADnggBE;EACE;ACqggBJ;ADlggBE;EACE;ACoggBJ;ADjggBE;EACE;ACmggBJ;ADx9fE;EACE;AC09fJ;ADv9fE;EACE;ACy9fJ;ADv6fE;EACE;ACy6fJ;ADv6fI;EACE;ACy6fN;ADr6fE;EACE,cAZe;ACm7fnB;ADp6fE;;EAEE;ACs6fJ;AD95fE;;;;EAIE;ACg6fJ;AD75fE;;EAEE;AC+5fJ;AD15fI;;EACE,mBAxCa;ACq8fnB;AD3wWE;EAIE;EACA;AC0wWJ;ADnwWI;EAx4MF;AC8ojBF;ADtwWI;EAx4MF;ACipjBF;ADzwWI;EAx4MF;ACopjBF;AD5wWI;EAx4MF;ACupjBF;AD/wWI;EAx4MF;AC0pjBF;ADlxWI;EAx4MF;AC6pjBF;ADrxWI;EAx4MF;ACgqjBF;ADxxWI;EAx4MF;ACmqjBF;AD3xWI;EAx4MF;ACsqjBF;AD9xWI;EAx4MF;ACyqjBF;ADjyWI;EAx4MF;AC4qjBF;ADpyWI;EAx4MF;AC+qjBF;ADvyWI;EAx4MF;ACkrjBF;AD1yWI;EAx4MF;ACqrjBF;AD7yWI;EAx4MF;ACwrjBF;ADhzWI;EAx4MF;AC2rjBF;ADnzWI;EAx4MF;AC8rjBF;ADtzWI;EAx4MF;ACisjBF;ADzzWI;EAx4MF;ACosjBF;AD5zWI;EAx4MF;ACusjBF;AD/zWI;EAx4MF;AC0sjBF;ADl0WI;EAx4MF;AC6sjBF;ADr0WI;EAx4MF;ACgtjBF;ADx0WI;EAx4MF;ACmtjBF;AD30WI;EAx4MF;ACstjBF;ADv0WI;EACE;ACy0WN;ADnvfE;EAEE;EACA;ACqvfJ;ADntjBE;EAXA;ACiujBF;ADjvfI;EACE;ACmvfN;ADjvfM;EACE;ACmvfR;ADrnfE;EACE;EACA;ACunfJ;AD1jkBI;EAs8EE;EACA;ACunfN;ADlnfI;EACE;EACA;ACqnfN;ADhnfI;EACE;EACA;ACknfN;AD9mfE;EACE;ACgnfJ;AD5mfI;EACE;AC8mfN;ADzmfI;EAWI;EAMF;AC4lfN;ADxlfE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AC0lfJ;ADvlfE;;EAEE;ACylfJ;ADplfE;EAEE;ACqlfJ;ADpvfE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AC8vfvB;ADlvfI;EACE;ACovfN;AD/ufI;EACE;ACivfN;AD5ufI;EACE;AC8ufN;ADzufI;EACE;EACA;AC2ufN;ADtufI;EACE;ACwufN;ADnufI;EACE;EACA;ACqufN;AD/tfM;EACE;ACiufR;AD5tfM;EACE;EACA;AC8tfR;ADztfM;EACE;AC2tfR;ADttfM;EACE;EACA;ACwtfR;AD3xfE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;ACsyfzB;ADzxfI;EACE;AC2xfN;ADtxfI;EACE;ACwxfN;ADnxfI;EACE;ACqxfN;ADhxfI;EACE;EACA;ACkxfN;AD7wfI;EACE;AC+wfN;AD1wfI;EACE;EACA;AC4wfN;ADtwfM;EACE;ACwwfR;ADnwfM;EACE;EACA;ACqwfR;ADhwfM;EACE;ACkwfR;AD7vfM;EACE;EACA;AC+vfR;ADl0fE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AC20fvB;ADh0fI;EACE;ACk0fN;AD7zfI;EACE;AC+zfN;AD1zfI;EACE;AC4zfN;ADvzfI;EACE;EACA;ACyzfN;ADpzfI;EACE;ACszfN;ADjzfI;EACE;EACA;ACmzfN;AD7yfM;EACE;AC+yfR;AD1yfM;EACE;EACA;AC4yfR;ADvyfM;EACE;ACyyfR;ADpyfM;EACE;EACA;ACsyfR;AD3ofE;EA/vEA;EAiwEE;EACA;AC6ofJ;ADhhfE;EAKE;EACA;AC8gfJ;AD9ifE;EACE;ACgjfJ;AD9ifE;EACE;ACgjfJ;AD9ifE;EACE;ACgjfJ;AD5ifI;EAEE;AC6ifN;ADhnfE;EACE;ACknfJ;AD/mfE;EACE;ACinfJ;AD9mfE;EACE;ACgnfJ;AD7mfE;EACE;AC+mfJ;AD9hfI;EACE,YAxGuB;EAyGvB;ACgifN;AD5hfE;EACE;AC8hfJ;ADzhfE;EACE;AC2hfJ;ADxhfE;EAEE;EACA;ACyhfJ;ADplfE;EACE;ACslfJ;ADplfE;EACE;ACslfJ;ADplfE;EACE;ACslfJ;ADllfI;EAEE;ACmlfN;ADhmfE;EACE;ACkmfJ;ADhmfE;EACE;ACkmfJ;ADhmfE;EACE;ACkmfJ;AD9lfI;EAEE;AC+lfN;ADjofE;EAXA,oCADmB;ACgpfrB;ADhofE;EAfA,0CADmB;ACmpfrB;AD/nfE;EAnBA,0CADmB;ACspfrB;AD/8jBE;EAXA;AC69jBF;ADl9jBE;EAXA;ACg+jBF;ADr9jBE;EAXA;ACm+jBF;ADx9jBE;EAXA;ACs+jBF;AD39jBE;EAXA;ACy+jBF;AD99jBE;EAXA;AC4+jBF;ADj+jBE;EAXA;AC++jBF;AD9+eE;;EAjgFA;ACm/jBF;AD7+eE;;EAEE;AC++eJ;AD5+eE;EACE;AC8+eJ;AD5+eI;EACE;AC8+eN;AD1+eE;EACE;EACA;AC4+eJ;AD1+eI;EACE;AC4+eN;ADx+eE;EACE;AC0+eJ;ADv+eE;EACE;EACA;ACy+eJ;ADr+eI;EACE;EACA;EACA;ACu+eN;ADn+eE;EACE;EACA;ACq+eJ;ADn+eI;EACE;ACq+eN;ADj+eE;EACE;EACA;ACm+eJ;ADj+eI;EACE;ACm+eN;ADh+eI;EACE;ACk+eN;AD99eE;;EAEE;ACg+eJ;AD/8eI;EACE,iBALc;ACs9epB;AD96eE;EAEE;EACA;AC+6eJ;ADjikBE;EAXA;AC+ikBF;ADpikBE;EAXA;ACkjkBF;AD76eE;EACE;AC+6eJ;ADv2eE;EACE;ACy2eJ;ADt2eE;EACE,aAdoB;ACs3exB;ADr2eE;EAGE;ACq2eJ;ADl2eE;EACE,yBAxBoB;AC43exB;ADh2eI;EACE;ACk2eN;AD/1eI;EACE;ACi2eN;AD91eI;EACE;ACg2eN;ADz1eM;EACE,yBAtCW;ACi4enB;ADt1eM;EACE,qBA5CW;ACo4enB;ADp1eI;EACE;ACs1eN;ADh1eE;EACE;ACk1eJ;AD70eI;;EACE;ACg1eN;AD70eI;;EACE;ACg1eN;AD70eI;;EACE;ACg1eN;ADvveE;EA3CA,yBAwCwB;EAvCxB,YAwCwB;AC6ve1B;ADnyeE;EACE,YAqCsB;EApCtB;ACqyeJ;AD3veM;EA/2FJ;AC6mkBF;AD1veM;EACE;AC4veR;ADxveI;EACE;AC0veN;ADvveI;EACE;ACyveN;ADpveI;EAlEF,yBAwBwE;EAvBxE,0BAuBiC;ACkyenC;ADvzeE;EACE,0BAoB+B;EAnB/B;ACyzeJ;ADpyeE;EATA,oCADmB;ACizerB;AD3veI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AC6yenC;ADl0eE;EACE,YAoB+B;EAnB/B;ACo0eJ;AD/yeE;EATA,0CADmB;AC4zerB;ADlweI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;ACwzenC;AD70eE;EACE,YAoB+B;EAnB/B;AC+0eJ;AD1zeE;EATA,0CADmB;ACu0erB;ADnreE;EACE;ACqreJ;ADlreE;;;;EAIE;ACoreJ;ADjreE;;EAEE;ACmreJ;ADhreE;EACE;ACkreJ;AD/qeE;EACE;ACireJ;ADxkeE;EACE;AC0keJ;ADrkeE;;;EAGE;ACukeJ;ADpkeE;EACE;ACskeJ;ADnkeE;EACE;ACqkeJ;ADlkeE;EACE;ACokeJ;ADjkeE;;EAEE;EACA;ACmkeJ;ADzmeE;EA2CI,+BAlCa;ACmmenB;AD7jeE;EACE,+BAvCe;ACsmenB;AD5jeE;EAOI;ACwjeN;ADlneE;EAqEI;ACgjeN;ADrneE;EA8EM;AC0ieR;ADz9dE;EACE,oCAtMA;ACiqeJ;ADx9dE;;EAEE,kCAViB;ACo+drB;ADv9dE;;EAEE;ACy9dJ;ADt9dE;;EAEE;ACw9dJ;ADr9dE;;EAEE,mBAxBc;AC++dlB;ADp9dE;;EAEE,mBA5BuB;ACk/d3B;ADnreE;EACE;EACA;ACqreJ;ADlreE;EAII;ACireN;ADxqeE;EACE;AC0qeJ;ADzpeE;;;EARM;ACsqeR;ADlkeE;EAnrGA;EAqrGE;EACA;ACokeJ;ADpgeE;EACE,iCAtMA;AC4seJ;ADngeE;;EAEE,kCAViB;AC+gerB;ADlgeE;;EAEE;ACogeJ;ADjgeE;;EAEE;ACmgeJ;ADhgeE;;EAEE,mBAxBc;AC0helB;AD//dE;;EAEE,mBA5BuB;AC6he3B;AD9teE;EACE;EACA;ACgueJ;AD7teE;EAII;AC4teN;ADnteE;EACE;ACqteJ;ADpseE;;;EARM;ACiteR;AD1ieE;EACE,kCAtMA;ACkveJ;ADzieE;;EAEE,kCAViB;ACqjerB;ADxieE;;EAEE;AC0ieJ;ADvieE;;EAEE;ACyieJ;ADtieE;;EAEE,mBAxBc;ACgkelB;ADrieE;;EAEE,mBA5BuB;ACmke3B;ADpweE;EACE;EACA;ACsweJ;ADnweE;EAII;ACkweN;ADzveE;EACE;AC2veJ;AD1ueE;;;EARM;ACuveR;ADroeE;EAjsGA;ACy0kBF;ADpoeE;EACE;ACsoeJ;ADpoeI;EACE;ACsoeN;ADnoeI;EACE;ACqoeN;ADjoeE;EACE;ACmoeJ;ADjieE;EApzGA;EAszGE;EACA;ACmieJ;AD/5eE;EACE;ACi6eJ;AD95eE;EACE;ACg6eJ;ADn9dE;EAEE;EACA;ACo9dJ;ADz1kBE;EAXA;ACu2kBF;ADp9dE;EACE;ACs9dJ;AD1+dM;EAwBF;ACq9dJ;ADh9dE;EACE;IAEE;ECi9dJ;AACF;AD98dE;EACE;ACg9dJ;AD78dE;;EAEE;AC+8dJ;AD58dE;EACE;AC88dJ;AD58dI;;EAEE;AC88dN;ADl7dI;EACE,YALe;ACy7drB;ADl7dM;EACE,YAVY;AC87dpB;AD/4YE;EACE,+BAXY;AC45YhB;AD94YE;EACE,+BAfY;AC+5YhB;AD74YE;EACE,cAlBoB;ACi6YxB;AD74YI;EACE,cAhBqB;AC+5Y3B;AD54YI;EACE,cAnBmB;ACi6YzB;AD14YE;EACE,cA7BqB;ACy6YzB;ADz4YE;EACE,uBA9BqB;ACy6YzB;ADv4YI;EACE,yBAhCsB;ACy6Y5B;ADv4YM;EACE,yBArCmB;AC86Y3B;ADt4YM;EACE,yBAxCiB;ACg7YzB;ADl4YI;EACE,cA9CsB;ACk7Y5B;ADj4YI;EACE,cApDqB;ACu7Y3B;ADh4YI;EACE,cAvDmB;ACy7YzB;AD13YI;EACE,cAhEmB;AC47YzB;AD13YM;;EAEE,cApEiB;ACg8YzB;ADx3YI;;EAEE,yBA1EmB;ACo8YzB;ADt3YE;EACE,cA/EqB;ACu8YzB;AD11ZI;EACE,+BALU;ACi2ZhB;ADz1ZI;EACE,+BATU;ACo2ZhB;ADx1ZI;EACE,0CAZc;ACs2ZpB;ADv1ZI;EAj/DF;EACA;EACA;AC20dF;ADzgZI;EACE,0CAJc;AC+gZpB;ADxgZI;EAx0EF;EACA;EACA;ACm1dF;AD1+ZI;EACE,0CAPc;ACm/ZpB;ADz+ZI;EACE,2CAVuB;ACq/Z7B;ADx+ZI;EACE,0CAbc;ACu/ZpB;ADt+ZM;EACE,+BAjBiB;ACy/ZzB;ADr+ZM;EACE;ACu+ZR;ADlrZI;EACE,+BATY;AC6rZlB;ADjrZI;EACE,YAZkB;AC+rZxB;AD/qZM;EACE,cAhBkB;ACisZ1B;AD9qZM;EACE,cAnBiB;ACmsZzB;AD7qZM;EACE,cAtBe;ACqsZvB;ADzqZM;EACE,cA7Be;ACwsZvB;ADtqZM;EACE,+BAxCiB;ACgtZzB;ADrqZM;EACE,gCAtCmB;AC6sZ3B;AD16dI;EACE;AC46dN;ADz6dI;EACE;AC26dN;ADx6dI;EACE;AC06dN;AD9zdE;EACE;ACg0dJ;AD7zdE;;EAEE;AC+zdJ;AD5zdE;EACE;AC8zdJ;ADv3dE;EA4DI;AC8zdN;AD13dE;EA4DI;AC8zdN;ADt3dE;EAwDI;ACi0dN;ADr3dE;EAoDI;ACo0dN;ADp3dE;EAgDI;ACu0dN;AD9zdM;EACE,0BS1tIY;AR0hmBpB;AD7zdM;EACE,0BAhnHa;AC+6kBrB;AD1zdE;EACE;AC4zdJ;ADzzdE;;EAEE;AC2zdJ;ADxzdE;EACE;AC0zdJ;ADrwdI;EACE;ACuwdN;ADpwdI;EACE;ACswdN;ADnwdI;EACE;ACqwdN;ADjwdE;EACE;ACmwdJ;AD7vdI;;;;;EACE;ACmwdN;AD9vdI;EACE;ACgwdN;ADxqdE;EAEE;ACyqdJ;ADrjlBE;EAXA;ACmklBF;ADzqdE;EACE;EACA;AC2qdJ;ADxqdM;;EAGE;ACyqdR;ADpqdE;;EAEE;ACsqdJ;AD/pdI;;;;EACE;ACoqdN;ADtmdE;EACE;ACwmdJ;ADrmdE;;EAEE;ACumdJ;ADpmdE;;EAEE;EACA;ACsmdJ;ADnmdE;;EAEE;ACqmdJ;ADjmdI;;;;EAIE;ACmmdN;AD9kdI;EACE,gBAJK;AColdX;AD/idE;EACE;ACijdJ;AD9idE;EACE;ACgjdJ;AD7idE;EACE;AC+idJ;AD3idI;EACE;AC6idN;AD1idI;EACE;AC4idN;ADzidI;EACE;AC2idN;ADtidI;EACE;ACwidN;ADridI;EACE;ACuidN;ADpidI;EACE;ACsidN;AD//cI;EACE;ACigdN;AD9/cI;EACE;ACggdN;AD7/cI;EACE;AC+/cN;AD18cE;EACE;AC48cJ;ADj+cE;EACE;ACm+cJ;ADh+cE;;EAIE;ACg+cJ;ADx+cE;EACE;AC0+cJ;ADv+cE;;EAIE;ACu+cJ;AD/+cE;EACE;ACi/cJ;AD9+cE;;EAIE;AC8+cJ;AD78cM;;EAEE;AC+8cR;AD58cM;;EAEE;AC88cR;AD38cM;EACE;AC68cR;ADv8cI;EACE;ACy8cN;ADz5cE;EACE;AC25cJ;ADx5cE;EACE;AC05cJ;ADv5cE;EACE;ACy5cJ;ADt5cE;EACE;ACw5cJ;ADr5cE;EACE;ACu5cJ;AD5rlBE;EAXA;AC0slBF;ADv5cI;EACE;ACy5cN;ADn5cM;EACE;ACq5cR;ADl5cM;EACE;ACo5cR;ADj5cM;EACE;ACm5cR;AD/4cI;EACE;ACi5cN;AD94cI;EACE;ACg5cN;ADv1cE;EACE,yBALmC;EAMnC;ACy1cJ;ADt1cE;EACE,yBAXwB;EAYxB;ACw1cJ;ADt1cI;EACE,yBAb2B;ACq2cjC;ADr1cI;EAl5IF;AC0ulBF;ADj1cE;EACE,iDAvBmB;AC02cvB;ADj1cI;EACE,gDA1BiB;EA2BjB;ACm1cN;AD/0cE;EACE,gDAhCmB;EAiCnB;ACi1cJ;AD/0cI;EACE;EACA,iDArCiB;ACs3cvB;AD70cE;EAQI;ACw0cN;AD/xcI;EACE;ACiycN;AD9xcI;EAGE;AC8xcN;AD3xcI;EAGE;AC2xcN;ADxycI;EACE;AC0ycN;ADvycI;EAGE;ACuycN;ADpycI;EAGE;ACoycN;ADjzcI;EACE;ACmzcN;ADhzcI;EAGE;ACgzcN;AD7ycI;EAGE;AC6ycN;ADxwcI;EAGE,uBAhBqB;ACwxc3B;ADpwcE;EAthJA;EAwhJE;ACswcJ;ADnwcE;EACE,0CA3BoB;ACgycxB;ADvrcE;EACE,0CAVqB;ACmsczB;ADlucE;;;EAGE;ACoucJ;ADjucE;EACE;ACmucJ;ADhucE;EAGE,0CADQ;ACiucZ;AD7ucE;;;EAGE;AC+ucJ;AD5ucE;EACE;AC8ucJ;AD3ucE;EAGE,uCADQ;AC4ucZ;ADxvcE;;;EAGE;AC0vcJ;ADvvcE;EACE;ACyvcJ;ADtvcE;EAGE,wCADQ;ACuvcZ;ADzscI;;EACE,0CA3B2B;ACuucjC;ADvscI;;;EAGE,0CAlCwB;AC2uc9B;ADrscM;EACE,0CAvCsB;AC8uc9B;ADjscI;EAGE,2CADQ;ACkscd;ADvrcM;;EAEE,uBA3DqC;ACovc7C;ADrrcQ;;EAEE,0CAhEyC;ACuvcnD;ADjrcM;EACE,sCA3EiB;EA4EjB;ACmrcR;AD9qcQ;EACE,sCAjFuB;ACiwcjC;AD7qcQ;EACE,sCApFoB;ACmwc9B;ADzqcE;EACE,sCAvFsB;ACkwc1B;ADlqcE;EACE;EAIA;ACiqcJ;ADvpcE;EACE;ACypcJ;ADlkcI;EAGE;ACkkcN;AD5jcI;EACE;IACE;EC8jcN;AACF;AD3jcI;;EAIE;AC2jcN;ADxjcI;EAGE;EACA;ACwjcN;ADrjcI;;;EAGE;EACA;ACujcN;ADnjcM;EACE;ACqjcR;ADljcM;;;EAGE;EACA;ACojcR;AD/icM;EACE;ACijcR;AD9icM;;;EAGE;EACA;ACgjcR;AD5icI;EACE;EACA;AC8icN;AD3icI;EACE;AC6icN;AD1icI;EACE;AC4icN;ADxicE;EACE;AC0icJ;ADvicE;EACE;ACyicJ;ADticE;;;EAGE;ACwicJ;ADjgcI;EACE,YALK;ACwgcX;ADhgcI;;EAEE;ACkgcN;AD7/bI;EACE;EACA;AC+/bN;AD1/bM;EACE;AC4/bR;ADv/bI;EACE;ACy/bN;AD19bE;EAYI;ACi9bN;ADr6bE;;EAEE,kDAJc;AC26blB;ADn6bI;;EAEE,+CAVY;EAWZ;ACq6bN;ADj6bE;EACE;ACm6bJ;ADj6bI;EACE;ACm6bN;AD/5bE;EACE;ACi6bJ;AD95bE;EACE;ACg6bJ;AD55bE;;EAEE;EACA;AC85bJ;ADh3bM;;;;;EACE;ACs3bR;ADj4bE;EACE;ACm4bJ;ADp4bE;EACE;ACs4bJ;AD73bM;;;;;EACE;ACm4bR;AD94bE;EACE;ACg5bJ;ADj5bE;EACE;ACm5bJ;AD14bM;;;;;EACE;ACg5bR;AD35bE;EACE;AC65bJ;AD95bE;EACE;ACg6bJ;ADv5bM;;;;;EACE;AC65bR;ADl5bE;EACE;ACo5bJ;ADh5bE;EACE;ACk5bJ;ADh5bI;EACE;ACk5bN;AD74bE;;;;;EAGE;ACi5bJ;AD94bE;EACE;ACg5bJ;AD34bE;;;EAEE;AC84bJ;ADt7bM;;;;;EACE;AC47bR;ADj7bE;EACE;ACm7bJ;AD/6bE;EACE;ACi7bJ;AD/6bI;EACE;ACi7bN;AD56bE;;;;;EAGE;ACg7bJ;AD76bE;EACE;AC+6bJ;AD16bE;;;EAEE;AC66bJ;ADr9bM;;;;;EACE;AC29bR;ADh9bE;EACE;ACk9bJ;AD98bE;EACE;ACg9bJ;AD98bI;EACE;ACg9bN;AD38bE;;;;;EAGE;AC+8bJ;AD58bE;EACE;AC88bJ;ADz8bE;;;EAEE;AC48bJ;ADv1bE;EACE;EACA;ACy1bJ;ADv1bI;EApCF;EACA;AC83bF;ADv1bI;EAxCF;EACA;ACk4bF;ADv1bI;EA5CF;EACA;ACs4bF;ADl4bE;;;EAGE;ACo4bJ;ADj4bE;;;;;EAKE;ACm4bJ;ADh4bE;EACE;ACk4bJ;AD/5bE;EACE,gBA4Ee;ACq1bnB;AD/5bE;EACE,YAyEe;ACw1bnB;AD50bI;EAzFF;IACE,gBA8Ec;EC01bhB;EDt6bA;IACE,YA2Ec;EC61bhB;AACF;AD1ybE;EACE;AC4ybJ;ADp5ZE;EACE;ACs5ZJ;ADn5ZE;;EAEE;ACq5ZJ;AD/3ZI;EACE,gBAJK;ACq4ZX;ADlwbE;EAGE;EACA;EA35KF;AC8pmBF;AD9vbE;EACE;ACgwbJ;AIxonBQ;;;;;EAKI;AJ0onBZ;AIvonBQ;EACI;EACA;EACA;AJyonBZ;AIvonBY;EACI;EACA;AJyonBhB;AItonBY;EACI;EACA;AJwonBhB;AK5pnBQ;;;;;EAKI;AL8pnBZ;AK3pnBQ;EACI;EACA;AL6pnBZ;AK3pnBY;EACI;EACA;AL6pnBhB;AK1pnBY;EACI;EACA;AL4pnBhB;AKzpnBY;EACI;EACA;AL2pnBhB;AKxpnBY;EACI;EACA;EACA;AL0pnBhB;AKvpnBY;EACI;ALypnBhB;AKtpnBY;EACI;ALwpnBhB;AKrpnBY;EACI;EACA;ALupnBhB;AKppnBY;EACI;EACA;ALspnBhB;AGhsnBQ;EEwCI;IAKQ;ELupnBlB;AACF;AKppnBY;EACI;ALspnBhB;AKnpnBY;EAKI;EACA;EACA;EACA;ALipnBhB;AMntnBQ;;;;;EAKI;ANqtnBZ;AMltnBQ;EACI;EACA;EACA;ANotnBZ;AMltnBY;EACI;ANotnBhB;AMltnBgB;EACI;EACA;ANotnBpB;AM/snBQ;EAEQ;ANgtnBhB;AM3snBY;EACI;EACA;AN6snBhB;AM1snBY;EAKI;EACA;EACA;EACA;ANwsnBhB;AMrsnBY;EACI;ANusnBhB;AMpsnBY;EAEI;ANqsnBhB;AMnsnBgB;EPgbd;ACsxmBF;AMlsnBgB;EACI;ANosnBpB;AMjsnBgB;EACI;ANmsnBpB;AMhsnBgB;EACI;EACA;ANksnBpB;AM7rnBQ;EAEQ;AN8rnBhB;AMzrnBY;;EAEI;AN2rnBhB;AO/wnBQ;;;;;EAKI;APixnBZ;AO9wnBQ;EACI;EACA;EACA;EACA;APgxnBZ;AO7wnBQ;EAOQ;APywnBhB;AGxxnBQ;EIQA;IAGQ;EPixnBd;AACF;AOzwnBY;EACI;EACA;EACA;AP2wnBhB;AOxwnBY;EACI;AP0wnBhB;AOvwnBY;EACI;EACA;APywnBhB;AOtwnBY;EACI;EACA;EACA;EACA;APwwnBhB;AOrwnBY;EACI;EACA;EACA;APuwnBhB;AOpwnBY;EACI;APswnBhB;AGvznBQ;EIgDI;IAIQ;IACA;IACA;EPuwnBlB;AACF;AOpwnBY;EACI;APswnBhB;AOpwnBgB;ERoad;ACm2mBF;AOnwnBgB;EACI;APqwnBpB;AOlwnBgB;EACI;APownBpB;AO/vnBgB;EACI;APiwnBpB;AO7vnBY;EACI;EACA;AP+vnBhB;AO5vnBY;EAKI;EACA;EACA;EACA;AP0vnBhB;AOvvnBY;EACI;EACA;APyvnBhB;AOvvnBgB;EACI;EACA;APyvnBpB;AOrvnBY;EACI;EACA;EACA;EACA;APuvnBhB;AOpvnBY;EACI;EACA;APsvnBhB;AOjvnBgB;EACI;EACA;APmvnBpB;AOjvnBoB;EACI;APmvnBxB;AOhvnBoB;EACI;EACA;EACA;APkvnBxB;AO/unBoB;;;;EAII;EACA;EACA;APivnBxB;AO9unBoB;EACI;APgvnBxB;AO5unBgB;EACI;EACA;EACA;EACA;EACA;AP8unBpB;AO5unBoB;EACI;EACA;UAAA;AP8unBxB;AO1unBgB;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AP4unBpB;ASn6nBQ;EACI;ATq6nBZ;AUr6nBY;EACI;EACA;EACA;AVu6nBhB;AUr6nBgB;EXoed;ACo8mBF;AUp6nBgB;EACI;AVs6nBpB;AUl6nBY;EACI;AVo6nBhB;AW/6nBY;EZqeV;AC68mBF;AW/6nBgB;EACI;AXi7nBpB;AW/6nBoB;EACI;EACA;EACA;AXi7nBxB;AY17nBY;EbqeV;ACw9mBF;AY17nBgB;EACI;AZ47nBpB;AY17nBoB;EACI;EACA;EACA;AZ47nBxB;Aar8nBY;EdqeV;ACm+mBF;Aar8nBgB;EACI;Abu8nBpB;Aar8nBoB;EACI;EACA;EACA;Abu8nBxB;Ach9nBY;EfqeV;AC8+mBF;Ach9nBgB;EACI;Adk9nBpB;Ach9nBoB;EACI;EACA;EACA;Adk9nBxB;Aej+nBI;EACI;EACA;EACA;Afm+nBR;AgBl+nBQ;EACI;AhBo+nBZ;AgBj+nBQ;EACI;AhBm+nBZ;AgBh+nBQ;EACI;AhBk+nBZ;AgBh+nBY;EACI;AhBk+nBhB;AgB99nBQ;EACI;AhBg+nBZ;AiBr/nBI;EACI;EACA;EAEA;AjBs/nBR;AiBp/nBQ;EACI;AjBs/nBZ;AiBp/nBY;EACI;EACA;ElBged;ACuhnBF;AiBp/nBgB;EACI;AjBs/nBpB;AiBp/nBoB;;;EAGI;EACA;AjBs/nBxB;AiBj/nBY;EACI;AjBm/nBhB;AkB9goBI;EACI;AlBghoBR;AmB7goBQ;EACI;AnB+goBZ;AmB7goBY;EACI;AnB+goBhB;ADjukBE;EAII;ACiukBN;AD7+jBE;EACE;AC++jBJ;AD7+jBI;EAEE;AC8+jBN;AD1+jBI;EACE;AC4+jBN;ADz+jBI;EACE;EACA;AC2+jBN;ADx+jBI;EACE;AC0+jBN;ADt+jBE;EACE;ACw+jBJ;ADr+jBE;EACE;ACu+jBJ;ADp+jBE;EACE;ACs+jBJ;AD37jBE;EACE;AC67jBJ;AD17jBE;EACE;AC47jBJ;AD14jBE;EACE;AC44jBJ;AD14jBI;EACE;AC44jBN;ADx4jBE;EACE,cAZe;ACs5jBnB;ADv4jBE;;EAEE;ACy4jBJ;ADj4jBE;;;;EAIE;ACm4jBJ;ADh4jBE;;EAEE;ACk4jBJ;AD73jBI;;EACE,mBAxCa;ACw6jBnB;AD9uaE;EAIE;EACA;AC6uaJ;ADtuaI;EAx4MF;ACinnBF;ADzuaI;EAx4MF;AConnBF;AD5uaI;EAx4MF;ACunnBF;AD/uaI;EAx4MF;AC0nnBF;ADlvaI;EAx4MF;AC6nnBF;ADrvaI;EAx4MF;ACgonBF;ADxvaI;EAx4MF;ACmonBF;AD3vaI;EAx4MF;ACsonBF;AD9vaI;EAx4MF;ACyonBF;ADjwaI;EAx4MF;AC4onBF;ADpwaI;EAx4MF;AC+onBF;ADvwaI;EAx4MF;ACkpnBF;AD1waI;EAx4MF;ACqpnBF;AD7waI;EAx4MF;ACwpnBF;ADhxaI;EAx4MF;AC2pnBF;ADnxaI;EAx4MF;AC8pnBF;ADtxaI;EAx4MF;ACiqnBF;ADzxaI;EAx4MF;ACoqnBF;AD5xaI;EAx4MF;ACuqnBF;AD/xaI;EAx4MF;AC0qnBF;ADlyaI;EAx4MF;AC6qnBF;ADryaI;EAx4MF;ACgrnBF;ADxyaI;EAx4MF;ACmrnBF;AD3yaI;EAx4MF;ACsrnBF;AD9yaI;EAx4MF;ACyrnBF;AD1yaI;EACE;AC4yaN;ADttjBE;EAEE;EACA;ACwtjBJ;ADtrnBE;EAXA;ACosnBF;ADptjBI;EACE;ACstjBN;ADptjBM;EACE;ACstjBR;ADxljBE;EACE;EACA;AC0ljBJ;AD7hoBI;EAs8EE;EACA;AC0ljBN;ADrljBI;EACE;EACA;ACwljBN;ADnljBI;EACE;EACA;ACqljBN;ADjljBE;EACE;ACmljBJ;AD/kjBI;EACE;ACiljBN;AD5kjBI;EAWI;EAMF;AC+jjBN;AD3jjBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AC6jjBJ;AD1jjBE;;EAEE;AC4jjBJ;ADvjjBE;EAEE;ACwjjBJ;ADvtjBE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;ACiujBvB;ADrtjBI;EACE;ACutjBN;ADltjBI;EACE;ACotjBN;AD/sjBI;EACE;ACitjBN;AD5sjBI;EACE;EACA;AC8sjBN;ADzsjBI;EACE;AC2sjBN;ADtsjBI;EACE;EACA;ACwsjBN;ADlsjBM;EACE;ACosjBR;AD/rjBM;EACE;EACA;ACisjBR;AD5rjBM;EACE;AC8rjBR;ADzrjBM;EACE;EACA;AC2rjBR;AD9vjBE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;ACywjBzB;AD5vjBI;EACE;AC8vjBN;ADzvjBI;EACE;AC2vjBN;ADtvjBI;EACE;ACwvjBN;ADnvjBI;EACE;EACA;ACqvjBN;ADhvjBI;EACE;ACkvjBN;AD7ujBI;EACE;EACA;AC+ujBN;ADzujBM;EACE;AC2ujBR;ADtujBM;EACE;EACA;ACwujBR;ADnujBM;EACE;ACqujBR;ADhujBM;EACE;EACA;ACkujBR;ADryjBE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AC8yjBvB;ADnyjBI;EACE;ACqyjBN;ADhyjBI;EACE;ACkyjBN;AD7xjBI;EACE;AC+xjBN;AD1xjBI;EACE;EACA;AC4xjBN;ADvxjBI;EACE;ACyxjBN;ADpxjBI;EACE;EACA;ACsxjBN;ADhxjBM;EACE;ACkxjBR;AD7wjBM;EACE;EACA;AC+wjBR;AD1wjBM;EACE;AC4wjBR;ADvwjBM;EACE;EACA;ACywjBR;AD9mjBE;EA/vEA;EAiwEE;EACA;ACgnjBJ;ADn/iBE;EAKE;EACA;ACi/iBJ;ADjhjBE;EACE;ACmhjBJ;ADjhjBE;EACE;ACmhjBJ;ADjhjBE;EACE;ACmhjBJ;AD/gjBI;EAEE;ACghjBN;ADnljBE;EACE;ACqljBJ;ADlljBE;EACE;AColjBJ;ADjljBE;EACE;ACmljBJ;ADhljBE;EACE;ACkljBJ;ADjgjBI;EACE,YAxGuB;EAyGvB;ACmgjBN;AD//iBE;EACE;ACigjBJ;AD5/iBE;EACE;AC8/iBJ;AD3/iBE;EAEE;EACA;AC4/iBJ;ADvjjBE;EACE;ACyjjBJ;ADvjjBE;EACE;ACyjjBJ;ADvjjBE;EACE;ACyjjBJ;ADrjjBI;EAEE;ACsjjBN;ADnkjBE;EACE;ACqkjBJ;ADnkjBE;EACE;ACqkjBJ;ADnkjBE;EACE;ACqkjBJ;ADjkjBI;EAEE;ACkkjBN;ADpmjBE;EAXA,oCADmB;ACmnjBrB;ADnmjBE;EAfA,0CADmB;ACsnjBrB;ADlmjBE;EAnBA,0CADmB;ACynjBrB;ADl7nBE;EAXA;ACg8nBF;ADr7nBE;EAXA;ACm8nBF;ADx7nBE;EAXA;ACs8nBF;AD37nBE;EAXA;ACy8nBF;AD97nBE;EAXA;AC48nBF;ADj8nBE;EAXA;AC+8nBF;ADp8nBE;EAXA;ACk9nBF;ADj9iBE;;EAjgFA;ACs9nBF;ADh9iBE;;EAEE;ACk9iBJ;AD/8iBE;EACE;ACi9iBJ;AD/8iBI;EACE;ACi9iBN;AD78iBE;EACE;EACA;AC+8iBJ;AD78iBI;EACE;AC+8iBN;AD38iBE;EACE;AC68iBJ;AD18iBE;EACE;EACA;AC48iBJ;ADx8iBI;EACE;EACA;EACA;AC08iBN;ADt8iBE;EACE;EACA;ACw8iBJ;ADt8iBI;EACE;ACw8iBN;ADp8iBE;EACE;EACA;ACs8iBJ;ADp8iBI;EACE;ACs8iBN;ADn8iBI;EACE;ACq8iBN;ADj8iBE;;EAEE;ACm8iBJ;ADl7iBI;EACE,iBALc;ACy7iBpB;ADj5iBE;EAEE;EACA;ACk5iBJ;ADpgoBE;EAXA;ACkhoBF;ADvgoBE;EAXA;ACqhoBF;ADh5iBE;EACE;ACk5iBJ;AD10iBE;EACE;AC40iBJ;ADz0iBE;EACE,aAdoB;ACy1iBxB;ADx0iBE;EAGE;ACw0iBJ;ADr0iBE;EACE,yBAxBoB;AC+1iBxB;ADn0iBI;EACE;ACq0iBN;ADl0iBI;EACE;ACo0iBN;ADj0iBI;EACE;ACm0iBN;AD5ziBM;EACE,yBAtCW;ACo2iBnB;ADzziBM;EACE,qBA5CW;ACu2iBnB;ADvziBI;EACE;ACyziBN;ADnziBE;EACE;ACqziBJ;ADhziBI;;EACE;ACmziBN;ADhziBI;;EACE;ACmziBN;ADhziBI;;EACE;ACmziBN;AD1tiBE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;ACguiB1B;ADtwiBE;EACE,0BAqCsB;EApCtB;ACwwiBJ;AD9tiBM;EA/2FJ;ACgloBF;AD7tiBM;EACE;AC+tiBR;AD3tiBI;EACE;AC6tiBN;AD1tiBI;EACE;AC4tiBN;ADvtiBI;EAlEF,yBAwBwE;EAvBxE,0BAuBiC;ACqwiBnC;AD1xiBE;EACE,0BAoB+B;EAnB/B;AC4xiBJ;ADvwiBE;EATA,oCADmB;ACoxiBrB;AD9tiBI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;ACgxiBnC;ADryiBE;EACE,YAoB+B;EAnB/B;ACuyiBJ;ADlxiBE;EATA,0CADmB;AC+xiBrB;ADruiBI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AC2xiBnC;ADhziBE;EACE,YAoB+B;EAnB/B;ACkziBJ;AD7xiBE;EATA,0CADmB;AC0yiBrB;ADtpiBE;EACE;ACwpiBJ;ADrpiBE;;;;EAIE;ACupiBJ;ADppiBE;;EAEE;ACspiBJ;ADnpiBE;EACE;ACqpiBJ;ADlpiBE;EACE;ACopiBJ;AD3iiBE;EACE;AC6iiBJ;ADxiiBE;;;EAGE;AC0iiBJ;ADviiBE;EACE;ACyiiBJ;ADtiiBE;EACE;ACwiiBJ;ADriiBE;EACE;ACuiiBJ;ADpiiBE;;EAEE;EACA;ACsiiBJ;AD5kiBE;EA2CI,0BAlCa;ACskiBnB;ADhiiBE;EACE,0BAvCe;ACykiBnB;AD/hiBE;EAOI;AC2hiBN;ADrliBE;EAqEI;ACmhiBN;ADxliBE;EA8EM;AC6giBR;AD57hBE;EACE,oCAtMA;ACooiBJ;AD37hBE;;EAEE,kCAViB;ACu8hBrB;AD17hBE;;EAEE;AC47hBJ;ADz7hBE;;EAEE;AC27hBJ;ADx7hBE;;EAEE,mBAxBc;ACk9hBlB;ADv7hBE;;EAEE,mBA5BuB;ACq9hB3B;ADtpiBE;EACE;EACA;ACwpiBJ;ADrpiBE;EAII;ACopiBN;AD3oiBE;EACE;AC6oiBJ;AD5niBE;;;EARM;ACyoiBR;ADriiBE;EAnrGA;EAqrGE;EACA;ACuiiBJ;ADv+hBE;EACE,iCAtMA;AC+qiBJ;ADt+hBE;;EAEE,kCAViB;ACk/hBrB;ADr+hBE;;EAEE;ACu+hBJ;ADp+hBE;;EAEE;ACs+hBJ;ADn+hBE;;EAEE,mBAxBc;AC6/hBlB;ADl+hBE;;EAEE,mBA5BuB;ACggiB3B;ADjsiBE;EACE;EACA;ACmsiBJ;ADhsiBE;EAII;AC+riBN;ADtriBE;EACE;ACwriBJ;ADvqiBE;;;EARM;ACoriBR;AD7giBE;EACE,kCAtMA;ACqtiBJ;AD5giBE;;EAEE,kCAViB;ACwhiBrB;AD3giBE;;EAEE;AC6giBJ;AD1giBE;;EAEE;AC4giBJ;ADzgiBE;;EAEE,mBAxBc;ACmiiBlB;ADxgiBE;;EAEE,mBA5BuB;ACsiiB3B;ADvuiBE;EACE;EACA;ACyuiBJ;ADtuiBE;EAII;ACquiBN;AD5tiBE;EACE;AC8tiBJ;AD7siBE;;;EARM;AC0tiBR;ADxmiBE;EAjsGA;AC4yoBF;ADvmiBE;EACE;ACymiBJ;ADvmiBI;EACE;ACymiBN;ADtmiBI;EACE;ACwmiBN;ADpmiBE;EACE;ACsmiBJ;ADpgiBE;EApzGA;EAszGE;EACA;ACsgiBJ;ADl4iBE;EACE;ACo4iBJ;ADj4iBE;EACE;ACm4iBJ;ADt7hBE;EAEE;EACA;ACu7hBJ;AD5zoBE;EAXA;AC00oBF;ADv7hBE;EACE;ACy7hBJ;AD78hBM;EAwBF;ACw7hBJ;ADn7hBE;EACE;IAEE;ECo7hBJ;AACF;ADj7hBE;EACE;ACm7hBJ;ADh7hBE;;EAEE;ACk7hBJ;AD/6hBE;EACE;ACi7hBJ;AD/6hBI;;EAEE;ACi7hBN;ADr5hBI;EACE,YALe;AC45hBrB;ADr5hBM;EACE,YAVY;ACi6hBpB;ADl3cE;EACE,yBAXY;AC+3chB;ADj3cE;EACE,yBAfY;ACk4chB;ADh3cE;EACE,cAlBoB;ACo4cxB;ADh3cI;EACE,cAhBqB;ACk4c3B;AD/2cI;EACE,cAnBmB;ACo4czB;AD72cE;EACE,cA7BqB;AC44czB;AD52cE;EACE,qCA9BqB;AC44czB;AD12cI;EACE,yBAhCsB;AC44c5B;AD12cM;EACE,yBArCmB;ACi5c3B;ADz2cM;EACE,yBAxCiB;ACm5czB;ADr2cI;EACE,cA9CsB;ACq5c5B;ADp2cI;EACE,cApDqB;AC05c3B;ADn2cI;EACE,cAvDmB;AC45czB;AD71cI;EACE,cAhEmB;AC+5czB;AD71cM;;EAEE,cApEiB;ACm6czB;AD31cI;;EAEE,yBA1EmB;ACu6czB;ADz1cE;EACE,cA/EqB;AC06czB;AD7zdI;EACE,0BALU;ACo0dhB;AD5zdI;EACE,0BATU;ACu0dhB;AD3zdI;EACE,qCAZc;ACy0dpB;AD1zdI;EAj/DF;EACA;EACA;AC8yhBF;AD5+cI;EACE,qCAJc;ACk/cpB;AD3+cI;EAx0EF;EACA;EACA;ACszhBF;AD78dI;EACE,qCAPc;ACs9dpB;AD58dI;EACE,qCAVuB;ACw9d7B;AD38dI;EACE,qCAbc;AC09dpB;ADz8dM;EACE,0BAjBiB;AC49dzB;ADx8dM;EACE;AC08dR;ADrpdI;EACE,0BATY;ACgqdlB;ADppdI;EACE,0BAZkB;ACkqdxB;ADlpdM;EACE,cAhBkB;ACoqd1B;ADjpdM;EACE,cAnBiB;ACsqdzB;ADhpdM;EACE,cAtBe;ACwqdvB;AD5odM;EACE,cA7Be;AC2qdvB;ADzodM;EACE,0BAxCiB;ACmrdzB;ADxodM;EACE,0BAtCmB;ACgrd3B;AD74hBI;EACE;AC+4hBN;AD54hBI;EACE;AC84hBN;AD34hBI;EACE;AC64hBN;ADjyhBE;EACE;ACmyhBJ;ADhyhBE;;EAEE;ACkyhBJ;AD/xhBE;EACE;ACiyhBJ;AD11hBE;EA4DI;ACiyhBN;AD71hBE;EA4DI;ACiyhBN;ADz1hBE;EAwDI;ACoyhBN;ADx1hBE;EAoDI;ACuyhBN;ADv1hBE;EAgDI;AC0yhBN;ADvxhBE;EACE;ACyxhBJ;ADtxhBE;;EAEE;ACwxhBJ;ADrxhBE;EACE;ACuxhBJ;ADluhBI;EACE;ACouhBN;ADjuhBI;EACE;ACmuhBN;ADhuhBI;EACE;ACkuhBN;AD9thBE;EACE;ACguhBJ;AD1thBI;;;;;EACE;ACguhBN;AD3thBI;EACE;AC6thBN;ADrohBE;EAEE;ACsohBJ;ADlhpBE;EAXA;ACgipBF;ADtohBE;EACE;EACA;ACwohBJ;ADrohBM;;EAGE;ACsohBR;ADjohBE;;EAEE;ACmohBJ;AD5nhBI;;;;EACE;ACiohBN;ADnkhBE;EACE;ACqkhBJ;ADlkhBE;;EAEE;ACokhBJ;ADjkhBE;;EAEE;EACA;ACmkhBJ;ADhkhBE;;EAEE;ACkkhBJ;AD9jhBI;;;;EAIE;ACgkhBN;AD3ihBI;EACE,gBAJK;ACijhBX;AD5ghBE;EACE;AC8ghBJ;AD3ghBE;EACE;AC6ghBJ;AD1ghBE;EACE;AC4ghBJ;ADxghBI;EACE;AC0ghBN;ADvghBI;EACE;ACyghBN;ADtghBI;EACE;ACwghBN;ADnghBI;EACE;ACqghBN;ADlghBI;EACE;ACoghBN;ADjghBI;EACE;ACmghBN;AD59gBI;EACE;AC89gBN;AD39gBI;EACE;AC69gBN;AD19gBI;EACE;AC49gBN;ADv6gBE;EACE;ACy6gBJ;AD97gBE;EACE;ACg8gBJ;AD77gBE;;EAIE;AC67gBJ;ADr8gBE;EACE;ACu8gBJ;ADp8gBE;;EAIE;ACo8gBJ;AD58gBE;EACE;AC88gBJ;AD38gBE;;EAIE;AC28gBJ;AD16gBM;;EAEE;AC46gBR;ADz6gBM;;EAEE;AC26gBR;ADx6gBM;EACE;AC06gBR;ADp6gBI;EACE;ACs6gBN;ADt3gBE;EACE;ACw3gBJ;ADr3gBE;EACE;ACu3gBJ;ADp3gBE;EACE;ACs3gBJ;ADn3gBE;EACE;ACq3gBJ;ADl3gBE;EACE;ACo3gBJ;ADzppBE;EAXA;ACuqpBF;ADp3gBI;EACE;ACs3gBN;ADh3gBM;EACE;ACk3gBR;AD/2gBM;EACE;ACi3gBR;AD92gBM;EACE;ACg3gBR;AD52gBI;EACE;AC82gBN;AD32gBI;EACE;AC62gBN;ADpzgBE;EACE,yBALmC;EAMnC;ACszgBJ;ADnzgBE;EACE,uBAXwB;EAYxB;ACqzgBJ;ADnzgBI;EACE,uBAb2B;ACk0gBjC;ADlzgBI;EAl5IF;ACuspBF;AD9ygBE;EACE,2CAvBmB;ACu0gBvB;AD9ygBI;EACE,0CA1BiB;EA2BjB;ACgzgBN;AD5ygBE;EACE,0CAhCmB;EAiCnB;AC8ygBJ;AD5ygBI;EACE;EACA,2CArCiB;ACm1gBvB;AD1ygBE;EAQI;ACqygBN;AD5vgBI;EACE;AC8vgBN;AD3vgBI;EAGE;AC2vgBN;ADxvgBI;EAGE;ACwvgBN;ADrwgBI;EACE;ACuwgBN;ADpwgBI;EAGE;ACowgBN;ADjwgBI;EAGE;ACiwgBN;AD9wgBI;EACE;ACgxgBN;AD7wgBI;EAGE;AC6wgBN;AD1wgBI;EAGE;AC0wgBN;ADrugBI;EAGE,uBAhBqB;ACqvgB3B;ADjugBE;EAthJA;EAwhJE;ACmugBJ;ADhugBE;EACE,qCA3BoB;AC6vgBxB;ADppgBE;EACE,qCAVqB;ACgqgBzB;AD/rgBE;;;EAGE;ACisgBJ;AD9rgBE;EACE;ACgsgBJ;AD7rgBE;EAGE,0CADQ;AC8rgBZ;AD1sgBE;;;EAGE;AC4sgBJ;ADzsgBE;EACE;AC2sgBJ;ADxsgBE;EAGE,uCADQ;ACysgBZ;ADrtgBE;;;EAGE;ACutgBJ;ADptgBE;EACE;ACstgBJ;ADntgBE;EAGE,wCADQ;ACotgBZ;ADtqgBI;;EACE,qCA3B2B;ACosgBjC;ADpqgBI;;;EAGE,qCAlCwB;ACwsgB9B;ADlqgBM;EACE,qCAvCsB;AC2sgB9B;AD9pgBI;EAGE,qCADQ;AC+pgBd;ADppgBM;;EAEE,qCA3DqC;ACitgB7C;ADlpgBQ;;EAEE,qCAhEyC;ACotgBnD;AD9ogBM;EACE,iCA3EiB;EA4EjB;ACgpgBR;AD3ogBQ;EACE,iCAjFuB;AC8tgBjC;AD1ogBQ;EACE,iCApFoB;ACgugB9B;ADtogBE;EACE,gCAvFsB;AC+tgB1B;AD/ngBE;EACE;EAIA;AC8ngBJ;ADpngBE;EACE;ACsngBJ;AD/hgBI;EAGE;AC+hgBN;ADzhgBI;EACE;IACE;EC2hgBN;AACF;ADxhgBI;;EAIE;ACwhgBN;ADrhgBI;EAGE;EACA;ACqhgBN;ADlhgBI;;;EAGE;EACA;ACohgBN;ADhhgBM;EACE;ACkhgBR;AD/ggBM;;;EAGE;EACA;ACihgBR;AD5ggBM;EACE;AC8ggBR;AD3ggBM;;;EAGE;EACA;AC6ggBR;ADzggBI;EACE;EACA;AC2ggBN;ADxggBI;EACE;AC0ggBN;ADvggBI;EACE;ACyggBN;ADrggBE;EACE;ACuggBJ;ADpggBE;EACE;ACsggBJ;ADnggBE;;;EAGE;ACqggBJ;AD99fI;EACE,YALK;ACq+fX;AD79fI;;EAEE;AC+9fN;AD19fI;EACE;EACA;AC49fN;ADv9fM;EACE;ACy9fR;ADp9fI;EACE;ACs9fN;ADv7fE;EAYI;AC86fN;ADl4fE;;EAEE,4CAJc;ACw4flB;ADh4fI;;EAEE,yCAVY;EAWZ;ACk4fN;AD93fE;EACE;ACg4fJ;AD93fI;EACE;ACg4fN;AD53fE;EACE;AC83fJ;AD33fE;EACE;AC63fJ;ADz3fE;;EAEE;EACA;AC23fJ;AD70fM;;;;;EACE;ACm1fR;AD91fE;EACE;ACg2fJ;ADj2fE;EACE;ACm2fJ;AD11fM;;;;;EACE;ACg2fR;AD32fE;EACE;AC62fJ;AD92fE;EACE;ACg3fJ;ADv2fM;;;;;EACE;AC62fR;ADx3fE;EACE;AC03fJ;AD33fE;EACE;AC63fJ;ADp3fM;;;;;EACE;AC03fR;AD/2fE;EACE;ACi3fJ;AD72fE;EACE;AC+2fJ;AD72fI;EACE;AC+2fN;AD12fE;;;;;EAGE;AC82fJ;AD32fE;EACE;AC62fJ;ADx2fE;;;EAEE;AC22fJ;ADn5fM;;;;;EACE;ACy5fR;AD94fE;EACE;ACg5fJ;AD54fE;EACE;AC84fJ;AD54fI;EACE;AC84fN;ADz4fE;;;;;EAGE;AC64fJ;AD14fE;EACE;AC44fJ;ADv4fE;;;EAEE;AC04fJ;ADl7fM;;;;;EACE;ACw7fR;AD76fE;EACE;AC+6fJ;AD36fE;EACE;AC66fJ;AD36fI;EACE;AC66fN;ADx6fE;;;;;EAGE;AC46fJ;ADz6fE;EACE;AC26fJ;ADt6fE;;;EAEE;ACy6fJ;ADpzfE;EACE;EACA;ACszfJ;ADpzfI;EApCF;EACA;AC21fF;ADpzfI;EAxCF;EACA;AC+1fF;ADpzfI;EA5CF;EACA;ACm2fF;AD/1fE;;;EAGE;ACi2fJ;AD91fE;;;;;EAKE;ACg2fJ;AD71fE;EACE;AC+1fJ;AD53fE;EACE,gBA4Ee;ACkzfnB;AD53fE;EACE,YAyEe;ACqzfnB;ADzyfI;EAzFF;IACE,gBA8Ec;ECuzfhB;EDn4fA;IACE,YA2Ec;EC0zfhB;AACF;ADvwfE;EACE;ACywfJ;ADj3dE;EACE;ACm3dJ;ADh3dE;;EAEE;ACk3dJ;AD51dI;EACE,gBAJK;ACk2dX;AD/tfE;EAGE;EACA;EA35KF;AC2nqBF;AD3tfE;EACE;AC6tfJ;AIrmrBQ;;;;;EAKI;AJumrBZ;AIpmrBQ;EACI;EACA;EACA;AJsmrBZ;AIpmrBY;EACI;EACA;AJsmrBhB;AInmrBY;EACI;EACA;AJqmrBhB;AKznrBQ;;;;;EAKI;AL2nrBZ;AKxnrBQ;EACI;EACA;AL0nrBZ;AKxnrBY;EACI;EACA;AL0nrBhB;AKvnrBY;EACI;EACA;ALynrBhB;AKtnrBY;EACI;EACA;ALwnrBhB;AKrnrBY;EACI;EACA;EACA;ALunrBhB;AKpnrBY;EACI;ALsnrBhB;AKnnrBY;EACI;ALqnrBhB;AKlnrBY;EACI;EACA;ALonrBhB;AKjnrBY;EACI;EACA;ALmnrBhB;AG7prBQ;EEwCI;IAKQ;ELonrBlB;AACF;AKjnrBY;EACI;ALmnrBhB;AKhnrBY;EAEQ;EAGJ;EACA;EACA;EACA;AL+mrBhB;AMjrrBQ;;;;;EAKI;ANmrrBZ;AMhrrBQ;EACI;EACA;EACA;ANkrrBZ;AMhrrBY;EACI;ANkrrBhB;AMhrrBgB;EACI;EACA;ANkrrBpB;AM7qrBQ;EAIQ;AN4qrBhB;AMzqrBY;EACI;EACA;AN2qrBhB;AMxqrBY;EAEQ;EAGJ;EACA;EACA;EACA;ANuqrBhB;AMpqrBY;EACI;ANsqrBhB;AMnqrBY;EAEI;ANoqrBhB;AMlqrBgB;EPgbd;ACqvqBF;AMjqrBgB;EACI;ANmqrBpB;AMhqrBgB;EACI;ANkqrBpB;AM/prBgB;EACI;EACA;ANiqrBpB;AM5prBQ;EAIQ;AN2prBhB;AMxprBY;;EAEI;AN0prBhB;AO9urBQ;;;;;EAKI;APgvrBZ;AO7urBQ;EACI;EACA;EACA;EACA;AP+urBZ;AO5urBQ;EASQ;APsurBhB;AGvvrBQ;EIQA;IAGQ;EPgvrBd;AACF;AOxurBY;EACI;EACA;EACA;AP0urBhB;AOvurBY;EACI;APyurBhB;AOturBY;EACI;EACA;APwurBhB;AOrurBY;EACI;EACA;EACA;EACA;APuurBhB;AOpurBY;EACI;EACA;EACA;APsurBhB;AOnurBY;EACI;APqurBhB;AGtxrBQ;EIgDI;IAIQ;IACA;IACA;EPsurBlB;AACF;AOnurBY;EACI;APqurBhB;AOnurBgB;ERoad;ACk0qBF;AOlurBgB;EACI;APourBpB;AOjurBgB;EACI;APmurBpB;AO9trBgB;EACI;APgurBpB;AO5trBY;EACI;EACA;AP8trBhB;AO3trBY;EAEQ;EAGJ;EACA;EACA;EACA;AP0trBhB;AOvtrBY;EACI;EACA;APytrBhB;AOvtrBgB;EACI;EACA;APytrBpB;AOrtrBY;EACI;EACA;EACA;EACA;APutrBhB;AOptrBY;EACI;EACA;APstrBhB;AOjtrBgB;EACI;EACA;APmtrBpB;AOjtrBoB;EACI;APmtrBxB;AOhtrBoB;EACI;EACA;EACA;APktrBxB;AO/srBoB;;;;EAII;EACA;EACA;APitrBxB;AO9srBoB;EACI;APgtrBxB;AO5srBgB;EACI;EACA;EACA;EACA;EACA;AP8srBpB;AO5srBoB;EACI;EACA;UAAA;AP8srBxB;AO1srBgB;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AP4srBpB;ASn4rBQ;EACI;ATq4rBZ;AUr4rBY;EACI;EACA;EACA;AVu4rBhB;AUr4rBgB;EXoed;ACo6qBF;AUp4rBgB;EACI;AVs4rBpB;AUl4rBY;EACI;AVo4rBhB;AW/4rBY;EZqeV;AC66qBF;AW/4rBgB;EACI;AXi5rBpB;AW/4rBoB;EACI;EACA;EACA;AXi5rBxB;AY15rBY;EbqeV;ACw7qBF;AY15rBgB;EACI;AZ45rBpB;AY15rBoB;EACI;EACA;EACA;AZ45rBxB;Aar6rBY;EdqeV;ACm8qBF;Aar6rBgB;EACI;Abu6rBpB;Aar6rBoB;EACI;EACA;EACA;Abu6rBxB;Ach7rBY;EfqeV;AC88qBF;Ach7rBgB;EACI;Adk7rBpB;Ach7rBoB;EACI;EACA;EACA;Adk7rBxB;Aej8rBI;EACI;EACA;EACA;Afm8rBR;AgBl8rBQ;EACI;AhBo8rBZ;AgBj8rBQ;EACI;AhBm8rBZ;AgBh8rBQ;EACI;AhBk8rBZ;AgBh8rBY;EACI;AhBk8rBhB;AgB97rBQ;EACI;AhBg8rBZ;AiBr9rBI;EACI;EACA;EAEA;AjBs9rBR;AiBp9rBQ;EACI;AjBs9rBZ;AiBp9rBY;EACI;EACA;ElBged;ACu/qBF;AiBp9rBgB;EACI;AjBs9rBpB;AiBp9rBoB;;;EAGI;EACA;AjBs9rBxB;AiBj9rBY;EACI;AjBm9rBhB;AkB9+rBI;EACI;AlBg/rBR;AmB7+rBQ;EACI;AnB++rBZ;AmB7+rBY;EACI;AnB++rBhB;ADjsoBE;EAII;ACisoBN;AD78nBE;EACE;AC+8nBJ;AD78nBI;EAEE;AC88nBN;AD18nBI;EACE;AC48nBN;ADz8nBI;EACE;EACA;AC28nBN;ADx8nBI;EACE;AC08nBN;ADt8nBE;EACE;ACw8nBJ;ADr8nBE;EACE;ACu8nBJ;ADp8nBE;EACE;ACs8nBJ;AD35nBE;EACE;AC65nBJ;AD15nBE;EACE;AC45nBJ;AD12nBE;EACE;AC42nBJ;AD12nBI;EACE;AC42nBN;ADx2nBE;EACE,cAZe;ACs3nBnB;ADv2nBE;;EAEE;ACy2nBJ;ADj2nBE;;;;EAIE;ACm2nBJ;ADh2nBE;;EAEE;ACk2nBJ;AD71nBI;;EACE,mBAxCa;ACw4nBnB;AD9seE;EAIE;EACA;AC6seJ;ADtseI;EAx4MF;ACilrBF;ADzseI;EAx4MF;AColrBF;AD5seI;EAx4MF;ACulrBF;AD/seI;EAx4MF;AC0lrBF;ADlteI;EAx4MF;AC6lrBF;ADrteI;EAx4MF;ACgmrBF;ADxteI;EAx4MF;ACmmrBF;AD3teI;EAx4MF;ACsmrBF;AD9teI;EAx4MF;ACymrBF;ADjueI;EAx4MF;AC4mrBF;ADpueI;EAx4MF;AC+mrBF;ADvueI;EAx4MF;ACknrBF;AD1ueI;EAx4MF;ACqnrBF;AD7ueI;EAx4MF;ACwnrBF;ADhveI;EAx4MF;AC2nrBF;ADnveI;EAx4MF;AC8nrBF;ADtveI;EAx4MF;ACiorBF;ADzveI;EAx4MF;ACoorBF;AD5veI;EAx4MF;ACuorBF;AD/veI;EAx4MF;AC0orBF;ADlweI;EAx4MF;AC6orBF;ADrweI;EAx4MF;ACgprBF;ADxweI;EAx4MF;ACmprBF;AD3weI;EAx4MF;ACsprBF;AD9weI;EAx4MF;ACyprBF;AD1weI;EACE;AC4weN;ADtrnBE;EAEE;EACA;ACwrnBJ;ADtprBE;EAXA;ACoqrBF;ADprnBI;EACE;ACsrnBN;ADprnBM;EACE;ACsrnBR;ADxjnBE;EACE;EACA;AC0jnBJ;AD7/rBI;EAs8EE;EACA;AC0jnBN;ADrjnBI;EACE;EACA;ACwjnBN;ADnjnBI;EACE;EACA;ACqjnBN;ADjjnBE;EACE;ACmjnBJ;AD/inBI;EACE;ACijnBN;AD5inBI;EAWI;EAMF;AC+hnBN;AD3hnBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AC6hnBJ;AD1hnBE;;EAEE;AC4hnBJ;ADvhnBE;EAEE;ACwhnBJ;ADvrnBE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;ACisnBvB;ADrrnBI;EACE;ACurnBN;ADlrnBI;EACE;ACornBN;AD/qnBI;EACE;ACirnBN;AD5qnBI;EACE;EACA;AC8qnBN;ADzqnBI;EACE;AC2qnBN;ADtqnBI;EACE;EACA;ACwqnBN;ADlqnBM;EACE;ACoqnBR;AD/pnBM;EACE;EACA;ACiqnBR;AD5pnBM;EACE;AC8pnBR;ADzpnBM;EACE;EACA;AC2pnBR;AD9tnBE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;ACyunBzB;AD5tnBI;EACE;AC8tnBN;ADztnBI;EACE;AC2tnBN;ADttnBI;EACE;ACwtnBN;ADntnBI;EACE;EACA;ACqtnBN;ADhtnBI;EACE;ACktnBN;AD7snBI;EACE;EACA;AC+snBN;ADzsnBM;EACE;AC2snBR;ADtsnBM;EACE;EACA;ACwsnBR;ADnsnBM;EACE;ACqsnBR;ADhsnBM;EACE;EACA;ACksnBR;ADrwnBE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AC8wnBvB;ADnwnBI;EACE;ACqwnBN;ADhwnBI;EACE;ACkwnBN;AD7vnBI;EACE;AC+vnBN;AD1vnBI;EACE;EACA;AC4vnBN;ADvvnBI;EACE;ACyvnBN;ADpvnBI;EACE;EACA;ACsvnBN;ADhvnBM;EACE;ACkvnBR;AD7unBM;EACE;EACA;AC+unBR;AD1unBM;EACE;AC4unBR;ADvunBM;EACE;EACA;ACyunBR;AD9knBE;EA/vEA;EAiwEE;EACA;ACglnBJ;ADn9mBE;EAKE;EACA;ACi9mBJ;ADj/mBE;EACE;ACm/mBJ;ADj/mBE;EACE;ACm/mBJ;ADj/mBE;EACE;ACm/mBJ;AD/+mBI;EAEE;ACg/mBN;ADnjnBE;EACE;ACqjnBJ;ADljnBE;EACE;ACojnBJ;ADjjnBE;EACE;ACmjnBJ;ADhjnBE;EACE;ACkjnBJ;ADj+mBI;EACE,YAxGuB;EAyGvB;ACm+mBN;AD/9mBE;EACE;ACi+mBJ;AD59mBE;EACE;AC89mBJ;AD39mBE;EAEE;EACA;AC49mBJ;ADvhnBE;EACE;ACyhnBJ;ADvhnBE;EACE;ACyhnBJ;ADvhnBE;EACE;ACyhnBJ;ADrhnBI;EAEE;ACshnBN;ADninBE;EACE;ACqinBJ;ADninBE;EACE;ACqinBJ;ADninBE;EACE;ACqinBJ;ADjinBI;EAEE;ACkinBN;ADpknBE;EAXA,0CADmB;ACmlnBrB;ADnknBE;EAfA,0CADmB;ACslnBrB;ADlknBE;EAnBA,0CADmB;ACylnBrB;ADl5rBE;EAXA;ACg6rBF;ADr5rBE;EAXA;ACm6rBF;ADx5rBE;EAXA;ACs6rBF;AD35rBE;EAXA;ACy6rBF;AD95rBE;EAXA;AC46rBF;ADj6rBE;EAXA;AC+6rBF;ADp6rBE;EAXA;ACk7rBF;ADj7mBE;;EAjgFA;ACs7rBF;ADh7mBE;;EAEE;ACk7mBJ;AD/6mBE;EACE;ACi7mBJ;AD/6mBI;EACE;ACi7mBN;AD76mBE;EACE;EACA;AC+6mBJ;AD76mBI;EACE;AC+6mBN;AD36mBE;EACE;AC66mBJ;AD16mBE;EACE;EACA;AC46mBJ;ADx6mBI;EACE;EACA;EACA;AC06mBN;ADt6mBE;EACE;EACA;ACw6mBJ;ADt6mBI;EACE;ACw6mBN;ADp6mBE;EACE;EACA;ACs6mBJ;ADp6mBI;EACE;ACs6mBN;ADn6mBI;EACE;ACq6mBN;ADj6mBE;;EAEE;ACm6mBJ;ADl5mBI;EACE,iBALc;ACy5mBpB;ADj3mBE;EAEE;EACA;ACk3mBJ;ADp+rBE;EAXA;ACk/rBF;ADv+rBE;EAXA;ACq/rBF;ADh3mBE;EACE;ACk3mBJ;AD1ymBE;EACE;AC4ymBJ;ADzymBE;EACE,aAdoB;ACyzmBxB;ADxymBE;EAGE;ACwymBJ;ADrymBE;EACE,yBAxBoB;AC+zmBxB;ADnymBI;EACE;ACqymBN;ADlymBI;EACE;ACoymBN;ADjymBI;EACE;ACmymBN;AD5xmBM;EACE,yBAtCW;ACo0mBnB;ADzxmBM;EACE,qBA5CW;ACu0mBnB;ADvxmBI;EACE;ACyxmBN;ADnxmBE;EACE;ACqxmBJ;ADhxmBI;;EACE;ACmxmBN;ADhxmBI;;EACE;ACmxmBN;ADhxmBI;;EACE;ACmxmBN;AD1rmBE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;ACgsmB1B;ADtumBE;EACE,0BAqCsB;EApCtB;ACwumBJ;AD9rmBM;EA/2FJ;ACgjsBF;AD7rmBM;EACE;AC+rmBR;AD3rmBI;EACE;AC6rmBN;AD1rmBI;EACE;AC4rmBN;ADvrmBI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;ACqumBnC;AD1vmBE;EACE,YAoB+B;EAnB/B;AC4vmBJ;ADvumBE;EATA,0CADmB;ACovmBrB;AD9rmBI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;ACgvmBnC;ADrwmBE;EACE,YAoB+B;EAnB/B;ACuwmBJ;ADlvmBE;EATA,0CADmB;AC+vmBrB;ADrsmBI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AC2vmBnC;ADhxmBE;EACE,YAoB+B;EAnB/B;ACkxmBJ;AD7vmBE;EATA,0CADmB;AC0wmBrB;ADtnmBE;EACE;ACwnmBJ;ADrnmBE;;;;EAIE;ACunmBJ;ADpnmBE;;EAEE;ACsnmBJ;ADnnmBE;EACE;ACqnmBJ;ADlnmBE;EACE;AConmBJ;AD3gmBE;EACE;AC6gmBJ;ADxgmBE;;;EAGE;AC0gmBJ;ADvgmBE;EACE;ACygmBJ;ADtgmBE;EACE;ACwgmBJ;ADrgmBE;EACE;ACugmBJ;ADpgmBE;;EAEE;EACA;ACsgmBJ;AD5imBE;EA2CI,0BAlCa;ACsimBnB;ADhgmBE;EACE,0BAvCe;ACyimBnB;AD//lBE;EAOI;AC2/lBN;ADrjmBE;EAqEI;ACm/lBN;ADxjmBE;EA8EM;AC6+lBR;AD55lBE;EACE,iCAtMA;ACommBJ;AD35lBE;;EAEE,kCAViB;ACu6lBrB;AD15lBE;;EAEE;AC45lBJ;ADz5lBE;;EAEE;AC25lBJ;ADx5lBE;;EAEE,mBAxBc;ACk7lBlB;ADv5lBE;;EAEE,mBA5BuB;ACq7lB3B;ADtnmBE;EACE;EACA;ACwnmBJ;ADrnmBE;EAII;AConmBN;AD3mmBE;EACE;AC6mmBJ;AD5lmBE;;;EARM;ACymmBR;ADrgmBE;EAnrGA;EAqrGE;EACA;ACugmBJ;ADv8lBE;EACE,iCAtMA;AC+omBJ;ADt8lBE;;EAEE,kCAViB;ACk9lBrB;ADr8lBE;;EAEE;ACu8lBJ;ADp8lBE;;EAEE;ACs8lBJ;ADn8lBE;;EAEE,mBAxBc;AC69lBlB;ADl8lBE;;EAEE,mBA5BuB;ACg+lB3B;ADjqmBE;EACE;EACA;ACmqmBJ;ADhqmBE;EAII;AC+pmBN;ADtpmBE;EACE;ACwpmBJ;ADvomBE;;;EARM;ACopmBR;AD7+lBE;EACE,kCAtMA;ACqrmBJ;AD5+lBE;;EAEE,kCAViB;ACw/lBrB;AD3+lBE;;EAEE;AC6+lBJ;AD1+lBE;;EAEE;AC4+lBJ;ADz+lBE;;EAEE,mBAxBc;ACmgmBlB;ADx+lBE;;EAEE,mBA5BuB;ACsgmB3B;ADvsmBE;EACE;EACA;ACysmBJ;ADtsmBE;EAII;ACqsmBN;AD5rmBE;EACE;AC8rmBJ;AD7qmBE;;;EARM;AC0rmBR;ADxkmBE;EAjsGA;AC4wsBF;ADvkmBE;EACE;ACykmBJ;ADvkmBI;EACE;ACykmBN;ADtkmBI;EACE;ACwkmBN;ADpkmBE;EACE;ACskmBJ;ADp+lBE;EApzGA;EAszGE;EACA;ACs+lBJ;ADl2mBE;EACE;ACo2mBJ;ADj2mBE;EACE;ACm2mBJ;ADt5lBE;EAEE;EACA;ACu5lBJ;AD5xsBE;EAXA;AC0ysBF;ADv5lBE;EACE;ACy5lBJ;AD76lBM;EAwBF;ACw5lBJ;ADn5lBE;EACE;IAEE;ECo5lBJ;AACF;ADj5lBE;EACE;ACm5lBJ;ADh5lBE;;EAEE;ACk5lBJ;AD/4lBE;EACE;ACi5lBJ;AD/4lBI;;EAEE;ACi5lBN;ADr3lBI;EACE,YALe;AC43lBrB;ADr3lBM;EACE,YAVY;ACi4lBpB;ADl1gBE;EACE,yBAXY;AC+1gBhB;ADj1gBE;EACE,yBAfY;ACk2gBhB;ADh1gBE;EACE,cAlBoB;ACo2gBxB;ADh1gBI;EACE,cAhBqB;ACk2gB3B;AD/0gBI;EACE,cAnBmB;ACo2gBzB;AD70gBE;EACE,cA7BqB;AC42gBzB;AD50gBE;EACE,qCA9BqB;AC42gBzB;AD10gBI;EACE,yBAhCsB;AC42gB5B;AD10gBM;EACE,yBArCmB;ACi3gB3B;ADz0gBM;EACE,yBAxCiB;ACm3gBzB;ADr0gBI;EACE,cA9CsB;ACq3gB5B;ADp0gBI;EACE,cApDqB;AC03gB3B;ADn0gBI;EACE,cAvDmB;AC43gBzB;AD7zgBI;EACE,cAhEmB;AC+3gBzB;AD7zgBM;;EAEE,cApEiB;ACm4gBzB;AD3zgBI;;EAEE,yBA1EmB;ACu4gBzB;ADzzgBE;EACE,cA/EqB;AC04gBzB;AD7xhBI;EACE,0BALU;ACoyhBhB;AD5xhBI;EACE,0BATU;ACuyhBhB;AD3xhBI;EACE,qCAZc;ACyyhBpB;AD1xhBI;EAj/DF;EACA;EACA;AC8wlBF;AD58gBI;EACE,qCAJc;ACk9gBpB;AD38gBI;EAx0EF;EACA;EACA;ACsxlBF;AD76hBI;EACE,qCAPc;ACs7hBpB;AD56hBI;EACE,qCAVuB;ACw7hB7B;AD36hBI;EACE,qCAbc;AC07hBpB;ADz6hBM;EACE,0BAjBiB;AC47hBzB;ADx6hBM;EACE;AC06hBR;ADrnhBI;EACE,0BATY;ACgohBlB;ADpnhBI;EACE,0BAZkB;ACkohBxB;ADlnhBM;EACE,cAhBkB;ACoohB1B;ADjnhBM;EACE,cAnBiB;ACsohBzB;ADhnhBM;EACE,cAtBe;ACwohBvB;AD5mhBM;EACE,cA7Be;AC2ohBvB;ADzmhBM;EACE,0BAxCiB;ACmphBzB;ADxmhBM;EACE,0BAtCmB;ACgphB3B;AD72lBI;EACE;AC+2lBN;AD52lBI;EACE;AC82lBN;AD32lBI;EACE;AC62lBN;ADjwlBE;EACE;ACmwlBJ;ADhwlBE;;EAEE;ACkwlBJ;AD/vlBE;EACE;ACiwlBJ;AD1zlBE;EA4DI;ACiwlBN;AD7zlBE;EA4DI;ACiwlBN;ADzzlBE;EAwDI;ACowlBN;ADxzlBE;EAoDI;ACuwlBN;ADvzlBE;EAgDI;AC0wlBN;ADvvlBE;EACE;ACyvlBJ;ADtvlBE;;EAEE;ACwvlBJ;ADrvlBE;EACE;ACuvlBJ;ADlslBI;EACE;ACoslBN;ADjslBI;EACE;ACmslBN;ADhslBI;EACE;ACkslBN;AD9rlBE;EACE;ACgslBJ;AD1rlBI;;;;;EACE;ACgslBN;AD3rlBI;EACE;AC6rlBN;ADrmlBE;EAEE;ACsmlBJ;ADl/sBE;EAXA;ACggtBF;ADtmlBE;EACE;EACA;ACwmlBJ;ADrmlBM;;EAGE;ACsmlBR;ADjmlBE;;EAEE;ACmmlBJ;AD5llBI;;;;EACE;ACimlBN;ADnilBE;EACE;ACqilBJ;ADlilBE;;EAEE;ACoilBJ;ADjilBE;;EAEE;EACA;ACmilBJ;ADhilBE;;EAEE;ACkilBJ;AD9hlBI;;;;EAIE;ACgilBN;AD3glBI;EACE,gBAJK;ACihlBX;AD5+kBE;EACE;AC8+kBJ;AD3+kBE;EACE;AC6+kBJ;AD1+kBE;EACE;AC4+kBJ;ADx+kBI;EACE;AC0+kBN;ADv+kBI;EACE;ACy+kBN;ADt+kBI;EACE;ACw+kBN;ADn+kBI;EACE;ACq+kBN;ADl+kBI;EACE;ACo+kBN;ADj+kBI;EACE;ACm+kBN;AD57kBI;EACE;AC87kBN;AD37kBI;EACE;AC67kBN;AD17kBI;EACE;AC47kBN;ADv4kBE;EACE;ACy4kBJ;AD95kBE;EACE;ACg6kBJ;AD75kBE;;EAIE;AC65kBJ;ADr6kBE;EACE;ACu6kBJ;ADp6kBE;;EAIE;ACo6kBJ;AD56kBE;EACE;AC86kBJ;AD36kBE;;EAIE;AC26kBJ;AD14kBM;;EAEE;AC44kBR;ADz4kBM;;EAEE;AC24kBR;ADx4kBM;EACE;AC04kBR;ADp4kBI;EACE;ACs4kBN;ADt1kBE;EACE;ACw1kBJ;ADr1kBE;EACE;ACu1kBJ;ADp1kBE;EACE;ACs1kBJ;ADn1kBE;EACE;ACq1kBJ;ADl1kBE;EACE;ACo1kBJ;ADzntBE;EAXA;ACuotBF;ADp1kBI;EACE;ACs1kBN;ADh1kBM;EACE;ACk1kBR;AD/0kBM;EACE;ACi1kBR;AD90kBM;EACE;ACg1kBR;AD50kBI;EACE;AC80kBN;AD30kBI;EACE;AC60kBN;ADpxkBE;EACE,yBALmC;EAMnC;ACsxkBJ;ADnxkBE;EACE,uBAXwB;EAYxB;ACqxkBJ;ADnxkBI;EACE,uBAb2B;ACkykBjC;ADlxkBI;EAl5IF;ACuqtBF;AD9wkBE;EACE,2CAvBmB;ACuykBvB;AD9wkBI;EACE,0CA1BiB;EA2BjB;ACgxkBN;AD5wkBE;EACE,0CAhCmB;EAiCnB;AC8wkBJ;AD5wkBI;EACE;EACA,2CArCiB;ACmzkBvB;AD1wkBE;EAQI;ACqwkBN;AD5tkBI;EACE;AC8tkBN;AD3tkBI;EAGE;AC2tkBN;ADxtkBI;EAGE;ACwtkBN;ADrukBI;EACE;ACuukBN;ADpukBI;EAGE;ACoukBN;ADjukBI;EAGE;ACiukBN;AD9ukBI;EACE;ACgvkBN;AD7ukBI;EAGE;AC6ukBN;AD1ukBI;EAGE;AC0ukBN;ADrskBI;EAGE,uBAhBqB;ACqtkB3B;ADjskBE;EAthJA;EAwhJE;ACmskBJ;ADhskBE;EACE,qCA3BoB;AC6tkBxB;ADpnkBE;EACE,qCAVqB;ACgokBzB;AD/pkBE;;;EAGE;ACiqkBJ;AD9pkBE;EACE;ACgqkBJ;AD7pkBE;EAGE,uCADQ;AC8pkBZ;AD1qkBE;;;EAGE;AC4qkBJ;ADzqkBE;EACE;AC2qkBJ;ADxqkBE;EAGE,uCADQ;ACyqkBZ;ADrrkBE;;;EAGE;ACurkBJ;ADprkBE;EACE;ACsrkBJ;ADnrkBE;EAGE,wCADQ;ACorkBZ;ADtokBI;;EACE,qCA3B2B;ACoqkBjC;ADpokBI;;;EAGE,qCAlCwB;ACwqkB9B;ADlokBM;EACE,qCAvCsB;AC2qkB9B;AD9nkBI;EAGE,qCADQ;AC+nkBd;ADpnkBM;;EAEE,qCA3DqC;ACirkB7C;ADlnkBQ;;EAEE,qCAhEyC;ACorkBnD;AD9mkBM;EACE,iCA3EiB;EA4EjB;ACgnkBR;AD3mkBQ;EACE,iCAjFuB;AC8rkBjC;AD1mkBQ;EACE,iCApFoB;ACgskB9B;ADtmkBE;EACE,gCAvFsB;AC+rkB1B;AD/lkBE;EACE;EAIA;AC8lkBJ;ADplkBE;EACE;ACslkBJ;AD//jBI;EAGE;AC+/jBN;ADz/jBI;EACE;IACE;EC2/jBN;AACF;ADx/jBI;;EAIE;ACw/jBN;ADr/jBI;EAGE;EACA;ACq/jBN;ADl/jBI;;;EAGE;EACA;ACo/jBN;ADh/jBM;EACE;ACk/jBR;AD/+jBM;;;EAGE;EACA;ACi/jBR;AD5+jBM;EACE;AC8+jBR;AD3+jBM;;;EAGE;EACA;AC6+jBR;ADz+jBI;EACE;EACA;AC2+jBN;ADx+jBI;EACE;AC0+jBN;ADv+jBI;EACE;ACy+jBN;ADr+jBE;EACE;ACu+jBJ;ADp+jBE;EACE;ACs+jBJ;ADn+jBE;;;EAGE;ACq+jBJ;AD97jBI;EACE,YALK;ACq8jBX;AD77jBI;;EAEE;AC+7jBN;AD17jBI;EACE;EACA;AC47jBN;ADv7jBM;EACE;ACy7jBR;ADp7jBI;EACE;ACs7jBN;ADv5jBE;EAYI;AC84jBN;ADl2jBE;;EAEE,4CAJc;ACw2jBlB;ADh2jBI;;EAEE,yCAVY;EAWZ;ACk2jBN;AD91jBE;EACE;ACg2jBJ;AD91jBI;EACE;ACg2jBN;AD51jBE;EACE;AC81jBJ;AD31jBE;EACE;AC61jBJ;ADz1jBE;;EAEE;EACA;AC21jBJ;AD7yjBM;;;;;EACE;ACmzjBR;AD9zjBE;EACE;ACg0jBJ;ADj0jBE;EACE;ACm0jBJ;AD1zjBM;;;;;EACE;ACg0jBR;AD30jBE;EACE;AC60jBJ;AD90jBE;EACE;ACg1jBJ;ADv0jBM;;;;;EACE;AC60jBR;ADx1jBE;EACE;AC01jBJ;AD31jBE;EACE;AC61jBJ;ADp1jBM;;;;;EACE;AC01jBR;AD/0jBE;EACE;ACi1jBJ;AD70jBE;EACE;AC+0jBJ;AD70jBI;EACE;AC+0jBN;AD10jBE;;;;;EAGE;AC80jBJ;AD30jBE;EACE;AC60jBJ;ADx0jBE;;;EAEE;AC20jBJ;ADn3jBM;;;;;EACE;ACy3jBR;AD92jBE;EACE;ACg3jBJ;AD52jBE;EACE;AC82jBJ;AD52jBI;EACE;AC82jBN;ADz2jBE;;;;;EAGE;AC62jBJ;AD12jBE;EACE;AC42jBJ;ADv2jBE;;;EAEE;AC02jBJ;ADl5jBM;;;;;EACE;ACw5jBR;AD74jBE;EACE;AC+4jBJ;AD34jBE;EACE;AC64jBJ;AD34jBI;EACE;AC64jBN;ADx4jBE;;;;;EAGE;AC44jBJ;ADz4jBE;EACE;AC24jBJ;ADt4jBE;;;EAEE;ACy4jBJ;ADpxjBE;EACE;EACA;ACsxjBJ;ADpxjBI;EApCF;EACA;AC2zjBF;ADpxjBI;EAxCF;EACA;AC+zjBF;ADpxjBI;EA5CF;EACA;ACm0jBF;AD/zjBE;;;EAGE;ACi0jBJ;AD9zjBE;;;;;EAKE;ACg0jBJ;AD7zjBE;EACE;AC+zjBJ;AD51jBE;EACE,gBA4Ee;ACkxjBnB;AD51jBE;EACE,YAyEe;ACqxjBnB;ADzwjBI;EAzFF;IACE,gBA8Ec;ECuxjBhB;EDn2jBA;IACE,YA2Ec;EC0xjBhB;AACF;ADvujBE;EACE;ACyujBJ;ADj1hBE;EACE;ACm1hBJ;ADh1hBE;;EAEE;ACk1hBJ;AD5zhBI;EACE,gBAJK;ACk0hBX;AD/rjBE;EAGE;EACA;EA35KF;AC2luBF;AD3rjBE;EACE;AC6rjBJ;AIrkvBQ;;;;;EAKI;AJukvBZ;AIpkvBQ;EACI;EACA;EACA;AJskvBZ;AIpkvBY;EACI;EACA;AJskvBhB;AInkvBY;EACI;EACA;AJqkvBhB;AKzlvBQ;;;;;EAKI;AL2lvBZ;AKxlvBQ;EACI;EACA;AL0lvBZ;AKxlvBY;EACI;EACA;AL0lvBhB;AKvlvBY;EACI;EACA;ALylvBhB;AKtlvBY;EACI;EACA;ALwlvBhB;AKrlvBY;EACI;EACA;EACA;ALulvBhB;AKplvBY;EACI;ALslvBhB;AKnlvBY;EACI;ALqlvBhB;AKllvBY;EACI;EACA;ALolvBhB;AKjlvBY;EACI;EACA;ALmlvBhB;AG7nvBQ;EEwCI;IAKQ;ELolvBlB;AACF;AKjlvBY;EACI;ALmlvBhB;AKhlvBY;EAEQ;EAGJ;EACA;EACA;EACA;AL+kvBhB;AMjpvBQ;;;;;EAKI;ANmpvBZ;AMhpvBQ;EACI;EACA;EACA;ANkpvBZ;AMhpvBY;EACI;ANkpvBhB;AMhpvBgB;EACI;EACA;ANkpvBpB;AM7ovBQ;EAIQ;AN4ovBhB;AMzovBY;EACI;EACA;AN2ovBhB;AMxovBY;EAEQ;EAGJ;EACA;EACA;EACA;ANuovBhB;AMpovBY;EACI;ANsovBhB;AMnovBY;EAEI;ANoovBhB;AMlovBgB;EPgbd;ACqtuBF;AMjovBgB;EACI;ANmovBpB;AMhovBgB;EACI;ANkovBpB;AM/nvBgB;EACI;EACA;ANiovBpB;AM5nvBQ;EAIQ;AN2nvBhB;AMxnvBY;;EAEI;AN0nvBhB;AO9svBQ;;;;;EAKI;APgtvBZ;AO7svBQ;EACI;EACA;EACA;EACA;AP+svBZ;AO5svBQ;EASQ;APssvBhB;AGvtvBQ;EIQA;IAGQ;EPgtvBd;AACF;AOxsvBY;EACI;EACA;EACA;AP0svBhB;AOvsvBY;EACI;APysvBhB;AOtsvBY;EACI;EACA;APwsvBhB;AOrsvBY;EACI;EACA;EACA;EACA;APusvBhB;AOpsvBY;EACI;EACA;EACA;APssvBhB;AOnsvBY;EACI;APqsvBhB;AGtvvBQ;EIgDI;IAIQ;IACA;IACA;EPssvBlB;AACF;AOnsvBY;EACI;APqsvBhB;AOnsvBgB;ERoad;ACkyuBF;AOlsvBgB;EACI;APosvBpB;AOjsvBgB;EACI;APmsvBpB;AO9rvBgB;EACI;APgsvBpB;AO5rvBY;EACI;EACA;AP8rvBhB;AO3rvBY;EAEQ;EAGJ;EACA;EACA;EACA;AP0rvBhB;AOvrvBY;EACI;EACA;APyrvBhB;AOvrvBgB;EACI;EACA;APyrvBpB;AOrrvBY;EACI;EACA;EACA;EACA;APurvBhB;AOprvBY;EACI;EACA;APsrvBhB;AOjrvBgB;EACI;EACA;APmrvBpB;AOjrvBoB;EACI;APmrvBxB;AOhrvBoB;EACI;EACA;EACA;APkrvBxB;AO/qvBoB;;;;EAII;EACA;EACA;APirvBxB;AO9qvBoB;EACI;APgrvBxB;AO5qvBgB;EACI;EACA;EACA;EACA;EACA;AP8qvBpB;AO5qvBoB;EACI;EACA;UAAA;AP8qvBxB;AO1qvBgB;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AP4qvBpB;ASn2vBQ;EACI;ATq2vBZ;AUr2vBY;EACI;EACA;EACA;AVu2vBhB;AUr2vBgB;EXoed;ACo4uBF;AUp2vBgB;EACI;AVs2vBpB;AUl2vBY;EACI;AVo2vBhB;AW/2vBY;EZqeV;AC64uBF;AW/2vBgB;EACI;AXi3vBpB;AW/2vBoB;EACI;EACA;EACA;AXi3vBxB;AY13vBY;EbqeV;ACw5uBF;AY13vBgB;EACI;AZ43vBpB;AY13vBoB;EACI;EACA;EACA;AZ43vBxB;Aar4vBY;EdqeV;ACm6uBF;Aar4vBgB;EACI;Abu4vBpB;Aar4vBoB;EACI;EACA;EACA;Abu4vBxB;Ach5vBY;EfqeV;AC86uBF;Ach5vBgB;EACI;Adk5vBpB;Ach5vBoB;EACI;EACA;EACA;Adk5vBxB;Aej6vBI;EACI;EACA;EACA;Afm6vBR;AgBl6vBQ;EACI;AhBo6vBZ;AgBj6vBQ;EACI;AhBm6vBZ;AgBh6vBQ;EACI;AhBk6vBZ;AgBh6vBY;EACI;AhBk6vBhB;AgB95vBQ;EACI;AhBg6vBZ;AiBr7vBI;EACI;EACA;EAEA;AjBs7vBR;AiBp7vBQ;EACI;AjBs7vBZ;AiBp7vBY;EACI;EACA;ElBged;ACu9uBF;AiBp7vBgB;EACI;AjBs7vBpB;AiBp7vBoB;;;EAGI;EACA;AjBs7vBxB;AiBj7vBY;EACI;AjBm7vBhB;AkB98vBI;EACI;AlBg9vBR;AmB78vBQ;EACI;AnB+8vBZ;AmB78vBY;EACI;AnB+8vBhB;AArzvBA;AAEA;EACE;AAuzvBF;AApzvBA;EAAW;AAwzvBX,C","file":"styles.584688e9221205babb8e.css","sourcesContent":["// File for which all imports are resolved and bundled. This is the entry-point for\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\n\n// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n@mixin _cdk-textarea-autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n\n@mixin mat-private-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n@mixin mat-private-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// If the mat-animation-noop class is present on the components root element,\n// prevent non css animations from running.\n// NOTE: Currently this mixin should only be used with components that do not\n// have any projected content.\n@mixin mat-private-animation-noop() {\n  // @at-root is used to steps outside of the hierarchy of the scss rules. This is\n  // done to allow a class to be added to be added to base of the scss nesting\n  // context.\n  // For example:\n  // .my-root {\n  //   .my-subclass {\n  //      @include mat-private-animation-noop();\n  //    }\n  // }\n  // results in:\n  // ._mat-animation-noopable.my-root .my-subclass { ... }\n  @at-root ._mat-animation-noopable#{&} {\n    transition: none;\n    animation: none;\n    @content;\n  }\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map-get($mat-grey, 300),\n  app-bar:    map-get($mat-grey, 100),\n  background: map-get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map-get($mat-grey, 300),\n  selected-disabled-button: map-get($mat-grey, 400),\n  disabled-button-toggle: map-get($mat-grey, 200),\n  unselected-chip: map-get($mat-grey, 300),\n  disabled-list-option: map-get($mat-grey, 200),\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map-get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map-get($mat-grey, 800),\n  dialog:     map-get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map-get($mat-grey, 900),\n  selected-disabled-button: map-get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map-get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n// Note that this file is called `private`, because the APIs in it aren't public yet.\n// Once they're made available, the code should be moved out into an `index.scss`.\n\n// Taken from mat-density with small modifications to not rely on the new Sass module\n// system, and to support arbitrary properties in a density configuration.\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\n\n$_mat-density-interval: 4px !default;\n$_mat-density-minimum-scale: minimum !default;\n$_mat-density-maximum-scale: maximum !default;\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\n$_mat-density-default-scale: 0 !default;\n\n// Whether density should be generated at root. This will be temporarily set to `true`\n// whenever density styles for legacy themes are generated.\n$mat-private-density-generate-at-root: false;\n// Whether density styles should be generated. This will be temporarily set to `false` if\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\n// we always generate the default density **only once** at root.\n$mat-private-density-generate-styles: true;\n\n// Mixin that can be used to wrap density styles of given components. The mixin will\n// move the density styles to root if the `$mat-private-density-generate-at-root` global variable\n// is set. If `$mat-private-density-generate-styles` is set to `false`, generation of density\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\n// of the new theming API where density styles are included as part of themes. Previously,\n// density styles of components were part of their base styles. With the new API, they are\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\n// the density configuration is explicitly specified as per new API. This means, that projects\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\n// density styles. This is breaking as it increases specificity of density styles. This mixin\n// provides an API to control generation of density styles so that we can ensure they are only\n// created *once* and at root.\n@mixin mat-private-density-legacy-compatibility() {\n  @if $mat-private-density-generate-styles and $mat-private-density-generate-at-root {\n    @at-root {\n      @content;\n    }\n  }\n  @else if $mat-private-density-generate-styles {\n    @content;\n  }\n}\n\n@function mat-private-density-prop-value($density-config, $density-scale, $property-name) {\n  @if (type-of($density-scale) == 'string' and\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\n      'but received #{$density-scale}.';\n  }\n\n  $value: null;\n  $property-scale-map: map-get($density-config, $property-name);\n\n  @if map-has-key($property-scale-map, $density-scale) {\n    $value: map-get($property-scale-map, $density-scale);\n  }\n  @else {\n    $value: map-get($property-scale-map, default) + $density-scale * $_mat-density-interval;\n  }\n\n  $min-value: map-get($property-scale-map, $_mat-density-minimum-scale);\n  $max-value: map-get($property-scale-map, $_mat-density-maximum-scale);\n\n  @if ($value < $min-value or $value > $max-value) {\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\n      '#{$max-value} (inclusive), but received #{$value}.';\n  }\n\n  @return $value;\n}\n\n\n// Whether duplication warnings should be disabled. Warnings enabled by default.\n$mat-theme-ignore-duplication-warnings: false !default;\n\n// Whether density should be generated by default.\n$_mat-theme-generate-default-density: true !default;\n\n// Warning that will be printed if duplicated styles are generated by a theme.\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\n\n// These variable are not intended to be overridden externally. They use `!default` to\n// avoid being reset every time this file is imported.\n$_mat-theme-emitted-color: () !default;\n$_mat-theme-emitted-typography: () !default;\n$_mat-theme-emitted-density: () !default;\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $palette\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $base-palette\n// @param $default\n// @param $lighter\n// @param $darker\n// @param $text\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map-merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map-merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $palette The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n// Validates the specified theme by ensuring that the optional color config defines\n// a primary, accent and warn palette. Returns the theme if no failures were found.\n@function _mat-validate-theme($theme) {\n  @if map-get($theme, color) {\n    $color: map-get($theme, color);\n    @if not map-get($color, primary) {\n      @error 'Theme does not define a valid \"primary\" palette.';\n    }\n    @else if not map-get($color, accent) {\n      @error 'Theme does not define a valid \"accent\" palette.';\n    }\n    @else if not map-get($color, warn) {\n      @error 'Theme does not define a valid \"warn\" palette.';\n    }\n  }\n  @return $theme;\n}\n\n// Creates a light-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n// Creates a dark-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a light-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-light-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\n  }\n  @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\n  }\n  @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n/// Gets the color configuration from the given theme or configuration.\n@function mat-get-color-config($theme, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme) {\n    @return $theme;\n  }\n  // If the theme has been constructed through the legacy theming API, we use the theme object\n  // as color configuration instead of the dedicated `color` property. We do this because for\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\n  // Hence developers could customize the colors at top-level and want to respect these changes\n  // TODO: Remove when legacy theming API is removed.\n  @if mat-private-is-legacy-constructed-theme($theme) {\n    @return $theme;\n  }\n  @if map-has-key($theme, color) {\n    @return map-get($theme, color);\n  }\n  @return $default;\n}\n\n/// Gets the density configuration from the given theme or configuration.\n@function mat-get-density-config($theme-or-config, $default: 0) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default density config.\n  @if map-has-key($theme-or-config, density) {\n    @return map-get($theme-or-config, density);\n  }\n  @return $default;\n}\n\n/// Gets the typography configuration from the given theme or configuration.\n/// For backwards compatibility, typography is not included by default.\n@function mat-get-typography-config($theme-or-config, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default typography config.\n  @if (map-has-key($theme-or-config, typography)) {\n    @return map-get($theme-or-config, typography);\n  }\n  @return $default;\n}\n\n\n//\n// Private APIs\n//\n\n// Checks if configurations that have been declared in the given theme have been generated\n// before. If so, warnings will be reported. This should notify developers in case duplicate\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\n//\n// Additionally, this mixin controls the default value for the density configuration. By\n// default, density styles are generated at scale zero. If the same density styles would be\n// generated a second time though, the default value will change to avoid duplicate styles.\n//\n// The mixin keeps track of all configurations in a list that is scoped to the specified\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\n// style duplication.\n@mixin mat-private-check-duplicate-theme-styles($theme-or-color-config, $id) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  $color-config: mat-get-color-config($theme);\n  $density-config: mat-get-density-config($theme);\n  $typography-config: mat-get-typography-config($theme);\n  // Lists of previous `color`, `density` and `typography` configurations.\n  $previous-color: map-get($_mat-theme-emitted-color, $id) or ();\n  $previous-typography: map-get($_mat-theme-emitted-typography, $id) or ();\n  $previous-density: map-get($_mat-theme-emitted-density, $id) or ();\n  // Whether duplicate legacy density styles would be generated.\n  $duplicate-legacy-density: false;\n\n  // Check if the color configuration has been generated before.\n  @if $color-config != null {\n    @if index($previous-color, $color-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same color styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-color: append($previous-color, $color-config);\n  }\n\n  // Check if the typography configuration has been generated before.\n  @if $typography-config != null {\n    @if index($previous-typography, $typography-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same typography styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-typography: append($previous-typography, $typography-config);\n  }\n\n  // Check if the density configuration has been generated before.\n  @if $density-config != null {\n    @if index($previous-density, $density-config) != null {\n      // Only report a warning if density styles would be duplicated for non-legacy theme\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\n      // of default density styles. We don't want to report a warning in those cases.\n      @if mat-private-is-legacy-constructed-theme($theme) {\n        $duplicate-legacy-density: true;\n      }\n      @else if not $mat-theme-ignore-duplication-warnings {\n        @warn 'The same density styles are generated multiple times. ' +\n           $_mat-theme-duplicate-warning;\n      }\n    }\n    $previous-density: append($previous-density, $density-config);\n  }\n\n  $_mat-theme-emitted-color: map-merge(\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\n  $_mat-theme-emitted-density: map-merge(\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\n  $_mat-theme-emitted-typography: map-merge(\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\n\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\n  // duplicate style checks do not report another warning. e.g. if developers include\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\n  // should report a warning. Not all individual components should report a warning too.\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\n  $mat-theme-ignore-duplication-warnings: true !global;\n\n  // If duplicate default density styles would be generated for a legacy constructed theme,\n  // we adjust the density generation so that no density styles are generated by default.\n  // If no default density styles have been generated yet, we ensure that the styles\n  // are generated at root. For legacy themes our goal is to generate default density\n  // styles **once** and at root. This matches the old behavior where density styles were\n  // part of the base component styles (that did not use view encapsulation).\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\n  $mat-private-density-generate-at-root: mat-private-is-legacy-constructed-theme($theme) !global;\n  $mat-private-density-generate-styles: not $duplicate-legacy-density !global;\n\n  @content;\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\n\n  $mat-private-density-generate-at-root: false !global;\n  $mat-private-density-generate-styles: true !global;\n}\n\n// Checks whether the given value resolves to a theme object. Theme objects are always\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\n@function mat-private-is-theme-object($value) {\n  @return type-of($value) == 'map' and (\n    map-has-key($value, color) or\n    map-has-key($value, density) or\n    map-has-key($value, typography) or\n    length($value) == 0\n  );\n}\n\n// Checks whether a given value corresponds to a legacy constructed theme.\n@function mat-private-is-legacy-constructed-theme($value) {\n  @return type-of($value) == 'map' and map-get($value, '_is-legacy-theme');\n}\n\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\n// contained the color configuration directly. With the recent refactoring of the theming\n// system to allow for density and typography configurations, this is no longer the case.\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\n// we copy the color configuration and put its properties at the top-level of the theme object.\n// Here is an example of a pattern that should still work until it's officially marked as a\n// breaking change:\n//\n//    @mixin my-custom-component-theme($theme) {\n//      .my-comp {\n//        background-color: mat-color(map-get($theme, primary));\n//      }\n//    }\n//\n// Note that the `$theme.primary` key does usually not exist since the color configuration\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\n// the map from `$theme.color` to `$theme` for backwards compatibility.\n@function mat-private-create-backwards-compatibility-theme($theme) {\n  @if not map-get($theme, color) {\n    @return $theme;\n  }\n  $color: map-get($theme, color);\n  @return map-merge($theme, $color);\n}\n\n// Gets the theme from the given value that is either already a theme, or a color configuration.\n// This handles the legacy case where developers pass a color configuration directly to the\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\n// the color configuration directly to the theme mixins. This can be still the case if developers\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\n// and the code can be easily updated to the new API.\n@function mat-private-legacy-get-theme($theme-or-color-config) {\n  @if mat-private-is-theme-object($theme-or-color-config) {\n    @return $theme-or-color-config;\n  }\n  @return mat-private-create-backwards-compatibility-theme((\n    _is-legacy-theme: true,\n    color: $theme-or-color-config\n  ));\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Colors for the ripple elements.*/\n@mixin mat-ripple-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $foreground-base: map-get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n@mixin mat-ripple-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-ripple-color($color);\n    }\n  }\n}\n\n\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin mat-fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin mat-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map-merge($default-config, $config);\n  $border-style: map-get($config, border-style);\n  $border-width: map-get($config, border-width);\n  $border-radius: map-get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include mat-fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that applies the border color for the focus indicators.\n@mixin _mat-strong-focus-indicators-border-color($color) {\n  .mat-focus-indicator::before {\n    border-color: $color;\n  }\n}\n\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  @include _mat-strong-focus-indicators-border-color(mat-color(map-get($config, primary)));\n}\n\n/// Mixin that sets the color of the focus indicators.\n///\n/// @param {color|map} $theme-or-color\n///   If theme, focus indicators are set to the primary color of the theme. If\n///   color, focus indicators are set to that color.\n///\n/// @example\n///   .demo-dark-theme {\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\n///   }\n///\n/// @example\n///   .demo-red-theme {\n///     @include mat-strong-focus-indicators-theme(#f00);\n///   }\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\n  @if type-of($theme-or-color) != 'map' {\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\n  }\n  @else {\n    $theme: mat-private-legacy-get-theme($theme-or-color);\n    @include mat-private-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\n      $color: mat-get-color-config($theme);\n      @if $color != null {\n        @include mat-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin mat-private-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _mat-option-density($config-or-theme) {}\n\n@mixin mat-option-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-option-color($color);\n    }\n    @if $density != null {\n      @include _mat-option-density($density);\n    }\n    @if $typography != null {\n      @include mat-option-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n@mixin _mat-optgroup-density($config-or-theme) {}\n\n@mixin mat-optgroup-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-optgroup-color($color);\n    }\n    @if $density != null {\n      @include _mat-optgroup-density($density);\n    }\n    @if $typography != null {\n      @include mat-optgroup-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($config, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\n\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\n\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-pseudo-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-pseudo-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-pseudo-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function mat-private-typography-is-2018-config($config) {\n  @return map-get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function mat-private-typography-is-2014-config($config) {\n  @return map-get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2014-config($config) {\n  @if mat-private-typography-is-2018-config($config) {\n    @return mat-typography-config(\n        $display-4: map-get($config, headline-1),\n        $display-3: map-get($config, headline-2),\n        $display-2: map-get($config, headline-3),\n        $display-1: map-get($config, headline-4),\n        $headline: map-get($config, headline-5),\n        $title: map-get($config, headline-6),\n        $subheading-2: map-get($config, subtitle-1),\n        $subheading-1: map-get($config, subtitle-2),\n        $body-2: map-get($config, body-1),\n        $body-1: map-get($config, body-2),\n        $button: map-get($config, button),\n        $caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2018-config($config) {\n  @if mat-private-typography-is-2014-config($config) {\n    @return (\n        headline-1: map-get($config, display-4),\n        headline-2: map-get($config, display-3),\n        headline-3: map-get($config, display-2),\n        headline-4: map-get($config, display-1),\n        headline-5: map-get($config, headline),\n        headline-6: map-get($config, title),\n        subtitle-1: map-get($config, subheading-2),\n        subtitle-2: map-get($config, subheading-1),\n        body-1: map-get($config, body-2),\n        body-2: map-get($config, body-1),\n        button: map-get($config, button),\n        caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Adds the base typography styles, based on a config.\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-autocomplete-panel {\n    @include mat-private-theme-overridable-elevation(4, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin mat-autocomplete-typography($config-or-theme) {}\n\n@mixin _mat-autocomplete-density($config-or-theme) {}\n\n@mixin mat-autocomplete-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-autocomplete-color($color);\n    }\n    @if $density != null {\n      @include _mat-autocomplete-density($density);\n    }\n    @if $typography != null {\n      @include mat-autocomplete-typography($typography);\n    }\n  }\n}\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $primary: map-get($config, primary);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n@mixin _mat-badge-density($config-or-theme) {}\n\n@mixin mat-badge-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-badge-color($color);\n    }\n    @if $density != null {\n      @include _mat-badge-density($density);\n    }\n    @if $typography != null {\n      @include mat-badge-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-bottom-sheet-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include mat-private-theme-elevation(16, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\n\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-bottom-sheet-color($color);\n    }\n    @if $density != null {\n      @include _mat-bottom-sheet-density($density);\n    }\n    @if $typography != null {\n      @include mat-bottom-sheet-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($config, 'color', text);\n    @include _mat-button-focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map-get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($config, 'color', default-contrast);\n    @include _mat-button-theme-property($config, 'background-color', default);\n    @include _mat-button-ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include mat-private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include mat-private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include mat-private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include mat-private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include mat-private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin mat-button-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-button-density($config-or-theme) {}\n\n@mixin mat-button-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-button-toggle-standard-height: 48px !default;\n// Minimum height for highest density can vary based on the content that developers\n// project into button-toggle's. We use a minimum of `24px` though because commonly\n// icons or text are displayed. Icons by default have a size of `24px`.\n$mat-button-toggle-standard-minimum-height: 24px !default;\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\n\n$mat-button-toggle-standard-density-config: (\n  height: (\n    default: $mat-button-toggle-standard-height,\n    maximum: $mat-button-toggle-standard-maximum-height,\n    minimum: $mat-button-toggle-standard-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-button-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include mat-private-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin mat-button-toggle-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $standard-height: mat-private-density-prop-value(\n      $mat-button-toggle-standard-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin mat-button-toggle-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-toggle-color($color);\n    }\n    @if $density != null {\n      @include mat-button-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-card {\n    @include mat-private-theme-overridable-elevation(1, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-card-density($config-or-theme) {}\n\n@mixin mat-card-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-card-color($color);\n    }\n    @if $density != null {\n      @include _mat-card-density($density);\n    }\n    @if $typography != null {\n      @include mat-card-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map-get(map-get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n@mixin _mat-checkbox-density($config-or-theme) {}\n\n@mixin mat-checkbox-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin _mat-chip-element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-chip-theme-color($palette) {\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include mat-private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map-get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _mat-chip-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include _mat-chip-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include _mat-chip-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _mat-chips-density($config-or-theme) {}\n\n@mixin mat-chips-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-chips-color($color);\n    }\n    @if $density != null {\n      @include _mat-chips-density($density);\n    }\n    @if $typography != null {\n      @include mat-chips-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-divider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-divider-typography($config-or-theme) {}\n\n@mixin _mat-divider-density($config-or-theme) {}\n\n@mixin mat-divider-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-divider-color($color);\n    }\n    @if $density != null {\n      @include _mat-divider-density($density);\n    }\n    @if $typography != null {\n      @include mat-divider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-table-density($config-or-theme) {}\n\n@mixin mat-table-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-table-color($color);\n    }\n    @if $density != null {\n      @include _mat-table-density($density);\n    }\n    @if $typography != null {\n      @include mat-table-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-range-fade-amount: 0.2;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  @include mat-date-range-colors(\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _mat-datepicker-unselected-cell {\n        background-color: mat-color($palette, 0.3);\n      }\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _mat-datepicker-unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin mat-datepicker-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _mat-datepicker-unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: mat-color($foreground, divider);\n\n    @if type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      $color: mat-color($foreground, hint-text);\n\n      @if (type-of($color) == color) {\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($config, primary));\n\n  .mat-datepicker-content {\n    @include mat-private-theme-elevation(4, $config);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include mat-private-theme-elevation(0, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($config, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: mat-color($foreground, disabled-text);\n  }\n}\n\n@mixin mat-datepicker-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin mat-date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: darken($overlap-color, 30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _mat-datepicker-density($config-or-theme) {}\n\n@mixin mat-datepicker-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-datepicker-color($color);\n    }\n    @if $density != null {\n      @include _mat-datepicker-density($density);\n    }\n    @if $typography != null {\n      @include mat-datepicker-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-dialog-container {\n    @include mat-private-theme-elevation(24, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n@mixin _mat-dialog-density($config-or-theme) {}\n\n@mixin mat-dialog-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-dialog-color($color);\n    }\n    @if $density != null {\n      @include _mat-dialog-density($density);\n    }\n    @if $typography != null {\n      @include mat-dialog-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Default minimum and maximum height for collapsed panel headers.\n$mat-expansion-panel-header-collapsed-height: 48px !default;\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\n$mat-expansion-panel-header-collapsed-maximum-height:\n    $mat-expansion-panel-header-collapsed-height !default;\n\n// Default minimum and maximum height for expanded panel headers.\n$mat-expansion-panel-header-expanded-height: 64px !default;\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\n$mat-expansion-panel-header-expanded-maximum-height:\n    $mat-expansion-panel-header-expanded-height !default;\n\n// Density configuration for the expansion panel. Captures the\n// height for both expanded and collapsed panel headers.\n$mat-expansion-panel-header-density-config: (\n  collapsed-height: (\n    default: $mat-expansion-panel-header-collapsed-height,\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\n  ),\n  expanded-height: (\n    default: $mat-expansion-panel-header-expanded-height,\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\n  )\n) !default;\n\n// Note: Keep this in sync with the animation timing for the toggle indicator\n// and body expansion. These are animated using Angular animations.\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\n\n@mixin mat-private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n\n\n@mixin mat-expansion-panel-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-expansion-panel {\n    @include mat-private-theme-overridable-elevation(2, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  @include mat-private-expansion-focus {\n    background: mat-color($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin mat-expansion-panel-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $expanded-height: mat-private-density-prop-value(\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\n  $collapsed-height: mat-private-density-prop-value(\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-expansion-panel-color($color);\n    }\n    @if $density != null {\n      @include mat-expansion-panel-density($density);\n    }\n    @if $typography != null {\n      @include mat-expansion-panel-typography($typography);\n    }\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-color($config-or-theme) {}\n\n@mixin mat-grid-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-grid-list-density($config-or-theme) {}\n\n@mixin mat-grid-list-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-grid-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-grid-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-grid-list-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-icon-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config-or-theme) {}\n\n@mixin _mat-icon-density($config-or-theme) {}\n\n@mixin mat-icon-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-icon-color($color);\n    }\n    @if $density != null {\n      @include _mat-icon-density($density);\n    }\n    @if $typography != null {\n      @include mat-icon-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function mat-private-control-placeholder-color($config) {\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: mat-private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($config, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _mat-input-density($config-or-theme) {}\n\n@mixin mat-input-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-input-color($color);\n    }\n    @if $density != null {\n      @include _mat-input-density($density);\n    }\n    @if $typography != null {\n      @include mat-input-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-list-density($config-or-theme) {}\n\n@mixin mat-list-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-menu-panel {\n    @include mat-private-theme-overridable-elevation(4, $config);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &,\n      &::after,\n      .mat-icon-no-color {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _mat-menu-density($config-or-theme) {}\n\n@mixin mat-menu-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-menu-color($color);\n    }\n    @if $density != null {\n      @include _mat-menu-density($density);\n    }\n    @if $typography != null {\n      @include mat-menu-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-paginator-height: 56px !default;\n// Minimum height for paginator's in the highest density is determined based on how\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\n$mat-paginator-minimum-height: 40px !default;\n$mat-paginator-maximum-height: $mat-paginator-height !default;\n\n$mat-paginator-density-config: (\n  height: (\n    default: $mat-paginator-height,\n    maximum: $mat-paginator-maximum-height,\n    minimum: $mat-paginator-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-paginator-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n@mixin mat-paginator-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-paginator-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-paginator-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-paginator-color($color);\n    }\n    @if $density != null {\n      @include mat-paginator-density($density);\n    }\n    @if $typography != null {\n      @include mat-paginator-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-progress-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config-or-theme) {}\n\n@mixin _mat-progress-bar-density($config-or-theme) {}\n\n@mixin mat-progress-bar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-spinner-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config-or-theme) {}\n\n@mixin _mat-progress-spinner-density($config-or-theme) {}\n\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-spinner-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-spinner-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-spinner-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map-get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-radio-density($config-or-theme) {}\n\n@mixin mat-radio-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-radio-color($color);\n    }\n    @if $density != null {\n      @include _mat-radio-density($density);\n    }\n    @if $typography != null {\n      @include mat-radio-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: mat-private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include mat-private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _mat-select-density($config-or-theme) {}\n\n@mixin mat-select-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-select-color($color);\n    }\n    @if $density != null {\n      @include _mat-select-density($density);\n    }\n    @if $typography != null {\n      @include mat-select-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-sidenav-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include mat-private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config-or-theme) {}\n\n@mixin _mat-sidenav-density($config-or-theme) {}\n\n@mixin mat-sidenav-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sidenav-color($color);\n    }\n    @if $density != null {\n      @include _mat-sidenav-density($density);\n    }\n    @if $typography != null {\n      @include mat-sidenav-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include mat-private-theme-elevation(1, $config);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-slide-toggle-density($config-or-theme) {}\n\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slide-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-slide-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-slide-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-slider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-slider-density($config-or-theme) {}\n\n@mixin mat-slider-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slider-color($color);\n    }\n    @if $density != null {\n      @include _mat-slider-density($density);\n    }\n    @if $typography != null {\n      @include mat-slider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-stepper-header-height: 72px !default;\n// Minimum height for highest density stepper's is determined based on how much\n// stepper headers can shrink until the step icon or step label exceed. We can't use\n// a value below `42px` because the optional label for steps would otherwise exceed.\n$mat-stepper-header-minimum-height: 42px !default;\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\n\n$mat-stepper-density-config: (\n  height: (\n    default: $mat-stepper-header-height,\n    maximum: $mat-stepper-header-maximum-height,\n    minimum: $mat-stepper-header-minimum-height,\n  )\n) !default;\n\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\n// component styles. Modifying these variables does not have the desired effect for consumers.\n$mat-stepper-label-header-height: 24px;\n$mat-stepper-label-position-bottom-top-gap: 16px;\n$mat-stepper-label-min-width: 50px;\n\n$mat-vertical-stepper-content-margin: 36px;\n\n$mat-stepper-side-gap: 24px;\n$mat-stepper-line-width: 1px;\n$mat-stepper-line-gap: 8px;\n\n$mat-step-sub-label-font-size: 12px;\n$mat-step-header-icon-size: 16px;\n\n\n@mixin mat-stepper-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: mat-color($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($accent);\n        color: mat-color($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: mat-color($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($warn);\n        color: mat-color($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-stepper-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-stepper-density-config, $density-scale, height);\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding $mat-stepper-side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: $mat-stepper-line-gap - $vertical-padding;\n      bottom: $mat-stepper-line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\n    }\n  }\n}\n\n@mixin mat-stepper-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-stepper-color($color);\n    }\n    @if $density != null {\n      @include mat-stepper-density($density);\n    }\n    @if $typography != null {\n      @include mat-stepper-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-sort-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config-or-theme) {}\n\n@mixin _mat-sort-density($config-or-theme) {}\n\n@mixin mat-sort-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sort-color($color);\n    }\n    @if $density != null {\n      @include _mat-sort-density($density);\n    }\n    @if $typography != null {\n      @include mat-sort-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-tabs-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _mat-ink-bar($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-links .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-tabs-density($config-or-theme) {}\n\n@mixin mat-tabs-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tabs-color($color);\n    }\n    @if $density != null {\n      @include _mat-tabs-density($density);\n    }\n    @if $typography != null {\n      @include mat-tabs-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Minimum height for toolbar's in the highest density is difficult to determine because\n// developers can project arbitrary content. We use a minimum value that ensures that most\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\n$mat-toolbar-minimum-height: 44px !default;\n\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-height-mobile: 56px !default;\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-desktop-density-config: (\n  height: (\n    default: $mat-toolbar-height-desktop,\n    maximum: $mat-toolbar-maximum-height-desktop,\n    minimum: $mat-toolbar-minimum-height-desktop,\n  )\n) !default;\n\n$mat-toolbar-mobile-density-config: (\n  height: (\n    default: $mat-toolbar-height-mobile,\n    maximum: $mat-toolbar-maximum-height-mobile,\n    minimum: $mat-toolbar-minimum-height-mobile,\n  )\n) !default;\n\n\n@mixin _mat-toolbar-height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n@mixin mat-toolbar-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height-desktop: mat-private-density-prop-value(\n      $mat-toolbar-desktop-density-config, $density-scale, height);\n  $height-mobile: mat-private-density-prop-value(\n      $mat-toolbar-mobile-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _mat-toolbar-height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media ($mat-xsmall) {\n      @include _mat-toolbar-height($height-mobile);\n    }\n  }\n}\n\n@mixin mat-toolbar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-toolbar-color($color);\n    }\n    @if $density != null {\n      @include mat-toolbar-density($density);\n    }\n    @if $typography != null {\n      @include mat-toolbar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n@mixin _mat-tooltip-density($config-or-theme) {}\n\n@mixin mat-tooltip-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tooltip-color($color);\n    }\n    @if $density != null {\n      @include _mat-tooltip-density($density);\n    }\n    @if $typography != null {\n      @include mat-tooltip-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-snack-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $accent: map-get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include mat-private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-snack-bar-density($config-or-theme) {}\n\n@mixin mat-snack-bar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-snack-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-snack-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-snack-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-fill-density($config-or-theme) {}\n\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-fill-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-fill-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-legacy-density($config-or-theme) {}\n\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-legacy-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-legacy-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-outline-density($config-or-theme) {}\n\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-outline-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-outline-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config-or-theme) {}\n\n@mixin mat-private-form-field-standard-density($config-or-theme) {}\n\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-standard-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-standard-typography($typography);\n    }\n  }\n}\n\n\n// Color styles that apply to all appearances of the form-field.\n@mixin mat-form-field-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-color($config);\n  @include mat-form-field-standard-color($config);\n  @include mat-form-field-fill-color($config);\n  @include mat-form-field-outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n@mixin mat-form-field-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  @include mat-private-form-field-legacy-density($density-scale);\n  @include mat-private-form-field-standard-density($density-scale);\n  @include mat-private-form-field-fill-density($density-scale);\n  @include mat-private-form-field-outline-density($density-scale);\n}\n\n@mixin mat-form-field-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-color($color);\n    }\n    @if $density != null {\n      @include mat-form-field-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-tree-node-height: 48px !default;\n// Minimum height for tree nodes in highest density is difficult to determine as\n// developers can display arbitrary content. We use a minimum height which ensures\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\n$mat-tree-node-minimum-height: 24px !default;\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\n\n$mat-tree-density-config: (\n  height: (\n    default: $mat-tree-node-height,\n    maximum: $mat-tree-node-maximum-height,\n    minimum: $mat-tree-node-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-tree-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin mat-tree-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-tree-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-tree-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tree-color($color);\n    }\n    @if $density != null {\n      @include mat-tree-density($density);\n    }\n    @if $typography != null {\n      @include mat-tree-typography($typography);\n    }\n  }\n}\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config-or-theme: null) {\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-typography-config($config-or-theme), $config-or-theme);\n\n  // If no actual color configuration has been specified, create a default one.\n  @if not $config {\n    $config: mat-typography-config();\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-divider-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n\n  @include mat-private-strong-focus-indicators-positioning();\n  @include _mat-mdc-core();\n}\n\n@mixin mat-core-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($config, background);\n    $foreground: map-get($config, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$mat-elevation-prefix}#{$zValue} {\n      @include mat-private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include mat-ripple-theme($theme);\n    @include mat-option-theme($theme);\n    @include mat-optgroup-theme($theme);\n    @include mat-pseudo-checkbox-theme($theme);\n\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-core-color($color);\n    }\n  }\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mat-mdc-core() {\n  @include _mat-mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme-or-color-config) {\n  $dedupe-key: 'angular-material-theme';\n  @include mat-private-check-duplicate-theme-styles($theme-or-color-config, $dedupe-key) {\n    @include mat-core-theme($theme-or-color-config);\n    @include mat-autocomplete-theme($theme-or-color-config);\n    @include mat-badge-theme($theme-or-color-config);\n    @include mat-bottom-sheet-theme($theme-or-color-config);\n    @include mat-button-theme($theme-or-color-config);\n    @include mat-button-toggle-theme($theme-or-color-config);\n    @include mat-card-theme($theme-or-color-config);\n    @include mat-checkbox-theme($theme-or-color-config);\n    @include mat-chips-theme($theme-or-color-config);\n    @include mat-table-theme($theme-or-color-config);\n    @include mat-datepicker-theme($theme-or-color-config);\n    @include mat-dialog-theme($theme-or-color-config);\n    @include mat-divider-theme($theme-or-color-config);\n    @include mat-expansion-panel-theme($theme-or-color-config);\n    @include mat-form-field-theme($theme-or-color-config);\n    @include mat-grid-list-theme($theme-or-color-config);\n    @include mat-icon-theme($theme-or-color-config);\n    @include mat-input-theme($theme-or-color-config);\n    @include mat-list-theme($theme-or-color-config);\n    @include mat-menu-theme($theme-or-color-config);\n    @include mat-paginator-theme($theme-or-color-config);\n    @include mat-progress-bar-theme($theme-or-color-config);\n    @include mat-progress-spinner-theme($theme-or-color-config);\n    @include mat-radio-theme($theme-or-color-config);\n    @include mat-select-theme($theme-or-color-config);\n    @include mat-sidenav-theme($theme-or-color-config);\n    @include mat-slide-toggle-theme($theme-or-color-config);\n    @include mat-slider-theme($theme-or-color-config);\n    @include mat-stepper-theme($theme-or-color-config);\n    @include mat-sort-theme($theme-or-color-config);\n    @include mat-tabs-theme($theme-or-color-config);\n    @include mat-toolbar-theme($theme-or-color-config);\n    @include mat-tooltip-theme($theme-or-color-config);\n    @include mat-tree-theme($theme-or-color-config);\n    @include mat-snack-bar-theme($theme-or-color-config);\n  }\n}\n\n\n\n// Includes all of the color styles.\n@mixin angular-material-color($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the color system, extract the color config from the theme object.\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-color-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No color configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: $config,\n    typography: null,\n    density: null,\n  ));\n}\n\n\n\n\n\n\n\n\n\n\n// Includes all of the density styles.\n@mixin angular-material-density($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the density system, extract the density config from the theme object.\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-density-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No density configuration specified.';\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `density` config while setting `color` and `typography` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for density because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-density` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-expansion-panel-density($config);\n  @include mat-stepper-density($config);\n  @include mat-toolbar-density($config);\n  @include mat-tree-density($config);\n  @include mat-paginator-density($config);\n  @include mat-form-field-density($config);\n  @include mat-button-toggle-density($config);\n}\n\n\n\n","\n// Custom Theming for Angular Material\n// For more information: https://material.angular.io/guide/theming\n@import '~@angular/material/theming';\n\n// Include the common styles for Angular Material. We include this here so that you only\n// have to load a single css file for Angular Material in your app.\n// Be sure that you only ever include this mixin once!\n@include mat-core();\n\n$dark-primary-text: rgba(black, 0.87);\n$light-primary-text: white;\n\n// ------------------------------------------\n// COMPONENT THEMING\n// ------------------------------------------\n\n// angular-sdk Lib\n@import \"../projects/angular-sdk/src/styles/theme.scss\";\n\n// Components\n@import \"./app/app.component.scss\";\n\n@import \"./app/pages/guides/guides.component.scss\";\n@import \"./app/pages/guides/cfar-offer-banner/cfar-offer-banner.component.scss\";\n@import \"./app/pages/guides/cfar-offer-banner-large/cfar-offer-banner-large.component.scss\";\n@import \"./app/pages/guides/cfar-offer-dialog/cfar-offer-dialog.component.scss\";\n@import \"./app/pages/guides/cfar-exercise-flow/cfar-exercise-flow.component.scss\";\n\n@import \"./app/pages/not-found/not-found.component.scss\";\n\n@import \"./app/shared/components/inputs/inputs.component.scss\";\n@import \"./app/shared/components/layout/layout.component.scss\";\n@import \"./app/shared/components/navbar/navbar.component.scss\";\n@import \"./app/shared/components/outputs/outputs.component.scss\";\n\n// Mixin for easier access\n@mixin documentation-components-theme($theme) {\n  @include app-component-theme($theme);\n\n  @include guides-page-component-theme($theme);\n  @include cfar-offer-banner-page-component-theme($theme);\n  @include cfar-offer-banner-large-page-component-theme($theme);\n  @include cfar-offer-dialog-page-component-theme($theme);\n  @include cfar-exercise-flow-page-component-theme($theme);\n\n  @include not-found-page-component-theme($theme);\n\n  @include inputs-component-theme($theme);\n  @include layout-component-theme($theme);\n  @include navbar-component-theme($theme);\n  @include outputs-component-theme($theme);\n}\n\n// ------------------------------------------\n// THEMES (For documentation)\n// ------------------------------------------\n\n$hopper-primary-palette: (\n  50: #FEEDED,\n  100: #FDD2D1,\n  200: #FCB4B3,\n  300: #FB9594,\n  400: #FA7F7D,\n  500: #F96866,\n  600: #F8605E,\n  700: #F75553,\n  800: #F64B49,\n  900: #F53A38,\n  A100: #FFFFFF,\n  A200: #FFFFFF,\n  A400: #FFD7D7,\n  A700: #FFBEBE,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$hopper-accent-palette: (\n  50: #e9eaeb,\n  100: #c9cacc,\n  200: #a5a7aa,\n  300: #808488,\n  400: #65696f,\n  500: #4a4f55,\n  600: #43484e,\n  700: #3a3f44,\n  800: #32363b,\n  900: #22262a,\n  A100: #7ab1fb,\n  A200: #4894fa,\n  A400: #1076ff,\n  A700: #0069f6,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$hopper-primary: mat-palette($hopper-primary-palette, 500, 300, 700);\n$hopper-accent: mat-palette($hopper-accent-palette, 500, 300, 700);\n$hopper-warn: mat-palette($mat-red);\n\n$hopper-dark-theme: mat-dark-theme((\n  color: (\n    primary: $hopper-primary,\n    accent: $hopper-accent,\n    warn: $hopper-warn,\n  )\n));\n\n$hopper-light-theme: mat-light-theme((\n  color: (\n    primary: $hopper-primary,\n    accent: $hopper-accent,\n    warn: $hopper-warn,\n  )\n));\n\n.theme-dark-hopper {\n  // Apply the theme to all Angular Material Components\n  @include angular-material-theme($hopper-dark-theme);\n\n  // Apply the theme to the library components\n  @include hopper-cloud-airlines-angular-sdk-components-theme($hopper-dark-theme);\n\n  // Apply the theme to the documentation components\n  @include documentation-components-theme($hopper-dark-theme);\n}\n\n.theme-light-hopper {\n  // Apply the theme to all Angular Material Components\n  @include angular-material-theme($hopper-light-theme);\n\n  // Apply the theme to the library components\n  @include hopper-cloud-airlines-angular-sdk-components-theme($hopper-light-theme);\n\n  // Apply the theme to the documentation components\n  @include documentation-components-theme($hopper-light-theme);\n}\n\n// ----------------------------------------------------------\n// OVERRIDEN FOR DOCUMENTATION PURPOSE (Managed by the SDK)\n// ----------------------------------------------------------\n\n.theme-light-blue {\n  // Apply the theme to all Angular Material Components\n  @include angular-material-theme($light-blue-theme);\n\n  // Apply the theme to the library components\n  @include hopper-cloud-airlines-angular-sdk-components-theme($light-blue-theme);\n\n  // Apply the theme to the documentation components\n  @include documentation-components-theme($light-blue-theme);\n}\n\n// ------------------------------------------\n// GLOBAL STYLE\n// ------------------------------------------\n\n/* You can add global styles to this file, and also import other style files */\n\nbody { \n  margin: 0;\n  // font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.pointer { cursor: pointer; }\n","// -----------------------------------------------------------------------------------------------------\n// @ Spacing helpers [m | p] [x? | y?] - [0-4-8-12-...-256 | auto]\n// -----------------------------------------------------------------------------------------------------\n\n@each $prop, $abbrev in (margin: m, padding: p) {\n  @for $index from 0 through 64 {\n    $size: $index * 4;\n    $length: #{$size}px;\n\n    .#{$abbrev}-#{$size} {\n      #{$prop}: $length !important;\n    }\n  }\n\n  @for $index from 0 through 64 {\n    $size: $index * 4;\n    $length: #{$size}px;\n\n    .#{$abbrev}x-#{$size} {\n      #{$prop}-right: $length !important;\n      #{$prop}-left: $length !important;\n    }\n\n    .#{$abbrev}y-#{$size} {\n      #{$prop}-top: $length !important;\n      #{$prop}-bottom: $length !important;\n    }\n  }\n\n  @for $index from 0 through 64 {\n    $size: $index * 4;\n    $length: #{$size}px;\n\n    .#{$abbrev}t-#{$size} {\n      #{$prop}-top: $length !important;\n    }\n\n    .#{$abbrev}r-#{$size} {\n      #{$prop}-right: $length !important;\n    }\n\n    .#{$abbrev}b-#{$size} {\n      #{$prop}-bottom: $length !important;\n    }\n\n    .#{$abbrev}l-#{$size} {\n      #{$prop}-left: $length !important;\n    }\n  }\n\n  @if ($abbrev == m) {\n    // Some special margin utils for flex alignments\n    .m-auto {\n      margin: auto !important;\n    }\n\n    .mt-auto {\n      margin-top: auto !important;\n    }\n\n    .mr-auto {\n      margin-right: auto !important;\n    }\n\n    .mb-auto {\n      margin-bottom: auto !important;\n    }\n\n    .ml-auto {\n      margin-left: auto !important;\n    }\n\n    .mx-auto {\n      margin-right: auto !important;\n      margin-left: auto !important;\n    }\n\n    .my-auto {\n      margin-top: auto !important;\n      margin-bottom: auto !important;\n    }\n  }\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ Font helpers\n// -----------------------------------------------------------------------------------------------------\n\n.bold {\n  font-weight: bold;\n}\n\n.italic {\n  font-weight: italic;\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ Alignment helpers\n// -----------------------------------------------------------------------------------------------------\n\n.left {\n  text-align: left;\n}\n\n.right {\n  text-align: right;\n}\n\n.center {\n  text-align: center;\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ General helpers\n// -----------------------------------------------------------------------------------------------------\n\n.pointer {\n  cursor: pointer;\n}\n\n.mid-width {\n  width: 50%;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.hidden {\n  display: none!important;\n}\n","@import './breakpoints.scss';\n\n::ng-deep {\n    .hopper-dialog-container {\n        max-width: 640px !important;\n        min-width: 500px !important;\n\n        @include media-breakpoint('gt-md') {\n            min-height: 600px !important;    \n        }\n\n        @include media-breakpoint('lt-md') {\n            max-width: 80% !important;\n            min-width: 300px !important;\n            height: 80%;    \n        }\n\n        @include media-breakpoint('lt-sm') {\n            max-width: 100% !important;\n            height: 100%;\n        }\n    \n        .mat-dialog-container {\n            padding: 0px !important;\n            border-radius: 0px;\n\n            .mat-dialog-content,\n            .mat-dialog-actions {\n                padding: 0px !important;\n                margin: 0px !important;\n            }\n        }\n    }\n}\n","// Media step breakpoint mixin based on Angular Material lib\n$breakpoints: (\n    xs: 'screen and (max-width: 599px)',\n    sm: 'screen and (min-width: 600px) and (max-width: 959px)',\n    md: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    lg: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    xl: 'screen and (min-width: 1920px) and max-width: 5000px)',\n    lt-sm: 'screen and (max-width: 599px)',\n    lt-md: 'screen and (max-width: 959px)',\n    lt-lg: 'screen and (max-width: 1279px)',\n    lt-xl: 'screen and (max-width: 1919px)',\n    gt-xs: 'screen and (min-width: 600px)',\n    gt-sm: 'screen and (min-width: 960px)',\n    gt-md: 'screen and (min-width: 1280px)',\n    gt-lg: 'screen and (min-width: 1920px)'\n) !default;\n\n// Re-map the breakpoints for the helper classes\n$helper-breakpoints: (\n    xs: null,\n    sm: 'gt-xs',\n    md: 'gt-sm',\n    lt: 'gt-md',\n    xl: 'gt-lg'\n);\n\n@mixin media-breakpoint($breakpointName) {\n\n    $mediaQuery: map-get($breakpoints, $breakpointName);\n\n    @if ($mediaQuery == null) {\n        @content\n    } @else {\n        @media #{$mediaQuery} {\n            @content\n        }\n    }\n}","@import '../../styles/helper.scss';\n\n\n// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-offer-banner-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    hopper-cfar-offer-banner {\n        .mat-button, \n        .mat-flat-button, \n        .mat-icon-button, \n        .mat-raised-button,\n        .mat-stroked-button { \n            border-radius: 0px; \n        }\n\n        mat-card {\n            background: map-get($primary-palette, 50) !important;\n            color: map-get($primary-palette, \"50-contrast\") !important;\n            border-radius: 0px;\n\n            .check-icon {\n                font-weight: bold;\n                color: green;\n            }\n    \n            .offer-title {\n                font-weight: bold;\n                margin: 0px;\n            }\n        }\n    }\n}","@import '../../styles/helper.scss';\n\n\n// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-offer-banner-large-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    hopper-cfar-offer-banner-large {\n        .mat-button, \n        .mat-flat-button, \n        .mat-icon-button, \n        .mat-raised-button,\n        .mat-stroked-button { \n            border-radius: 0px; \n        }\n\n        mat-card {\n            border: 1px solid map-get($primary-palette, \"A200\") !important;\n            border-radius: 0px;\n\n            .powered-by-image {\n                margin-top: 1rem;\n                height: 2rem;\n            }\n\n            .check-icon {\n                font-weight: bold;\n                color: green;\n            }\n    \n            .offer-title {\n                border-left: 2px solid map-get($accent-palette, 300);\n                font-weight: bold;\n            }\n\n            .default-choice {\n                background: map-get($bg-palette, \"background\");\n                border: 1px solid map-get($bg-palette, \"status-bar\");\n                color: map-get($fg-palette, \"text\");\n            }\n\n            .responsive-image {\n                width: 100%;\n            }\n\n            .important-text {\n                font-size: 1rem;\n            }\n\n            .price-per-traveler {\n                font-weight: bold;\n                color: map-get($primary-palette, default);\n            }\n\n            .offer-choice {\n                border-left: 2px solid map-get($accent-palette, 300);\n                padding-left: 16px;\n\n                @include media-breakpoint('lt-md') {\n                    border: none;\n                }\n            }\n\n            a {\n                color: map-get($primary-palette, default);\n            }\n\n            .warning-message {\n                @if ($is-dark == false) {\n                    background: map-get($warn-palette, 50);\n                }\n                \n                border: 1px solid map-get($warn-palette, default);\n                width: 100%;\n                text-align: center;\n                color: map-get($warn-palette, default);\n            }\n        }\n    }\n}","@import '../../styles/helper.scss';\n@import '../../styles/dialog.scss';\n\n\n// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-offer-dialog-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    hopper-cfar-offer-dialog {\n        .mat-button, \n        .mat-flat-button, \n        .mat-icon-button, \n        .mat-raised-button,\n        .mat-stroked-button { \n            border-radius: 0px; \n        }\n        \n        .mat-dialog-title {\n            background-color: map-get($accent-palette, 900);\n            color: map-get($accent-palette, \"900-contrast\");\n            margin: 0px;\n\n            .powered-by-container {\n                height: 0px;\n\n                .powered-by-image {\n                    margin-top: 1rem;\n                    height: 2rem;\n                }\n            }\n        }\n\n        .mat-dialog-content {\n            @if($is-dark) {\n                background-color: rgb(52,52,52);\n            } @else {\n                background-color: rgb(255,255,255);\n            }\n\n            .check-icon {\n                font-weight: bold;\n                color: green;\n            }\n\n            .error-message {\n                @if ($is-dark == false) {\n                    background: map-get($warn-palette, 50);\n                }\n\n                border: 1px solid map-get($warn-palette, default);\n                width: 100%;\n                text-align: center;\n                color: map-get($warn-palette, default);\n            }\n\n            a {\n                color: map-get($primary-palette, default);\n            }\n\n            mat-card {\n                color: map-get($fg-palette, default);\n                border-radius: 0px;\n                \n                &:hover {\n                    @include mat-elevation(4);\n                }\n\n                &.active {\n                    border: 2px solid map-get($primary-palette, default);\n                }\n\n                .offer-title {\n                    font-weight: bold;\n                }\n\n                .price {\n                    font-style: bold;\n                    color: map-get($fg-palette, \"secondary-text\")\n                }\n            }\n        }\n\n        .mat-dialog-actions {\n            @if($is-dark) {\n                background-color: rgb(52,52,52);\n            } @else {\n                background-color: rgb(255,255,255);\n            }\n\n            .mat-button-base+.mat-button-base,\n            .mat-mdc-button-base+.mat-mdc-button-base {\n                margin: 0px;\n            }\n        }\n    }\n}","@import '../../styles/helper.scss';\n\n// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-exercise-flow-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    hopper-cfar-exercise-flow {\n        .mat-button, \n        .mat-flat-button, \n        .mat-icon-button, \n        .mat-raised-button,\n        .mat-stroked-button { \n            border-radius: 0px; \n        }\n\n        .header {\n            height: 100px;\n            margin: 0px;\n            text-align: center;\n            border-bottom: 1px solid map-get($fg-palette, divider);\n        }\n\n        .content {\n            @include media-breakpoint('lt-sm') {\n                // Full-height - mat-dialog-title height\n                max-height: calc(100% - 100px);\n            }\n\n            @if($is-dark) {\n                background-color: rgb(52,52,52);\n            } @else {\n                background-color: rgb(255,255,255);\n            }\n\n            .title {\n                color: map-get($primary-palette, default);\n                font-size: 20px;\n                font-weight: bold;\n            }\n\n            .text-justify {\n                text-align: justify;\n            }\n\n            .subtitle {\n                font-size: 16px;\n                font-weight: bold;\n            }\n\n            .flight-icon {\n                transform: rotate(90deg);\n                font-size: 32px;\n                width: 32px;\n                height: 32px;\n            }\n\n            .decorative-stroke {\n                height: 2px;\n                background-color: map-get($primary-palette, default);\n                width: 100%;\n            }\n\n            .itinerary-container {\n                border-right: 1px solid map-get($fg-palette, divider);\n                \n                @include media-breakpoint('lt-sm') {\n                    border-right: none;\n                    border-bottom: 1px solid map-get($fg-palette, divider);\n                    padding-bottom: 16px;\n                }\n            }\n\n            mat-card {\n                border-radius: 0px;\n                \n                &:hover {\n                    @include mat-elevation(4);\n                }\n\n                &.active {\n                    border: 2px solid map-get($primary-palette, default);\n                }\n\n                .offer-title {\n                    font-weight: bold;\n                }\n            }\n\n            .custom-icon {\n                * {\n                    fill: map-get($primary-palette, default);\n                }\n            }\n\n            .resent-code-label {\n                font-size: 11px;\n                cursor: pointer;\n            }\n\n            .error-message {\n                @if ($is-dark == false) {\n                    background: map-get($warn-palette, 50);\n                }\n                \n                border: 1px solid map-get($warn-palette, default);\n                width: 100%;\n                text-align: center;\n                color: map-get($warn-palette, default);\n            }\n\n            fieldset {\n                border: 2px solid map-get($primary-palette, default);\n                border-radius: 8px;\n\n                legend {\n                    border: 2px solid map-get($primary-palette, default);\n                    border-radius: 8px;\n                }\n            }\n\n            .confirmation-icon {\n                background: map-get($primary-palette, default);\n                border-radius: 50%;\n                padding: 8px;\n                color: white;\n            }\n\n            .origin-destination {\n                font-weight: bold;\n                font-size: 1.6rem;\n            }\n\n            // Hyperwallet\n            .hw-form-transfer-methods {\n                .hw-group {\n                    padding: 16px;\n                    margin: 16px 0px;\n\n                    legend {\n                        padding: 8px 16px;\n                    }\n\n                    .hw-form-group {\n                        display: flex;\n                        flex-flow: row wrap;\n                        margin-bottom: 16px;\n                    }\n\n                    .hw-label,\n                    .hw-number,\n                    .hw-input,\n                    .hw-select {\n                        width: 100%;\n                        height: 2rem;\n                        margin-bottom: 8px;\n                    }\n\n                    .hw-error-message {\n                        color: map-get($warn-palette, default);\n                    }\n                }\n\n                .hw-global-errors {\n                    background: rgba(255, 0, 0, 0.25);\n                    padding: 16px;\n                    color: map-get($warn-palette, default);\n                    border: 1px solid map-get($warn-palette, default);\n                    margin: 16px;\n\n                    .hw-global-errors-list {\n                        list-style: none;\n                        padding-inline-start: 0px;\n                    }\n                }\n\n                .hw-button {\n                    width: 50%;\n                    margin: 0px 25%;\n                    background-color: map-get($primary-palette, default);\n                    color: map-get($primary-palette, \"default-contrast\");\n                    font-family: Roboto, \"Helvetica Neue\", sans-serif;\n                    font-size: 14px;\n                    font-weight: 500;\n                    box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n                    cursor: pointer;\n                    border: none;\n                    min-width: 64px;\n                    line-height: 36px;\n                    padding: 0 16px;\n                }\n            }\n        }\n    }      \n}","@import '~@angular/material/theming';\n\n$dark-primary-text: rgba(black, 0.87);\n$light-primary-text: white;\n\n$light-blue-primary-palette: (\n  50: #e0eaef,\n  100: #b3cbd7,\n  200: #80a8bc,\n  300: #4d85a1,\n  400: #266a8c,\n  500: #005078,\n  600: #004970,\n  700: #004065,\n  800: #00375b,\n  900: #002748,\n  A100: #7cb7ff,\n  A200: #499aff,\n  A400: #167eff,\n  A700: #0070fc,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$light-blue-accent-palette: (\n  50: #e9eaeb,\n  100: #c9cacc,\n  200: #a5a7aa,\n  300: #808488,\n  400: #65696f,\n  500: #4a4f55,\n  600: #43484e,\n  700: #3a3f44,\n  800: #32363b,\n  900: #22262a,\n  A100: #7ab1fb,\n  A200: #4894fa,\n  A400: #1076ff,\n  A700: #0069f6,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$light-blue-primary: mat-palette($light-blue-primary-palette, 500, 300, 700);\n$light-blue-accent: mat-palette($light-blue-accent-palette, 500, 300, 700);\n$light-blue-warn: mat-palette($mat-red);\n\n$light-blue-theme: mat-light-theme((\n  color: (\n    primary: $light-blue-primary,\n    accent: $light-blue-accent,\n    warn: $light-blue-warn,\n  )\n));","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin app-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-root {\n        .app-container {\n            height: 100vh;\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin guides-page-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-guides-page {\n        .guides-page-container {\n            mat-card {\n                max-width: 300px;\n                background-color: map-get($accent-palette, default);\n                color: map-get($accent-palette, \"default-contrast\");\n\n                &:hover {\n                    @include mat-elevation(6);\n                }\n\n                &.active {\n                    border: 2px solid map-get($primary-palette, default);\n                }\n            }\n\n            a {\n                color: map-get($primary-palette, default);\n            }\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-offer-banner-page-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    // Values : status-bar, app-bar, background, hover, card, dialog, disabled-button, raised-button,\n    // focused-button, selected-button, disabled-button-toggle, unselected-chip, disabled-list-option, tooltip\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-cfar-offer-banner {\n\n        .cfar-offer-banner-page-container {\n\n            .tab-group {\n                @include mat-elevation(4);\n    \n                mat-tab-body {\n                    background-color: map-get($bg-palette, card);\n\n                    .hljs {\n                        width: calc(90% - 32px);\n                        padding: 0px;\n                        margin: 16px;\n                    }\n                }\n            }\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-offer-banner-large-page-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    // Values : status-bar, app-bar, background, hover, card, dialog, disabled-button, raised-button,\n    // focused-button, selected-button, disabled-button-toggle, unselected-chip, disabled-list-option, tooltip\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-cfar-offer-banner-large {\n\n        .cfar-offer-banner-large-page-container {\n\n            .tab-group {\n                @include mat-elevation(4);\n    \n                mat-tab-body {\n                    background-color: map-get($bg-palette, card);\n\n                    .hljs {\n                        width: calc(90% - 32px);\n                        padding: 0px;\n                        margin: 16px;\n                    }\n                }\n            }\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-offer-dialog-page-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    // Values : status-bar, app-bar, background, hover, card, dialog, disabled-button, raised-button,\n    // focused-button, selected-button, disabled-button-toggle, unselected-chip, disabled-list-option, tooltip\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-cfar-offer-dialog {\n\n        .cfar-offer-dialog-page-container {\n\n            .tab-group {\n                @include mat-elevation(4);\n    \n                mat-tab-body {\n                    background-color: map-get($bg-palette, card);\n\n                    .hljs {\n                        width: calc(90% - 32px);\n                        padding: 0px;\n                        margin: 16px;\n                    }\n                }\n            }\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin cfar-exercise-flow-page-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    // Values : status-bar, app-bar, background, hover, card, dialog, disabled-button, raised-button,\n    // focused-button, selected-button, disabled-button-toggle, unselected-chip, disabled-list-option, tooltip\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-cfar-exercise-flow {\n\n        .cfar-exercise-flow-page-container {\n\n            .tab-group {\n                @include mat-elevation(4);\n    \n                mat-tab-body {\n                    background-color: map-get($bg-palette, card);\n\n                    .hljs {\n                        width: calc(90% - 32px);\n                        padding: 0px;\n                        margin: 16px;\n                    }\n                }\n            }\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin not-found-page-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-not-found-page {\n        background-color: map-get($bg-palette, background);\n        color: map-get($fg-palette, text);\n        height: 100%;\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin inputs-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    // Values : status-bar, app-bar, background, hover, card, dialog, disabled-button, raised-button,\n    // focused-button, selected-button, disabled-button-toggle, unselected-chip, disabled-list-option, tooltip\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-inputs {\n\n        .required-icon {\n            color: green;\n        }\n\n        .optional-icon {\n            color: red;\n        }\n\n        .mat-header-row {\n            background-color: map-get($primary-palette, 500);\n            \n            .mat-header-cell {\n                color: map-get($primary-palette, \"500-contrast\");\n            }\n        }\n\n        a {\n            color: map-get($primary-palette, default);\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin layout-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-layout {\n        background-color: map-get($bg-palette, background);\n        color: map-get($fg-palette, text);\n        // Full Height - header height\n        height: calc(100% - 64px);\n\n        .layout-container {\n            height: 100%;\n\n            .aside {\n                overflow: scroll;\n                background-color: map-get($bg-palette, app-bar);\n                @include mat-elevation(4);\n\n                .mat-list-base {\n                    padding: 0px;\n\n                    .mat-list-single-selected-option,\n                    .mat-list-single-selected-option:hover,\n                    .mat-list-single-selected-option:focus {\n                        background-color: map-get($accent-palette, default);\n                        color: map-get($accent-palette, \"default-contrast\")\n                    }\n                }  \n            }\n\n            .content {\n                overflow: scroll;\n            }\n        }\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin navbar-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-navbar {\n        z-index: 999;\n    }\n}","// How to use : https://tomastrajan.medium.com/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n@mixin outputs-component-theme($theme) {\n\n    // Colors used for element backgrounds\n    // Values : status-bar, app-bar, background, hover, card, dialog, disabled-button, raised-button,\n    // focused-button, selected-button, disabled-button-toggle, unselected-chip, disabled-list-option, tooltip\n    $bg-palette: map-get($theme, background);\n\n    // Colors used for texts and icons\n    $fg-palette: map-get($theme, foreground);\n\n    // Main color most widely used across all screens and components\n    $primary-palette: map-get($theme, primary);\n\n    // Also known as the secondary color. Used for floating action buttons and interactive elements.\n    $accent-palette: map-get($theme, accent);\n\n    // Color to convey error state\n    $warn-palette: map-get($theme, warn);\n\n    // If it's dark theme or not\n    $is-dark: map-get($theme, is-dark);\n\n    // ----------------------------------------------\n\n    app-outputs {\n\n        .mat-header-row {\n            background-color: map-get($primary-palette, 500);\n            \n            .mat-header-cell {\n                color: map-get($primary-palette, \"500-contrast\");\n            }\n        }\n    }\n}"],"sourceRoot":"webpack:///"}