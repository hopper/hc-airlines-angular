{"version":3,"sources":["webpack:///src/app/shared/ngrx/global/global.actions.ts","webpack:///src/app/shared/components/navbar/navbar.component.ts","webpack:///src/app/shared/components/navbar/navbar.component.html","webpack:///src/environments/environment.prod.ts","webpack:///projects/angular-sdk/src/i18n/zh.ts","webpack:///src/app/shared/ngrx/global/global.selectors.ts","webpack:///projects/angular-sdk/src/i18n/es.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/components/layout/layout.component.ts","webpack:///src/app/shared/components/layout/layout.component.html","webpack:///projects/angular-sdk/src/i18n/en.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/outputs/outputs.component.ts","webpack:///src/app/shared/components/outputs/outputs.component.html","webpack:///src/app/shared/ngrx/index.ts","webpack:///projects/angular-sdk/src/i18n/index.ts","webpack:///projects/angular-sdk/src/i18n/fr.ts","webpack:///src/app/shared/ngrx/router/router.actions.ts","webpack:///src/app/shared/ngrx/global/global.reducer.ts","webpack:///src/app/shared/components/inputs/inputs.component.ts","webpack:///src/app/shared/components/inputs/inputs.component.html","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["setCurrentLang","setCurrentTheme","NavBarComponent","_matIconRegistry","_domSanitizer","_store","_unsubcriber","version","languages","map","x","lang","themes","forEach","language","addSvgIcon","bypassSecurityTrustResourceUrl","pipe","subscribe","currentTheme","currentLanguage","currentLang","next","complete","newTheme","dispatch","newLanguage","environment","production","defaultTheme","locale","data","COMMON","DATE_FORMAT","DATE_FORMAT_SHORT","COUNTRY","AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BIH","BWA","BVT","BRA","VGB","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","HKG","MAC","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SXM","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VIR","WLF","ESH","YEM","ZMB","ZWE","CFAR_OFFER_BANNER","TITLE","NO_OFFERS","LOADING","BUTTON","SELECT","COVERAGE_PERCENTAGE","CFAR_OFFER_BANNER_LARGE","CONTINUE","NO_COVERAGE_OPTION","CHOOSE_COVERAGE","CFAR_OFFER_DIALOG","POWERED_BY","VIEW_DETAILS","CANCEL","SUBMIT","TERMS_WARNING","TERMS_LINK_TEXT","CFAR_EXERCISE_DIALOG","SUBTITLE","DEADLINE_SENTENCE_1","DEADLINE_SENTENCE_2","TO","DEPARTURE","ARRIVAL","FLIGHT","PASSENGER","PASSENGERS","CHOOSE_REFUND_TYPE","HOPPER_REFUND","AIRLINE_REFUND","METHOD","AMOUNT","REFUND_METHOD","NO_CONTRACT","getGlobalState","getCurrentLang","state","getCurrentTheme","SharedModule","AppComponent","document","body","classList","remove","add","LayoutComponent","components","push","name","link","selectedPath","path","event","querySelector","scrollTo","onScrollToTop","metaReducers","AppModule","provide","useValue","fullLibraryLoader","forRoot","instrument","maxAge","logOnly","OutputsComponent","_cdRef","displayedOutputsColumns","outputsDataSource","changes","outputs","currentValue","sort","outputSort","detectChanges","reducers","global","router","Locales","selectRouterState","selectCurrentRoute","selectFragment","selectQueryParams","selectQueryParam","selectRouteParams","selectRouteParam","selectRouteData","selectUrl","initialState","reducer","globalReducer","action","InputsComponent","displayedInputsColumns","inputsDataSource","inputs","inputSort","NotFoundPageComponent","routes","component","loadChildren","then","m","PagesModule","pathMatch","redirectTo","AppRoutingModule","useHash","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,UAAMA,cAAc,GAAG,iEAAa,iCAAb,EAAgD,2DAAhD,CAAvB;AACA,UAAMC,eAAe,GAAG,iEAAa,8BAAb,EAA6C,2DAA7C,CAAxB;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSY;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/C;;AAAU;;AAAO;;AACjB;;AAAM;;AAAW;;AACrB;;;;;;AADU;;AAAA;;;;;;;;AAUV;;AAAyD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AACA;;AAAM;;;;AAA0B;;AACpC;;;;;;AAFc;;AAAA;;AACJ;;AAAA;;;;UDRTC,e;AAUX,iCACUC,gBADV,EAEUC,aAFV,EAGUC,MAHV,EAGiC;AAAA;;AAAA;;AAFvB,eAAAF,gBAAA,GAAAA,gBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AALF,eAAAC,YAAA,GAA6B,IAAI,4CAAJ,EAA7B,CAKyB,CAE/B;;AACA,eAAKC,OAAL,GAAe,yEAAYA,OAA3B,CAH+B,CAK/B;;AACA,eAAKC,SAAL,GAAiB,sEAAQC,GAAR,CAAY,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,IAAN;AAAA,WAAb,CAAjB;AAEA,eAAKC,MAAL,GAAc,CACZ,mBADY,EAEZ,oBAFY,EAGZ,kBAHY,CAAd,CAR+B,CAc/B;;AACA,eAAKJ,SAAL,CAAeK,OAAf,CAAuB,UAAAC,QAAQ,EAAI;AACjC,iBAAI,CAACX,gBAAL,CAAsBY,UAAtB,CAAiC,UAAUD,QAA3C,EAAqD,KAAI,CAACV,aAAL,CAAmBY,8BAAnB,CAAkD,kBAAkBF,QAAlB,GAA6B,MAA/E,CAArD;AACD,WAFD;AAGD,S,CAED;AACA;AACA;;;;;iBAEA,oBAAQ;AAAA;;AACN;AACA,iBAAKT,MAAL,CAAYY,IAAZ,CACE,2DAAO,6EAAP,CADF,EAEE,iEAAU,KAAKX,YAAf,CAFF,EAGEY,SAHF,CAGY,UAACC,YAAD;AAAA,qBAA0B,MAAI,CAACA,YAAL,GAAoBA,YAA9C;AAAA,aAHZ,EAFM,CAON;;;AACA,iBAAKd,MAAL,CAAYY,IAAZ,CACE,2DAAO,4EAAP,CADF,EAEE,iEAAU,KAAKX,YAAf,CAFF,EAGEY,SAHF,CAGY,UAACE,eAAD;AAAA,qBAA6B,MAAI,CAACC,WAAL,GAAmBD,eAAhD;AAAA,aAHZ;AAID;;;iBAED,uBAAW;AACT,iBAAKd,YAAL,CAAkBgB,IAAlB;;AACA,iBAAKhB,YAAL,CAAkBiB,QAAlB;AACD,W,CAED;AACA;AACA;;;;iBAEA,oBAAWC,QAAX,EAA2B;AACzB,iBAAKnB,MAAL,CAAYoB,QAAZ,CAAqB,4EAA8B;AAAEN,0BAAY,EAAEK;AAAhB,aAA9B,CAArB;AACD;;;iBAED,uBAAcE,WAAd,EAAiC;AAC/B,iBAAKrB,MAAL,CAAYoB,QAAZ,CAAqB,2EAA6B;AAAEJ,yBAAW,EAAEK;AAAf,aAA7B,CAArB;AACD;;;;;;;yBAlEUxB,e,EAAe,uI,EAAA,uI,EAAA,kH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,8f;AAAA;AAAA;AClB5B;;AACI;;AACI;;AAAqC;;AAAmD;;AAC5F;;AAEA;;AACI;;AACI;;AAAuB;;AAAO;;AAC9B;;AAAM;;AAAkB;;AAC5B;;AAEA;;AACI;;AAIJ;;AAEA;;AACI;;AACA;;AAAM;;;;AAA6B;;AACvC;;AAEA;;AACI;;AAIJ;;AACJ;;AACJ;;;;;;;;AA5B6C;;AAAA;;AAIlB;;AAAA;;AAET;;AAAA;;AAIkC;;AAAA;;AAMzB;;AAAA;;AACQ;;AAAA;;AACjB;;AAAA;;AAIqC;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxBvD;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMyB,WAAW,GAAG;AACzBC,kBAAU,EAAE,IADa;AAEzBC,oBAAY,EAAE,kBAFW;AAGzBtB,eAAO,EAAE;AAHgB,OAApB;;;;;;;;;;;;;;;;ACEP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMuB,MAAM,GAAS;AACxBnB,YAAI,EAAE,IADkB;AAExBoB,YAAI,EAAE;AACFC,gBAAM,EAAE;AACJC,uBAAW,EAAE,8BADT;AAEJC,6BAAiB,EAAE,kBAFf;AAGJC,mBAAO,EAAE;AACLC,iBAAG,EAAE,KADA;AAELC,iBAAG,EAAE,MAFA;AAGLC,iBAAG,EAAE,OAHA;AAILC,iBAAG,EAAE,OAJA;AAKLC,iBAAG,EAAE,OALA;AAMLC,iBAAG,EAAE,KANA;AAOLC,iBAAG,EAAE,KAPA;AAQLC,iBAAG,EAAE,KARA;AASLC,iBAAG,EAAE,KATA;AAULC,iBAAG,EAAE,SAVA;AAWLC,iBAAG,EAAE,KAXA;AAYLC,iBAAG,EAAE,MAZA;AAaLC,iBAAG,EAAE,KAbA;AAcLC,iBAAG,EAAE,MAdA;AAeLC,iBAAG,EAAE,KAfA;AAgBLC,iBAAG,EAAE,MAhBA;AAiBLC,iBAAG,EAAE,KAjBA;AAkBLC,iBAAG,EAAE,IAlBA;AAmBLC,iBAAG,EAAE,MAnBA;AAoBLC,iBAAG,EAAE,MApBA;AAqBLC,iBAAG,EAAE,MArBA;AAsBLC,iBAAG,EAAE,KAtBA;AAuBLC,iBAAG,EAAE,KAvBA;AAwBLC,iBAAG,EAAE,IAxBA;AAyBLC,iBAAG,EAAE,KAzBA;AA0BLC,iBAAG,EAAE,IA1BA;AA2BLC,iBAAG,EAAE,MA3BA;AA4BLC,iBAAG,EAAE,YA5BA;AA6BLC,iBAAG,EAAE,MA7BA;AA8BLC,iBAAG,EAAE,KA9BA;AA+BLC,iBAAG,EAAE,IA/BA;AAgCLC,iBAAG,EAAE,SAhCA;AAiCLC,iBAAG,EAAE,SAjCA;AAkCLC,iBAAG,EAAE,SAlCA;AAmCLC,iBAAG,EAAE,MAnCA;AAoCLC,iBAAG,EAAE,OApCA;AAqCLC,iBAAG,EAAE,KArCA;AAsCLC,iBAAG,EAAE,KAtCA;AAuCLC,iBAAG,EAAE,KAvCA;AAwCLC,iBAAG,EAAE,KAxCA;AAyCLC,iBAAG,EAAE,KAzCA;AA0CLC,iBAAG,EAAE,MA1CA;AA2CLC,iBAAG,EAAE,OA3CA;AA4CLC,iBAAG,EAAE,IA5CA;AA6CLC,iBAAG,EAAE,IA7CA;AA8CLC,iBAAG,EAAE,IA9CA;AA+CLC,iBAAG,EAAE,IA/CA;AAgDLC,iBAAG,EAAE,IAhDA;AAiDLC,iBAAG,EAAE,KAjDA;AAkDLC,iBAAG,EAAE,OAlDA;AAmDLC,iBAAG,EAAE,MAnDA;AAoDLC,iBAAG,EAAE,KApDA;AAqDLC,iBAAG,EAAE,OArDA;AAsDLC,iBAAG,EAAE,SAtDA;AAuDLC,iBAAG,EAAE,MAvDA;AAwDLC,iBAAG,EAAE,OAxDA;AAyDLC,iBAAG,EAAE,MAzDA;AA0DLC,iBAAG,EAAE,MA1DA;AA2DLC,iBAAG,EAAE,IA3DA;AA4DLC,iBAAG,EAAE,MA5DA;AA6DLC,iBAAG,EAAE,OA7DA;AA8DLC,iBAAG,EAAE,IA9DA;AA+DLC,iBAAG,EAAE,KA/DA;AAgELC,iBAAG,EAAE,MAhEA;AAiELC,iBAAG,EAAE,SAjEA;AAkELC,iBAAG,EAAE,IAlEA;AAmELC,iBAAG,EAAE,IAnEA;AAoELC,iBAAG,EAAE,MApEA;AAqELC,iBAAG,EAAE,OArEA;AAsELC,iBAAG,EAAE,OAtEA;AAuELC,iBAAG,EAAE,MAvEA;AAwELC,iBAAG,EAAE,OAxEA;AAyELC,iBAAG,EAAE,OAzEA;AA0ELC,iBAAG,EAAE,MA1EA;AA2ELC,iBAAG,EAAE,IA3EA;AA4ELC,iBAAG,EAAE,IA5EA;AA6ELC,iBAAG,EAAE,IA7EA;AA8ELC,iBAAG,EAAE,OA9EA;AA+ELC,iBAAG,EAAE,SA/EA;AAgFLC,iBAAG,EAAE,WAhFA;AAiFLC,iBAAG,EAAE,IAjFA;AAkFLC,iBAAG,EAAE,KAlFA;AAmFLC,iBAAG,EAAE,MAnFA;AAoFLC,iBAAG,EAAE,IApFA;AAqFLC,iBAAG,EAAE,IArFA;AAsFLC,iBAAG,EAAE,MAtFA;AAuFLC,iBAAG,EAAE,IAvFA;AAwFLC,iBAAG,EAAE,KAxFA;AAyFLC,iBAAG,EAAE,MAzFA;AA0FLC,iBAAG,EAAE,MA1FA;AA2FLC,iBAAG,EAAE,IA3FA;AA4FLC,iBAAG,EAAE,MA5FA;AA6FLC,iBAAG,EAAE,KA7FA;AA8FLC,iBAAG,EAAE,KA9FA;AA+FLC,iBAAG,EAAE,OA/FA;AAgGLC,iBAAG,EAAE,KAhGA;AAiGLC,iBAAG,EAAE,IAjGA;AAkGLC,iBAAG,EAAE,WAlGA;AAmGLC,iBAAG,EAAE,SAnGA;AAoGLC,iBAAG,EAAE,MApGA;AAqGLC,iBAAG,EAAE,KArGA;AAsGLC,iBAAG,EAAE,IAtGA;AAuGLC,iBAAG,EAAE,IAvGA;AAwGLC,iBAAG,EAAE,OAxGA;AAyGLC,iBAAG,EAAE,IAzGA;AA0GLC,iBAAG,EAAE,KA1GA;AA2GLC,iBAAG,EAAE,KA3GA;AA4GLC,iBAAG,EAAE,KA5GA;AA6GLC,iBAAG,EAAE,KA7GA;AA8GLC,iBAAG,EAAE,KA9GA;AA+GLC,iBAAG,EAAE,KA/GA;AAgHLC,iBAAG,EAAE,IAhHA;AAiHLC,iBAAG,EAAE,IAjHA;AAkHLC,iBAAG,EAAE,IAlHA;AAmHLC,iBAAG,EAAE,OAnHA;AAoHLC,iBAAG,EAAE,KApHA;AAqHLC,iBAAG,EAAE,MArHA;AAsHLC,iBAAG,EAAE,IAtHA;AAuHLC,iBAAG,EAAE,IAvHA;AAwHLC,iBAAG,EAAE,KAxHA;AAyHLC,iBAAG,EAAE,QAzHA;AA0HLC,iBAAG,EAAE,IA1HA;AA2HLC,iBAAG,EAAE,MA3HA;AA4HLC,iBAAG,EAAE,KA5HA;AA6HLC,iBAAG,EAAE,KA7HA;AA8HLC,iBAAG,EAAE,MA9HA;AA+HLC,iBAAG,EAAE,KA/HA;AAgILC,iBAAG,EAAE,OAhIA;AAiILC,iBAAG,EAAE,KAjIA;AAkILC,iBAAG,EAAE,KAlIA;AAmILC,iBAAG,EAAE,KAnIA;AAoILC,iBAAG,EAAE,OApIA;AAqILC,iBAAG,EAAE,KArIA;AAsILC,iBAAG,EAAE,MAtIA;AAuILC,iBAAG,EAAE,MAvIA;AAwILC,iBAAG,EAAE,IAxIA;AAyILC,iBAAG,EAAE,KAzIA;AA0ILC,iBAAG,EAAE,OA1IA;AA2ILC,iBAAG,EAAE,OA3IA;AA4ILC,iBAAG,EAAE,OA5IA;AA6ILC,iBAAG,EAAE,MA7IA;AA8ILC,iBAAG,EAAE,KA9IA;AA+ILC,iBAAG,EAAE,KA/IA;AAgJLC,iBAAG,EAAE,QAhJA;AAiJLC,iBAAG,EAAE,MAjJA;AAkJLC,iBAAG,EAAE,KAlJA;AAmJLC,iBAAG,EAAE,IAnJA;AAoJLC,iBAAG,EAAE,IApJA;AAqJLC,iBAAG,EAAE,OArJA;AAsJLC,iBAAG,EAAE,KAtJA;AAuJLC,iBAAG,EAAE,MAvJA;AAwJLC,iBAAG,EAAE,IAxJA;AAyJLC,iBAAG,EAAE,MAzJA;AA0JLC,iBAAG,EAAE,IA1JA;AA2JLC,iBAAG,EAAE,KA3JA;AA4JLC,iBAAG,EAAE,IA5JA;AA6JLC,iBAAG,EAAE,QA7JA;AA8JLC,iBAAG,EAAE,KA9JA;AA+JLC,iBAAG,EAAE,MA/JA;AAgKLC,iBAAG,EAAE,KAhKA;AAiKLC,iBAAG,EAAE,MAjKA;AAkKLC,iBAAG,EAAE,GAlKA;AAmKLC,iBAAG,EAAE,MAnKA;AAoKLC,iBAAG,EAAE,QApKA;AAqKLC,iBAAG,EAAE,IArKA;AAsKLC,iBAAG,EAAE,IAtKA;AAuKLC,iBAAG,EAAE,MAvKA;AAwKLC,iBAAG,EAAE,IAxKA;AAyKLC,iBAAG,EAAE,MAzKA;AA0KLC,iBAAG,EAAE,KA1KA;AA2KLC,iBAAG,EAAE,SA3KA;AA4KLC,iBAAG,EAAE,KA5KA;AA6KLC,iBAAG,EAAE,IA7KA;AA8KLC,iBAAG,EAAE,KA9KA;AA+KLC,iBAAG,EAAE,MA/KA;AAgLLC,iBAAG,EAAE,IAhLA;AAiLLC,iBAAG,EAAE,KAjLA;AAkLLC,iBAAG,EAAE,MAlLA;AAmLLC,iBAAG,EAAE,KAnLA;AAoLLC,iBAAG,EAAE,IApLA;AAqLLC,iBAAG,EAAE,MArLA;AAsLLC,iBAAG,EAAE,KAtLA;AAuLLC,iBAAG,EAAE,KAvLA;AAwLLC,iBAAG,EAAE,OAxLA;AAyLLC,iBAAG,EAAE,MAzLA;AA0LLC,iBAAG,EAAE,SA1LA;AA2LLC,iBAAG,EAAE,MA3LA;AA4LLC,iBAAG,EAAE,WA5LA;AA6LLC,iBAAG,EAAE,WA7LA;AA8LLC,iBAAG,EAAE,UA9LA;AA+LLC,iBAAG,EAAE,YA/LA;AAgMLC,iBAAG,EAAE,KAhMA;AAiMLC,iBAAG,EAAE,MAjMA;AAkMLC,iBAAG,EAAE,UAlMA;AAmMLC,iBAAG,EAAE,OAnMA;AAoMLC,iBAAG,EAAE,MApMA;AAqMLC,iBAAG,EAAE,MArMA;AAsMLC,iBAAG,EAAE,KAtMA;AAuMLC,iBAAG,EAAE,MAvMA;AAwMLC,iBAAG,EAAE,KAxMA;AAyMLC,iBAAG,EAAE,MAzMA;AA0MLC,iBAAG,EAAE,OA1MA;AA2MLC,iBAAG,EAAE,OA3MA;AA4MLC,iBAAG,EAAE,KA5MA;AA6MLC,iBAAG,EAAE,IA7MA;AA8MLC,iBAAG,EAAE,aA9MA;AA+MLC,iBAAG,EAAE,KA/MA;AAgNLC,iBAAG,EAAE,KAhNA;AAiNLC,iBAAG,EAAE,MAjNA;AAkNLC,iBAAG,EAAE,IAlNA;AAmNLC,iBAAG,EAAE,KAnNA;AAoNLC,iBAAG,EAAE,UApNA;AAqNLC,iBAAG,EAAE,MArNA;AAsNLC,iBAAG,EAAE,IAtNA;AAuNLC,iBAAG,EAAE,IAvNA;AAwNLC,iBAAG,EAAE,KAxNA;AAyNLC,iBAAG,EAAE,IAzNA;AA0NLC,iBAAG,EAAE,OA1NA;AA2NLC,iBAAG,EAAE,MA3NA;AA4NLC,iBAAG,EAAE,IA5NA;AA6NLC,iBAAG,EAAE,KA7NA;AA8NLC,iBAAG,EAAE,IA9NA;AA+NLC,iBAAG,EAAE,KA/NA;AAgOLC,iBAAG,EAAE,IAhOA;AAiOLC,iBAAG,EAAE,UAjOA;AAkOLC,iBAAG,EAAE,KAlOA;AAmOLC,iBAAG,EAAE,KAnOA;AAoOLC,iBAAG,EAAE,OApOA;AAqOLC,iBAAG,EAAE,WArOA;AAsOLC,iBAAG,EAAE,KAtOA;AAuOLC,iBAAG,EAAE,KAvOA;AAwOLC,iBAAG,EAAE,KAxOA;AAyOLC,iBAAG,EAAE,UAzOA;AA0OLC,iBAAG,EAAE,IA1OA;AA2OLC,iBAAG,EAAE,IA3OA;AA4OLC,iBAAG,EAAE,QA5OA;AA6OLC,iBAAG,EAAE,KA7OA;AA8OLC,iBAAG,EAAE,QA9OA;AA+OLC,iBAAG,EAAE,MA/OA;AAgPLC,iBAAG,EAAE,MAhPA;AAiPLC,iBAAG,EAAE,IAjPA;AAkPLC,iBAAG,EAAE,SAlPA;AAmPLC,iBAAG,EAAE,SAnPA;AAoPLC,iBAAG,EAAE,MApPA;AAqPLC,iBAAG,EAAE,IArPA;AAsPLC,iBAAG,EAAE,KAtPA;AAuPLC,iBAAG,EAAE;AAvPA;AAHL,WADN;AA8PFC,2BAAiB,EAAE;AACfC,iBAAK,EAAE,gBADQ;AAEfC,qBAAS,EAAE,SAFI;AAGfC,mBAAO,EAAE,WAHM;AAIfC,kBAAM,EAAE;AACJC,oBAAM,EAAE;AADJ,aAJO;AAOfC,+BAAmB,EAAE;AAPN,WA9PjB;AAuQFC,iCAAuB,EAAE;AACrBN,iBAAK,EAAE,gBADc;AAErBC,qBAAS,EAAE,SAFU;AAGrBC,mBAAO,EAAE,WAHY;AAIrBC,kBAAM,EAAE;AACJI,sBAAQ,EAAE;AADN,aAJa;AAOrBF,+BAAmB,EAAE,wBAPA;AAQrBG,8BAAkB,EAAE,gBARC;AASrBC,2BAAe,EAAE;AATI,WAvQvB;AAkRFC,2BAAiB,EAAE;AACfV,iBAAK,EAAE,UADQ;AAEfW,sBAAU,EAAE,eAFG;AAGfC,wBAAY,EAAE,MAHC;AAIfT,kBAAM,EAAE;AACJU,oBAAM,EAAE,OADJ;AAEJC,oBAAM,EAAE;AAFJ,aAJO;AAQfb,qBAAS,EAAE,SARI;AASfC,mBAAO,EAAE,WATM;AAUfa,yBAAa,EAAE,qBAVA;AAWfC,2BAAe,EAAE;AAXF,WAlRjB;AA+RFC,8BAAoB,EAAE;AAClBjB,iBAAK,EAAE,MADW;AAElBkB,oBAAQ,EAAE,UAFQ;AAGlBC,+BAAmB,EAAE,cAHH;AAIlBC,+BAAmB,EAAE,uBAJH;AAKlBC,cAAE,EAAE,KALc;AAMlBC,qBAAS,EAAE,MANO;AAOlBC,mBAAO,EAAE,MAPS;AAQlBC,kBAAM,EAAE,MARU;AASlBC,qBAAS,EAAE,uBATO;AAUlBC,sBAAU,EAAE,uBAVM;AAWlBC,8BAAkB,EAAE,UAXF;AAYlBC,yBAAa,EAAE,WAZG;AAalBC,0BAAc,EAAE,QAbE;AAclBC,kBAAM,EAAE,KAdU;AAelBC,kBAAM,EAAE,KAfU;AAgBlBC,yBAAa,EAAE,MAhBG;AAiBlB7B,kBAAM,EAAE;AACJU,oBAAM,EAAE,IADJ;AAEJC,oBAAM,EAAE;AAFJ,aAjBU;AAqBlBmB,uBAAW,EAAE,SArBK;AAsBlB/B,mBAAO,EAAE;AAtBS;AA/RpB;AAFkB,OAArB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,UAAMgC,cAAc,GAAG,0EAAmC,QAAnC,CAAvB;AACA,UAAMC,cAAc,GAAG,mEAAeD,cAAf,EAA+B,UAAAE,KAAK;AAAA,eAAIA,KAAK,CAAC3S,WAAV;AAAA,OAApC,CAAvB;AACA,UAAM4S,eAAe,GAAG,mEAAeH,cAAf,EAA+B,UAAAE,KAAK;AAAA,eAAIA,KAAK,CAAC7S,YAAV;AAAA,OAApC,CAAxB;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMW,MAAM,GAAS;AACxBnB,YAAI,EAAE,IADkB;AAExBoB,YAAI,EAAE;AACFC,gBAAM,EAAE;AACJC,uBAAW,EAAE,8BADT;AAEJC,6BAAiB,EAAE,kBAFf;AAGJC,mBAAO,EAAE;AACLC,iBAAG,EAAE,YADA;AAELC,iBAAG,EAAE,aAFA;AAGLC,iBAAG,EAAE,SAHA;AAILC,iBAAG,EAAE,SAJA;AAKLC,iBAAG,EAAE,iBALA;AAMLC,iBAAG,EAAE,SANA;AAOLC,iBAAG,EAAE,QAPA;AAQLC,iBAAG,EAAE,SARA;AASLC,iBAAG,EAAE,WATA;AAULC,iBAAG,EAAE,mBAVA;AAWLC,iBAAG,EAAE,WAXA;AAYLC,iBAAG,EAAE,SAZA;AAaLC,iBAAG,EAAE,OAbA;AAcLC,iBAAG,EAAE,WAdA;AAeLC,iBAAG,EAAE,SAfA;AAgBLC,iBAAG,EAAE,YAhBA;AAiBLC,iBAAG,EAAE,SAjBA;AAkBLC,iBAAG,EAAE,SAlBA;AAmBLC,iBAAG,EAAE,WAnBA;AAoBLC,iBAAG,EAAE,UApBA;AAqBLC,iBAAG,EAAE,aArBA;AAsBLC,iBAAG,EAAE,SAtBA;AAuBLC,iBAAG,EAAE,QAvBA;AAwBLC,iBAAG,EAAE,OAxBA;AAyBLC,iBAAG,EAAE,UAzBA;AA0BLC,iBAAG,EAAE,OA1BA;AA2BLC,iBAAG,EAAE,SA3BA;AA4BLC,iBAAG,EAAE,sBA5BA;AA6BLC,iBAAG,EAAE,UA7BA;AA8BLC,iBAAG,EAAE,aA9BA;AA+BLC,iBAAG,EAAE,QA/BA;AAgCLC,iBAAG,EAAE,2BAhCA;AAiCLC,iBAAG,EAAE,wCAjCA;AAkCLC,iBAAG,EAAE,mBAlCA;AAmCLC,iBAAG,EAAE,UAnCA;AAoCLC,iBAAG,EAAE,cApCA;AAqCLC,iBAAG,EAAE,SArCA;AAsCLC,iBAAG,EAAE,SAtCA;AAuCLC,iBAAG,EAAE,SAvCA;AAwCLC,iBAAG,EAAE,QAxCA;AAyCLC,iBAAG,EAAE,YAzCA;AA0CLC,iBAAG,EAAE,cA1CA;AA2CLC,iBAAG,EAAE,0BA3CA;AA4CLC,iBAAG,EAAE,MA5CA;AA6CLC,iBAAG,EAAE,OA7CA;AA8CLC,iBAAG,EAAE,OA9CA;AA+CLC,iBAAG,EAAE,WA/CA;AAgDLC,iBAAG,EAAE,OAhDA;AAiDLC,iBAAG,EAAE,iBAjDA;AAkDLC,iBAAG,EAAE,aAlDA;AAmDLC,iBAAG,EAAE,UAnDA;AAoDLC,iBAAG,EAAE,SApDA;AAqDLC,iBAAG,EAAE,qBArDA;AAsDLC,iBAAG,EAAE,iCAtDA;AAuDLC,iBAAG,EAAE,YAvDA;AAwDLC,iBAAG,EAAE,YAxDA;AAyDLC,iBAAG,EAAE,iBAzDA;AA0DLC,iBAAG,EAAE,SA1DA;AA2DLC,iBAAG,EAAE,MA3DA;AA4DLC,iBAAG,EAAE,QA5DA;AA6DLC,iBAAG,EAAE,iBA7DA;AA8DLC,iBAAG,EAAE,WA9DA;AA+DLC,iBAAG,EAAE,QA/DA;AAgELC,iBAAG,EAAE,UAhEA;AAiELC,iBAAG,EAAE,sBAjEA;AAkELC,iBAAG,EAAE,SAlEA;AAmELC,iBAAG,EAAE,QAnEA;AAoELC,iBAAG,EAAE,UApEA;AAqELC,iBAAG,EAAE,mBArEA;AAsELC,iBAAG,EAAE,SAtEA;AAuELC,iBAAG,EAAE,SAvEA;AAwELC,iBAAG,EAAE,SAxEA;AAyELC,iBAAG,EAAE,gBAzEA;AA0ELC,iBAAG,EAAE,aA1EA;AA2ELC,iBAAG,EAAE,MA3EA;AA4ELC,iBAAG,EAAE,WA5EA;AA6ELC,iBAAG,EAAE,SA7EA;AA8ELC,iBAAG,EAAE,kBA9EA;AA+ELC,iBAAG,EAAE,oBA/EA;AAgFLC,iBAAG,EAAE,8CAhFA;AAiFLC,iBAAG,EAAE,OAjFA;AAkFLC,iBAAG,EAAE,QAlFA;AAmFLC,iBAAG,EAAE,SAnFA;AAoFLC,iBAAG,EAAE,UApFA;AAqFLC,iBAAG,EAAE,OArFA;AAsFLC,iBAAG,EAAE,WAtFA;AAuFLC,iBAAG,EAAE,QAvFA;AAwFLC,iBAAG,EAAE,aAxFA;AAyFLC,iBAAG,EAAE,SAzFA;AA0FLC,iBAAG,EAAE,WA1FA;AA2FLC,iBAAG,EAAE,MA3FA;AA4FLC,iBAAG,EAAE,WA5FA;AA6FLC,iBAAG,EAAE,WA7FA;AA8FLC,iBAAG,EAAE,QA9FA;AA+FLC,iBAAG,EAAE,cA/FA;AAgGLC,iBAAG,EAAE,QAhGA;AAiGLC,iBAAG,EAAE,OAjGA;AAkGLC,iBAAG,EAAE,wBAlGA;AAmGLC,iBAAG,EAAE,uBAnGA;AAoGLC,iBAAG,EAAE,UApGA;AAqGLC,iBAAG,EAAE,SArGA;AAsGLC,iBAAG,EAAE,UAtGA;AAuGLC,iBAAG,EAAE,OAvGA;AAwGLC,iBAAG,EAAE,WAxGA;AAyGLC,iBAAG,EAAE,MAzGA;AA0GLC,iBAAG,EAAE,MA1GA;AA2GLC,iBAAG,EAAE,SA3GA;AA4GLC,iBAAG,EAAE,aA5GA;AA6GLC,iBAAG,EAAE,QA7GA;AA8GLC,iBAAG,EAAE,QA9GA;AA+GLC,iBAAG,EAAE,SA/GA;AAgHLC,iBAAG,EAAE,OAhHA;AAiHLC,iBAAG,EAAE,QAjHA;AAkHLC,iBAAG,EAAE,UAlHA;AAmHLC,iBAAG,EAAE,WAnHA;AAoHLC,iBAAG,EAAE,OApHA;AAqHLC,iBAAG,EAAE,UArHA;AAsHLC,iBAAG,EAAE,iBAtHA;AAuHLC,iBAAG,EAAE,eAvHA;AAwHLC,iBAAG,EAAE,QAxHA;AAyHLC,iBAAG,EAAE,YAzHA;AA0HLC,iBAAG,EAAE,MA1HA;AA2HLC,iBAAG,EAAE,SA3HA;AA4HLC,iBAAG,EAAE,QA5HA;AA6HLC,iBAAG,EAAE,QA7HA;AA8HLC,iBAAG,EAAE,SA9HA;AA+HLC,iBAAG,EAAE,OA/HA;AAgILC,iBAAG,EAAE,eAhIA;AAiILC,iBAAG,EAAE,UAjIA;AAkILC,iBAAG,EAAE,YAlIA;AAmILC,iBAAG,EAAE,WAnIA;AAoILC,iBAAG,EAAE,YApIA;AAqILC,iBAAG,EAAE,QArIA;AAsILC,iBAAG,EAAE,SAtIA;AAuILC,iBAAG,EAAE,UAvIA;AAwILC,iBAAG,EAAE,MAxIA;AAyILC,iBAAG,EAAE,OAzIA;AA0ILC,iBAAG,EAAE,gBA1IA;AA2ILC,iBAAG,EAAE,WA3IA;AA4ILC,iBAAG,EAAE,YA5IA;AA6ILC,iBAAG,EAAE,UA7IA;AA8ILC,iBAAG,EAAE,SA9IA;AA+ILC,iBAAG,EAAE,QA/IA;AAgJLC,iBAAG,EAAE,YAhJA;AAiJLC,iBAAG,EAAE,UAjJA;AAkJLC,iBAAG,EAAE,QAlJA;AAmJLC,iBAAG,EAAE,UAnJA;AAoJLC,iBAAG,EAAE,YApJA;AAqJLC,iBAAG,EAAE,YArJA;AAsJLC,iBAAG,EAAE,WAtJA;AAuJLC,iBAAG,EAAE,YAvJA;AAwJLC,iBAAG,EAAE,UAxJA;AAyJLC,iBAAG,EAAE,SAzJA;AA0JLC,iBAAG,EAAE,OA1JA;AA2JLC,iBAAG,EAAE,OA3JA;AA4JLC,iBAAG,EAAE,cA5JA;AA6JLC,iBAAG,EAAE,iBA7JA;AA8JLC,iBAAG,EAAE,eA9JA;AA+JLC,iBAAG,EAAE,WA/JA;AAgKLC,iBAAG,EAAE,OAhKA;AAiKLC,iBAAG,EAAE,SAjKA;AAkKLC,iBAAG,EAAE,MAlKA;AAmKLC,iBAAG,EAAE,cAnKA;AAoKLC,iBAAG,EAAE,0BApKA;AAqKLC,iBAAG,EAAE,SArKA;AAsKLC,iBAAG,EAAE,MAtKA;AAuKLC,iBAAG,EAAE,UAvKA;AAwKLC,iBAAG,EAAE,QAxKA;AAyKLC,iBAAG,EAAE,WAzKA;AA0KLC,iBAAG,EAAE,QA1KA;AA2KLC,iBAAG,EAAE,oBA3KA;AA4KLC,iBAAG,EAAE,UA5KA;AA6KLC,iBAAG,EAAE,MA7KA;AA8KLC,iBAAG,EAAE,WA9KA;AA+KLC,iBAAG,EAAE,UA/KA;AAgLLC,iBAAG,EAAE,SAhLA;AAiLLC,iBAAG,EAAE,UAjLA;AAkLLC,iBAAG,EAAE,aAlLA;AAmLLC,iBAAG,EAAE,OAnLA;AAoLLC,iBAAG,EAAE,SApLA;AAqLLC,iBAAG,EAAE,SArLA;AAsLLC,iBAAG,EAAE,OAtLA;AAuLLC,iBAAG,EAAE,QAvLA;AAwLLC,iBAAG,EAAE,eAxLA;AAyLLC,iBAAG,EAAE,aAzLA;AA0LLC,iBAAG,EAAE,wBA1LA;AA2LLC,iBAAG,EAAE,aA3LA;AA4LLC,iBAAG,EAAE,6BA5LA;AA6LLC,iBAAG,EAAE,+BA7LA;AA8LLC,iBAAG,EAAE,sBA9LA;AA+LLC,iBAAG,EAAE,8BA/LA;AAgMLC,iBAAG,EAAE,OAhMA;AAiMLC,iBAAG,EAAE,YAjMA;AAkMLC,iBAAG,EAAE,uBAlMA;AAmMLC,iBAAG,EAAE,gBAnMA;AAoMLC,iBAAG,EAAE,SApMA;AAqMLC,iBAAG,EAAE,QArMA;AAsMLC,iBAAG,EAAE,YAtMA;AAuMLC,iBAAG,EAAE,cAvMA;AAwMLC,iBAAG,EAAE,UAxMA;AAyMLC,iBAAG,EAAE,YAzMA;AA0MLC,iBAAG,EAAE,WA1MA;AA2MLC,iBAAG,EAAE,eA3MA;AA4MLC,iBAAG,EAAE,SA5MA;AA6MLC,iBAAG,EAAE,WA7MA;AA8MLC,iBAAG,EAAE,2CA9MA;AA+MLC,iBAAG,EAAE,eA/MA;AAgNLC,iBAAG,EAAE,SAhNA;AAiNLC,iBAAG,EAAE,WAjNA;AAkNLC,iBAAG,EAAE,OAlNA;AAmNLC,iBAAG,EAAE,SAnNA;AAoNLC,iBAAG,EAAE,sBApNA;AAqNLC,iBAAG,EAAE,UArNA;AAsNLC,iBAAG,EAAE,QAtNA;AAuNLC,iBAAG,EAAE,OAvNA;AAwNLC,iBAAG,EAAE,OAxNA;AAyNLC,iBAAG,EAAE,QAzNA;AA0NLC,iBAAG,EAAE,YA1NA;AA2NLC,iBAAG,EAAE,UA3NA;AA4NLC,iBAAG,EAAE,WA5NA;AA6NLC,iBAAG,EAAE,gBA7NA;AA8NLC,iBAAG,EAAE,MA9NA;AA+NLC,iBAAG,EAAE,SA/NA;AAgOLC,iBAAG,EAAE,OAhOA;AAiOLC,iBAAG,EAAE,mBAjOA;AAkOLC,iBAAG,EAAE,OAlOA;AAmOLC,iBAAG,EAAE,SAnOA;AAoOLC,iBAAG,EAAE,cApOA;AAqOLC,iBAAG,EAAE,uBArOA;AAsOLC,iBAAG,EAAE,QAtOA;AAuOLC,iBAAG,EAAE,QAvOA;AAwOLC,iBAAG,EAAE,SAxOA;AAyOLC,iBAAG,EAAE,wBAzOA;AA0OLC,iBAAG,EAAE,aA1OA;AA2OLC,iBAAG,EAAE,gBA3OA;AA4OLC,iBAAG,EAAE,8CA5OA;AA6OLC,iBAAG,EAAE,SA7OA;AA8OLC,iBAAG,EAAE,YA9OA;AA+OLC,iBAAG,EAAE,SA/OA;AAgPLC,iBAAG,EAAE,WAhPA;AAiPLC,iBAAG,EAAE,SAjPA;AAkPLC,iBAAG,EAAE,sCAlPA;AAmPLC,iBAAG,EAAE,iBAnPA;AAoPLC,iBAAG,EAAE,mBApPA;AAqPLC,iBAAG,EAAE,OArPA;AAsPLC,iBAAG,EAAE,QAtPA;AAuPLC,iBAAG,EAAE;AAvPA;AAHL,WADN;AA8PFC,2BAAiB,EAAE;AACfC,iBAAK,EAAE,8DADQ;AAEfC,qBAAS,EAAE,4BAFI;AAGfC,mBAAO,EAAE,8BAHM;AAIfC,kBAAM,EAAE;AACJC,oBAAM,EAAE;AADJ,aAJO;AAOfC,+BAAmB,EAAE;AAPN,WA9PjB;AAuQFC,iCAAuB,EAAE;AACrBN,iBAAK,EAAE,8DADc;AAErBC,qBAAS,EAAE,4BAFU;AAGrBC,mBAAO,EAAE,8BAHY;AAIrBC,kBAAM,EAAE;AACJI,sBAAQ,EAAE;AADN,aAJa;AAOrBF,+BAAmB,EAAE,iDAPA;AAQrBG,8BAAkB,EAAE,kDARC;AASrBC,2BAAe,EAAE;AATI,WAvQvB;AAkRFC,2BAAiB,EAAE;AACfV,iBAAK,EAAE,+BADQ;AAEfW,sBAAU,EAAE,sBAFG;AAGfC,wBAAY,EAAE,cAHC;AAIfT,kBAAM,EAAE;AACJU,oBAAM,EAAE,yBADJ;AAEJC,oBAAM,EAAE;AAFJ,aAJO;AAQfb,qBAAS,EAAE,4BARI;AASfC,mBAAO,EAAE,8BATM;AAUfa,yBAAa,EAAE,iDAVA;AAWfC,2BAAe,EAAE;AAXF,WAlRjB;AA+RFC,8BAAoB,EAAE;AAClBjB,iBAAK,EAAE,gBADW;AAElBkB,oBAAQ,EAAE,+BAFQ;AAGlBC,+BAAmB,EAAE,qCAHH;AAIlBC,+BAAmB,EAAE,sFAJH;AAKlBC,cAAE,EAAE,KALc;AAMlBC,qBAAS,EAAE,SANO;AAOlBC,mBAAO,EAAE,UAPS;AAQlBC,kBAAM,EAAE,QARU;AASlBC,qBAAS,EAAE,4BATO;AAUlBC,sBAAU,EAAE,6BAVM;AAWlBC,8BAAkB,EAAE,4BAXF;AAYlBC,yBAAa,EAAE,kBAZG;AAalBC,0BAAc,EAAE,2BAbE;AAclBC,kBAAM,EAAE,SAdU;AAelBC,kBAAM,EAAE,WAfU;AAgBlBC,yBAAa,EAAE,qBAhBG;AAiBlB7B,kBAAM,EAAE;AACJU,oBAAM,EAAE,UADJ;AAEJC,oBAAM,EAAE;AAFJ,aAjBU;AAqBlBmB,uBAAW,EAAE,4BArBK;AAsBlB/B,mBAAO,EAAE;AAtBS;AA/RpB;AAFkB,OAArB;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoDaoC,Y;;;;;yBAAAA,Y;AAAY,O;;;cAAZA;;;mBAFA,E;AAAE,kBAxBJ,CACP;AACA,oEAFO,EAGP,4DAHO,EAIP,qEAJO,EAMP;AACA,kFAPO,EAQP,wEARO,EASP,oEATO,EAUP,oEAVO,EAWP,oEAXO,EAYP,uEAZO,EAaP,qEAbO,EAeP;AACA,6EAhBO,CAwBI;;;;6HAEFA,Y,EAAY;AAAA,yBA/BrB,oFA+BqB,EA9BrB,mFA8BqB,EA7BrB,oFA6BqB,EA5BrB,uFA4BqB;AA5BL,oBAGhB;AACA,sEAJgB,EAKhB,4DALgB,EAMhB,qEANgB,EAQhB;AACA,oFATgB,EAUhB,wEAVgB,EAWhB,oEAXgB,EAYhB,oEAZgB,EAahB,oEAbgB,EAchB,uEAdgB,EAehB,qEAfgB,EAiBhB;AACA,+EAlBgB,CA4BK;AAVL,oBAGhB,oFAHgB,EAIhB,mFAJgB,EAKhB,oFALgB,EAMhB,uFANgB;AAUK,S;AAJL,O;;;;;;;;;;;;;;;;;ACjDpB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,Y;AAKX,8BACU9T,MADV,EACiC;AAAA;;AAAvB,eAAAA,MAAA,GAAAA,MAAA;AAHF,eAAAC,YAAA,GAA6B,IAAI,4CAAJ,EAA7B;AAKP,S,CAED;AACA;AACA;;;;;iBAEA,oBAAQ;AAAA;;AACN;AACA,iBAAKD,MAAL,CAAYY,IAAZ,CACE,2DAAO,oFAAP,CADF,EAEE,iEAAU,KAAKX,YAAf,CAFF,EAGEY,SAHF,CAGY,UAACC,YAAD,EAA0B;AACpC;AACAiT,sBAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,MAAI,CAACpT,YAApC,EAFoC,CAIpC;;AACA,oBAAI,CAACA,YAAL,GAAoBA,YAApB;AACAiT,sBAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA4B,MAAI,CAACrT,YAAjC;AACD,aAVD,EAFM,CAcN;;;AACA,iBAAKd,MAAL,CAAYoB,QAAZ,CAAqB,mFAA8B;AAAEN,0BAAY,EAAE,yEAAYU;AAA5B,aAA9B,CAArB;AACD;;;iBAED,uBAAW;AACT,iBAAKvB,YAAL,CAAkBgB,IAAlB;;AACA,iBAAKhB,YAAL,CAAkBiB,QAAlB;AACD;;;;;;;yBAnCU4S,Y,EAAY,kH;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,0I;AAAA;AAAA;ACbzB;;AACE;;AACA;;AACF;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGY;;AAEI;;AACJ;;;;;;;;AAHuD,kIAA8B,UAA9B,EAA8B,yEAA9B;;AAEnD;;AAAA;;;;UDOHM,e;AAOX,iCACUpU,MADV,EACiC;AAAA;;AAAvB,eAAAA,MAAA,GAAAA,MAAA;AANH,eAAAqU,UAAA,GAAgD,EAAhD;AAGC,eAAApU,YAAA,GAA6B,IAAI,4CAAJ,EAA7B;AAKN,eAAKoU,UAAL,CAAgBC,IAAhB,CAAqB;AAAEC,gBAAI,EAAE,mBAAR;AAA6BC,gBAAI,EAAE;AAAnC,WAArB;AACA,eAAKH,UAAL,CAAgBC,IAAhB,CAAqB;AAAEC,gBAAI,EAAE,yBAAR;AAAmCC,gBAAI,EAAE;AAAzC,WAArB;AACA,eAAKH,UAAL,CAAgBC,IAAhB,CAAqB;AAAEC,gBAAI,EAAE,mBAAR;AAA6BC,gBAAI,EAAE;AAAnC,WAArB,EAJ+B,CAM/B;;AACA,cAAI,CAAC,yEAAYjT,UAAjB,EAA6B;AAC3B,iBAAK8S,UAAL,CAAgBC,IAAhB,CAAqB;AAAEC,kBAAI,EAAE,4BAAR;AAAsCC,kBAAI,EAAE;AAA5C,aAArB;AACD;AACF,S,CAED;AACA;AACA;;;;;iBAEA,oBAAQ;AAAA;;AACN;AACA,iBAAKxU,MAAL,CAAYY,IAAZ,CACE,2DAAO,2EAAP,CADF,EAEE,iEAAU,KAAKX,YAAf,CAFF,EAGEY,SAHF,CAGY,UAACa,IAAD;AAAA,qBAAgB,MAAI,CAAC+S,YAAL,GAAoB/S,IAAI,CAACgT,IAAzC;AAAA,aAHZ;AAID;;;iBAED,uBAAW;AACT,iBAAKzU,YAAL,CAAkBgB,IAAlB;;AACA,iBAAKhB,YAAL,CAAkBiB,QAAlB;AACD;;;iBAED,uBAAcyT,KAAd,EAAwB;;;AACtB,kBAAAZ,QAAQ,CAACa,aAAT,CAAuB,gBAAvB,OAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAEC,QAAF,CAAW,CAAX,EAAa,CAAb,CAAxC;AACD;;;;;;;yBAvCUT,e,EAAe,kH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,+V;AAAA;AAAA;ACd5B;;AAEI;;AAEI;;AACI;;AAIJ;;AAEJ;;AAEA;;AAEI;;AAAe;AAAA,qBAAY,IAAAU,aAAA,QAAZ;AAAiC,aAAjC;;AAAmC;;AAEtD;;AACJ;;;;AAd4C;;AAAA;;AACO;;AAAA;;;;;;;;;;;;;;;;;;;;;ACHnD;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMrT,MAAM,GAAS;AACxBnB,YAAI,EAAE,IADkB;AAExBoB,YAAI,EAAE;AACFC,gBAAM,EAAE;AACJC,uBAAW,EAAE,8BADT;AAEJC,6BAAiB,EAAE,kBAFf;AAGJC,mBAAO,EAAE;AACLC,iBAAG,EAAE,aADA;AAELC,iBAAG,EAAE,eAFA;AAGLC,iBAAG,EAAE,SAHA;AAILC,iBAAG,EAAE,SAJA;AAKLC,iBAAG,EAAE,gBALA;AAMLC,iBAAG,EAAE,SANA;AAOLC,iBAAG,EAAE,QAPA;AAQLC,iBAAG,EAAE,UARA;AASLC,iBAAG,EAAE,YATA;AAULC,iBAAG,EAAE,qBAVA;AAWLC,iBAAG,EAAE,WAXA;AAYLC,iBAAG,EAAE,SAZA;AAaLC,iBAAG,EAAE,OAbA;AAcLC,iBAAG,EAAE,WAdA;AAeLC,iBAAG,EAAE,SAfA;AAgBLC,iBAAG,EAAE,YAhBA;AAiBLC,iBAAG,EAAE,SAjBA;AAkBLC,iBAAG,EAAE,SAlBA;AAmBLC,iBAAG,EAAE,YAnBA;AAoBLC,iBAAG,EAAE,UApBA;AAqBLC,iBAAG,EAAE,SArBA;AAsBLC,iBAAG,EAAE,SAtBA;AAuBLC,iBAAG,EAAE,QAvBA;AAwBLC,iBAAG,EAAE,OAxBA;AAyBLC,iBAAG,EAAE,SAzBA;AA0BLC,iBAAG,EAAE,QA1BA;AA2BLC,iBAAG,EAAE,SA3BA;AA4BLC,iBAAG,EAAE,wBA5BA;AA6BLC,iBAAG,EAAE,UA7BA;AA8BLC,iBAAG,EAAE,eA9BA;AA+BLC,iBAAG,EAAE,QA/BA;AAgCLC,iBAAG,EAAE,wBAhCA;AAiCLC,iBAAG,EAAE,gCAjCA;AAkCLC,iBAAG,EAAE,mBAlCA;AAmCLC,iBAAG,EAAE,UAnCA;AAoCLC,iBAAG,EAAE,cApCA;AAqCLC,iBAAG,EAAE,SArCA;AAsCLC,iBAAG,EAAE,UAtCA;AAuCLC,iBAAG,EAAE,UAvCA;AAwCLC,iBAAG,EAAE,QAxCA;AAyCLC,iBAAG,EAAE,YAzCA;AA0CLC,iBAAG,EAAE,gBA1CA;AA2CLC,iBAAG,EAAE,0BA3CA;AA4CLC,iBAAG,EAAE,MA5CA;AA6CLC,iBAAG,EAAE,OA7CA;AA8CLC,iBAAG,EAAE,OA9CA;AA+CLC,iBAAG,EAAE,WA/CA;AAgDLC,iBAAG,EAAE,OAhDA;AAiDLC,iBAAG,EAAE,kBAjDA;AAkDLC,iBAAG,EAAE,eAlDA;AAmDLC,iBAAG,EAAE,UAnDA;AAoDLC,iBAAG,EAAE,SApDA;AAqDLC,iBAAG,EAAE,uBArDA;AAsDLC,iBAAG,EAAE,kCAtDA;AAuDLC,iBAAG,EAAE,cAvDA;AAwDLC,iBAAG,EAAE,YAxDA;AAyDLC,iBAAG,EAAE,aAzDA;AA0DLC,iBAAG,EAAE,SA1DA;AA2DLC,iBAAG,EAAE,MA3DA;AA4DLC,iBAAG,EAAE,QA5DA;AA6DLC,iBAAG,EAAE,gBA7DA;AA8DLC,iBAAG,EAAE,SA9DA;AA+DLC,iBAAG,EAAE,UA/DA;AAgELC,iBAAG,EAAE,UAhEA;AAiELC,iBAAG,EAAE,oBAjEA;AAkELC,iBAAG,EAAE,SAlEA;AAmELC,iBAAG,EAAE,OAnEA;AAoELC,iBAAG,EAAE,UApEA;AAqELC,iBAAG,EAAE,mBArEA;AAsELC,iBAAG,EAAE,SAtEA;AAuELC,iBAAG,EAAE,SAvEA;AAwELC,iBAAG,EAAE,UAxEA;AAyELC,iBAAG,EAAE,kBAzEA;AA0ELC,iBAAG,EAAE,eA1EA;AA2ELC,iBAAG,EAAE,MA3EA;AA4ELC,iBAAG,EAAE,SA5EA;AA6ELC,iBAAG,EAAE,QA7EA;AA8ELC,iBAAG,EAAE,eA9EA;AA+ELC,iBAAG,EAAE,kBA/EA;AAgFLC,iBAAG,EAAE,qCAhFA;AAiFLC,iBAAG,EAAE,OAjFA;AAkFLC,iBAAG,EAAE,QAlFA;AAmFLC,iBAAG,EAAE,SAnFA;AAoFLC,iBAAG,EAAE,SApFA;AAqFLC,iBAAG,EAAE,OArFA;AAsFLC,iBAAG,EAAE,WAtFA;AAuFLC,iBAAG,EAAE,QAvFA;AAwFLC,iBAAG,EAAE,WAxFA;AAyFLC,iBAAG,EAAE,SAzFA;AA0FLC,iBAAG,EAAE,YA1FA;AA2FLC,iBAAG,EAAE,MA3FA;AA4FLC,iBAAG,EAAE,WA5FA;AA6FLC,iBAAG,EAAE,UA7FA;AA8FLC,iBAAG,EAAE,QA9FA;AA+FLC,iBAAG,EAAE,eA/FA;AAgGLC,iBAAG,EAAE,QAhGA;AAiGLC,iBAAG,EAAE,OAjGA;AAkGLC,iBAAG,EAAE,6BAlGA;AAmGLC,iBAAG,EAAE,oBAnGA;AAoGLC,iBAAG,EAAE,UApGA;AAqGLC,iBAAG,EAAE,SArGA;AAsGLC,iBAAG,EAAE,SAtGA;AAuGLC,iBAAG,EAAE,OAvGA;AAwGLC,iBAAG,EAAE,WAxGA;AAyGLC,iBAAG,EAAE,MAzGA;AA0GLC,iBAAG,EAAE,MA1GA;AA2GLC,iBAAG,EAAE,SA3GA;AA4GLC,iBAAG,EAAE,aA5GA;AA6GLC,iBAAG,EAAE,QA7GA;AA8GLC,iBAAG,EAAE,OA9GA;AA+GLC,iBAAG,EAAE,SA/GA;AAgHLC,iBAAG,EAAE,OAhHA;AAiHLC,iBAAG,EAAE,QAjHA;AAkHLC,iBAAG,EAAE,QAlHA;AAmHLC,iBAAG,EAAE,YAnHA;AAoHLC,iBAAG,EAAE,OApHA;AAqHLC,iBAAG,EAAE,UArHA;AAsHLC,iBAAG,EAAE,aAtHA;AAuHLC,iBAAG,EAAE,aAvHA;AAwHLC,iBAAG,EAAE,QAxHA;AAyHLC,iBAAG,EAAE,YAzHA;AA0HLC,iBAAG,EAAE,MA1HA;AA2HLC,iBAAG,EAAE,QA3HA;AA4HLC,iBAAG,EAAE,SA5HA;AA6HLC,iBAAG,EAAE,SA7HA;AA8HLC,iBAAG,EAAE,SA9HA;AA+HLC,iBAAG,EAAE,OA/HA;AAgILC,iBAAG,EAAE,eAhIA;AAiILC,iBAAG,EAAE,WAjIA;AAkILC,iBAAG,EAAE,YAlIA;AAmILC,iBAAG,EAAE,WAnIA;AAoILC,iBAAG,EAAE,YApIA;AAqILC,iBAAG,EAAE,QArIA;AAsILC,iBAAG,EAAE,UAtIA;AAuILC,iBAAG,EAAE,UAvIA;AAwILC,iBAAG,EAAE,MAxIA;AAyILC,iBAAG,EAAE,OAzIA;AA0ILC,iBAAG,EAAE,kBA1IA;AA2ILC,iBAAG,EAAE,YA3IA;AA4ILC,iBAAG,EAAE,YA5IA;AA6ILC,iBAAG,EAAE,WA7IA;AA8ILC,iBAAG,EAAE,SA9IA;AA+ILC,iBAAG,EAAE,QA/IA;AAgJLC,iBAAG,EAAE,YAhJA;AAiJLC,iBAAG,EAAE,SAjJA;AAkJLC,iBAAG,EAAE,QAlJA;AAmJLC,iBAAG,EAAE,UAnJA;AAoJLC,iBAAG,EAAE,YApJA;AAqJLC,iBAAG,EAAE,YArJA;AAsJLC,iBAAG,EAAE,SAtJA;AAuJLC,iBAAG,EAAE,YAvJA;AAwJLC,iBAAG,EAAE,SAxJA;AAyJLC,iBAAG,EAAE,SAzJA;AA0JLC,iBAAG,EAAE,OA1JA;AA2JLC,iBAAG,EAAE,OA3JA;AA4JLC,iBAAG,EAAE,aA5JA;AA6JLC,iBAAG,EAAE,eA7JA;AA8JLC,iBAAG,EAAE,aA9JA;AA+JLC,iBAAG,EAAE,WA/JA;AAgKLC,iBAAG,EAAE,OAhKA;AAiKLC,iBAAG,EAAE,SAjKA;AAkKLC,iBAAG,EAAE,MAlKA;AAmKLC,iBAAG,EAAE,gBAnKA;AAoKLC,iBAAG,EAAE,0BApKA;AAqKLC,iBAAG,EAAE,QArKA;AAsKLC,iBAAG,EAAE,MAtKA;AAuKLC,iBAAG,EAAE,UAvKA;AAwKLC,iBAAG,EAAE,OAxKA;AAyKLC,iBAAG,EAAE,WAzKA;AA0KLC,iBAAG,EAAE,QA1KA;AA2KLC,iBAAG,EAAE,kBA3KA;AA4KLC,iBAAG,EAAE,UA5KA;AA6KLC,iBAAG,EAAE,MA7KA;AA8KLC,iBAAG,EAAE,aA9KA;AA+KLC,iBAAG,EAAE,UA/KA;AAgLLC,iBAAG,EAAE,QAhLA;AAiLLC,iBAAG,EAAE,UAjLA;AAkLLC,iBAAG,EAAE,aAlLA;AAmLLC,iBAAG,EAAE,OAnLA;AAoLLC,iBAAG,EAAE,SApLA;AAqLLC,iBAAG,EAAE,SArLA;AAsLLC,iBAAG,EAAE,QAtLA;AAuLLC,iBAAG,EAAE,QAvLA;AAwLLC,iBAAG,EAAE,kBAxLA;AAyLLC,iBAAG,EAAE,cAzLA;AA0LLC,iBAAG,EAAE,uBA1LA;AA2LLC,iBAAG,EAAE,aA3LA;AA4LLC,iBAAG,EAAE,4BA5LA;AA6LLC,iBAAG,EAAE,2BA7LA;AA8LLC,iBAAG,EAAE,2BA9LA;AA+LLC,iBAAG,EAAE,kCA/LA;AAgMLC,iBAAG,EAAE,OAhMA;AAiMLC,iBAAG,EAAE,YAjMA;AAkMLC,iBAAG,EAAE,uBAlMA;AAmMLC,iBAAG,EAAE,cAnMA;AAoMLC,iBAAG,EAAE,SApMA;AAqMLC,iBAAG,EAAE,QArMA;AAsMLC,iBAAG,EAAE,YAtMA;AAuMLC,iBAAG,EAAE,cAvMA;AAwMLC,iBAAG,EAAE,WAxMA;AAyMLC,iBAAG,EAAE,UAzMA;AA0MLC,iBAAG,EAAE,UA1MA;AA2MLC,iBAAG,EAAE,iBA3MA;AA4MLC,iBAAG,EAAE,SA5MA;AA6MLC,iBAAG,EAAE,cA7MA;AA8MLC,iBAAG,EAAE,8CA9MA;AA+MLC,iBAAG,EAAE,aA/MA;AAgNLC,iBAAG,EAAE,OAhNA;AAiNLC,iBAAG,EAAE,WAjNA;AAkNLC,iBAAG,EAAE,OAlNA;AAmNLC,iBAAG,EAAE,UAnNA;AAoNLC,iBAAG,EAAE,wBApNA;AAqNLC,iBAAG,EAAE,UArNA;AAsNLC,iBAAG,EAAE,QAtNA;AAuNLC,iBAAG,EAAE,aAvNA;AAwNLC,iBAAG,EAAE,OAxNA;AAyNLC,iBAAG,EAAE,QAzNA;AA0NLC,iBAAG,EAAE,YA1NA;AA2NLC,iBAAG,EAAE,UA3NA;AA4NLC,iBAAG,EAAE,UA5NA;AA6NLC,iBAAG,EAAE,aA7NA;AA8NLC,iBAAG,EAAE,MA9NA;AA+NLC,iBAAG,EAAE,SA/NA;AAgOLC,iBAAG,EAAE,OAhOA;AAiOLC,iBAAG,EAAE,qBAjOA;AAkOLC,iBAAG,EAAE,SAlOA;AAmOLC,iBAAG,EAAE,QAnOA;AAoOLC,iBAAG,EAAE,cApOA;AAqOLC,iBAAG,EAAE,0BArOA;AAsOLC,iBAAG,EAAE,QAtOA;AAuOLC,iBAAG,EAAE,QAvOA;AAwOLC,iBAAG,EAAE,SAxOA;AAyOLC,iBAAG,EAAE,sBAzOA;AA0OLC,iBAAG,EAAE,gBA1OA;AA2OLC,iBAAG,EAAE,eA3OA;AA4OLC,iBAAG,EAAE,6CA5OA;AA6OLC,iBAAG,EAAE,SA7OA;AA8OLC,iBAAG,EAAE,YA9OA;AA+OLC,iBAAG,EAAE,SA/OA;AAgPLC,iBAAG,EAAE,WAhPA;AAiPLC,iBAAG,EAAE,SAjPA;AAkPLC,iBAAG,EAAE,mBAlPA;AAmPLC,iBAAG,EAAE,mBAnPA;AAoPLC,iBAAG,EAAE,gBApPA;AAqPLC,iBAAG,EAAE,OArPA;AAsPLC,iBAAG,EAAE,QAtPA;AAuPLC,iBAAG,EAAE;AAvPA;AAHL,WADN;AA8PFC,2BAAiB,EAAE;AACfC,iBAAK,EAAE,iDADQ;AAEfC,qBAAS,EAAE,oBAFI;AAGfC,mBAAO,EAAE,+BAHM;AAIfC,kBAAM,EAAE;AACJC,oBAAM,EAAE;AADJ,aAJO;AAOfC,+BAAmB,EAAE;AAPN,WA9PjB;AAuQFC,iCAAuB,EAAE;AACrBN,iBAAK,EAAE,iDADc;AAErBC,qBAAS,EAAE,oBAFU;AAGrBC,mBAAO,EAAE,+BAHY;AAIrBC,kBAAM,EAAE;AACJI,sBAAQ,EAAE;AADN,aAJa;AAOrBF,+BAAmB,EAAE,oCAPA;AAQrBG,8BAAkB,EAAE,kDARC;AASrBC,2BAAe,EAAE;AATI,WAvQvB;AAkRFC,2BAAiB,EAAE;AACfV,iBAAK,EAAE,uBADQ;AAEfW,sBAAU,EAAE,mBAFG;AAGfC,wBAAY,EAAE,cAHC;AAIfT,kBAAM,EAAE;AACJU,oBAAM,EAAE,2BADJ;AAEJC,oBAAM,EAAE;AAFJ,aAJO;AAQfb,qBAAS,EAAE,oBARI;AASfC,mBAAO,EAAE,+BATM;AAUfa,yBAAa,EAAE,uDAVA;AAWfC,2BAAe,EAAE;AAXF,WAlRjB;AA+RFC,8BAAoB,EAAE;AAClBjB,iBAAK,EAAE,eADW;AAElBkB,oBAAQ,EAAE,uBAFQ;AAGlBC,+BAAmB,EAAE,2CAHH;AAIlBC,+BAAmB,EAAE,0EAJH;AAKlBC,cAAE,EAAE,MALc;AAMlBC,qBAAS,EAAE,YANO;AAOlBC,mBAAO,EAAE,UAPS;AAQlBC,kBAAM,EAAE,SARU;AASlBC,qBAAS,EAAE,6BATO;AAUlBC,sBAAU,EAAE,8BAVM;AAWlBC,8BAAkB,EAAE,yBAXF;AAYlBC,yBAAa,EAAE,eAZG;AAalBC,0BAAc,EAAE,gBAbE;AAclBC,kBAAM,EAAE,SAdU;AAelBC,kBAAM,EAAE,UAfU;AAgBlBC,yBAAa,EAAE,eAhBG;AAiBlB7B,kBAAM,EAAE;AACJU,oBAAM,EAAE,QADJ;AAEJC,oBAAM,EAAE;AAFJ,aAjBU;AAqBlBmB,uBAAW,EAAE,uBArBK;AAsBlB/B,mBAAO,EAAE;AAtBS;AA/RpB;AAFkB,OAArB;;;;;;;;;;;;;;;;ACDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBA,UAAMsD,YAAY,GAAuB,CAAC,yEAAYxT,UAAb,GAA0B,CAAC,6DAAD,CAA1B,GAA0C,EAAnF;;UAqCayT,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAFR,2DAEQ;;;mBAhBT,CACT;AACEC,iBAAO,EAAE,iEADX;AAEEC,kBAAQ,EAAE;AACRC,6BAAiB,EAAE;AAAA,qBAAM;AAAA;AAAA;AAAA;AAAA,yBAAN;AAAA;AADX;AAFZ,SADS,C;AAaV,kBA7BQ,CACP;AACA,+EAFO,EAGP,4FAHO,EAKP;AACA,6EANO,EAQP;AACA,iFATO,EAUP,oEAVO,EAWP,+DAXO,EAYP,wDAAYC,OAAZ,CAAoB,sDAApB,EAA8B;AAAEL,sBAAY,EAAZA;AAAF,SAA9B,CAZO,EAaP,0EAAoBM,UAApB,CAA+B;AAAEC,gBAAM,EAAE,EAAV;AAAcC,iBAAO,EAAE,yEAAYhU;AAAnC,SAA/B,CAbO,EAcP,gFAA4B6T,OAA5B,EAdO,CA6BR;;;;6HAGUJ,S,EAAS;AAAA,yBAlClB,2DAkCkB;AAlCN,oBAGZ;AACA,iFAJY,EAKZ,4FALY,EAOZ;AACA,+EARY,EAUZ;AACA,mFAXY,EAYZ,oEAZY,EAaZ,+DAbY,EAaG,2DAbH,EAaG,yEAbH,EAaG,+EAbH;AAkCM,S;AArBH,O;;;;;;;;;;;;;;;;;AC/BnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMY;;AAAsD;;AAAI;;;;;;AAC1D;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsD;;AAAW;;;;;;AACjE;;;;;;AAAuC;;;;;;AAG3C;;;;;;AACA;;;;UDRKQ,gB;AASX,kCACUC,MADV,EACmC;AAAA;;AAAzB,eAAAA,MAAA,GAAAA,MAAA;AAER,eAAKC,uBAAL,GAA+B,CAAC,MAAD,EAAS,aAAT,CAA/B;AACA,eAAKC,iBAAL,GAAyB,IAAI,0EAAJ,CAAoC,EAApC,CAAzB;AACD,S,CAED;AACA;AACA;;;;;iBAEA,qBAAYC,OAAZ,EAAkC;AAChC,gBAAIA,OAAO,CAACC,OAAR,IAAmBD,OAAO,CAACC,OAAR,CAAgBC,YAAvC,EAAqD;AACnD,mBAAKH,iBAAL,CAAuBjU,IAAvB,GAA8B,KAAKmU,OAAnC;AACD;AACF;;;iBAED,2BAAe;AACb,iBAAKF,iBAAL,CAAuBI,IAAvB,GAA8B,KAAKC,UAAnC;;AAEA,iBAAKP,MAAL,CAAYQ,aAAZ;AACD;;;;;;;yBA9BUT,gB,EAAgB,gI;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACV7B;;AAEI;;AAAI;;AAAO;;AAEX;;AAGI;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACA;;AAEJ;;AAEJ;;;;AAlBqB;;AAAA;;AAaO;;AAAA;;AACa;;AAAA;;;;;;;;;;;;;;;;;;;;;ACjBzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAMU,QAAQ,GAA+B;AAChDC,cAAM,EAAE,oEADwC;AAEhDC,cAAM,EAAE;AAFwC,OAA7C;;;;;;;;;;;;;;;;ACVP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAAA;AASA;;;AACO,UAAMC,OAAO,GAAW,CAAE,0CAAF,EAAW,0CAAX,EAAmB,0CAAnB,EAA4B,0CAA5B,CAAxB;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAM5U,MAAM,GAAS;AACxBnB,YAAI,EAAE,IADkB;AAExBoB,YAAI,EAAE;AACFC,gBAAM,EAAE;AACJC,uBAAW,EAAE,2BADT;AAEJC,6BAAiB,EAAE,kBAFf;AAGJC,mBAAO,EAAE;AACLC,iBAAG,EAAE,aADA;AAELC,iBAAG,EAAE,YAFA;AAGLC,iBAAG,EAAE,SAHA;AAILC,iBAAG,EAAE,SAJA;AAKLC,iBAAG,EAAE,mBALA;AAMLC,iBAAG,EAAE,SANA;AAOLC,iBAAG,EAAE,QAPA;AAQLC,iBAAG,EAAE,UARA;AASLC,iBAAG,EAAE,aATA;AAULC,iBAAG,EAAE,oBAVA;AAWLC,iBAAG,EAAE,WAXA;AAYLC,iBAAG,EAAE,SAZA;AAaLC,iBAAG,EAAE,OAbA;AAcLC,iBAAG,EAAE,WAdA;AAeLC,iBAAG,EAAE,UAfA;AAgBLC,iBAAG,EAAE,aAhBA;AAiBLC,iBAAG,EAAE,SAjBA;AAkBLC,iBAAG,EAAE,SAlBA;AAmBLC,iBAAG,EAAE,YAnBA;AAoBLC,iBAAG,EAAE,SApBA;AAqBLC,iBAAG,EAAE,aArBA;AAsBLC,iBAAG,EAAE,UAtBA;AAuBLC,iBAAG,EAAE,QAvBA;AAwBLC,iBAAG,EAAE,OAxBA;AAyBLC,iBAAG,EAAE,UAzBA;AA0BLC,iBAAG,EAAE,SA1BA;AA2BLC,iBAAG,EAAE,SA3BA;AA4BLC,iBAAG,EAAE,oBA5BA;AA6BLC,iBAAG,EAAE,UA7BA;AA8BLC,iBAAG,EAAE,YA9BA;AA+BLC,iBAAG,EAAE,QA/BA;AAgCLC,iBAAG,EAAE,wBAhCA;AAiCLC,iBAAG,EAAE,0CAjCA;AAkCLC,iBAAG,EAAE,mBAlCA;AAmCLC,iBAAG,EAAE,UAnCA;AAoCLC,iBAAG,EAAE,cApCA;AAqCLC,iBAAG,EAAE,SArCA;AAsCLC,iBAAG,EAAE,UAtCA;AAuCLC,iBAAG,EAAE,UAvCA;AAwCLC,iBAAG,EAAE,QAxCA;AAyCLC,iBAAG,EAAE,UAzCA;AA0CLC,iBAAG,EAAE,aA1CA;AA2CLC,iBAAG,EAAE,2BA3CA;AA4CLC,iBAAG,EAAE,OA5CA;AA6CLC,iBAAG,EAAE,OA7CA;AA8CLC,iBAAG,EAAE,OA9CA;AA+CLC,iBAAG,EAAE,WA/CA;AAgDLC,iBAAG,EAAE,OAhDA;AAiDLC,iBAAG,EAAE,eAjDA;AAkDLC,iBAAG,EAAE,YAlDA;AAmDLC,iBAAG,EAAE,UAnDA;AAoDLC,iBAAG,EAAE,SApDA;AAqDLC,iBAAG,EAAE,qBArDA;AAsDLC,iBAAG,EAAE,kCAtDA;AAuDLC,iBAAG,EAAE,WAvDA;AAwDLC,iBAAG,EAAE,YAxDA;AAyDLC,iBAAG,EAAE,eAzDA;AA0DLC,iBAAG,EAAE,SA1DA;AA2DLC,iBAAG,EAAE,MA3DA;AA4DLC,iBAAG,EAAE,QA5DA;AA6DLC,iBAAG,EAAE,oBA7DA;AA8DLC,iBAAG,EAAE,UA9DA;AA+DLC,iBAAG,EAAE,UA/DA;AAgELC,iBAAG,EAAE,WAhEA;AAiELC,iBAAG,EAAE,wBAjEA;AAkELC,iBAAG,EAAE,UAlEA;AAmELC,iBAAG,EAAE,QAnEA;AAoELC,iBAAG,EAAE,UApEA;AAqELC,iBAAG,EAAE,oBArEA;AAsELC,iBAAG,EAAE,UAtEA;AAuELC,iBAAG,EAAE,SAvEA;AAwELC,iBAAG,EAAE,UAxEA;AAyELC,iBAAG,EAAE,eAzEA;AA0ELC,iBAAG,EAAE,YA1EA;AA2ELC,iBAAG,EAAE,OA3EA;AA4ELC,iBAAG,EAAE,UA5EA;AA6ELC,iBAAG,EAAE,QA7EA;AA8ELC,iBAAG,EAAE,kBA9EA;AA+ELC,iBAAG,EAAE,qBA/EA;AAgFLC,iBAAG,EAAE,6CAhFA;AAiFLC,iBAAG,EAAE,OAjFA;AAkFLC,iBAAG,EAAE,QAlFA;AAmFLC,iBAAG,EAAE,SAnFA;AAoFLC,iBAAG,EAAE,WApFA;AAqFLC,iBAAG,EAAE,OArFA;AAsFLC,iBAAG,EAAE,WAtFA;AAuFLC,iBAAG,EAAE,OAvFA;AAwFLC,iBAAG,EAAE,WAxFA;AAyFLC,iBAAG,EAAE,SAzFA;AA0FLC,iBAAG,EAAE,YA1FA;AA2FLC,iBAAG,EAAE,MA3FA;AA4FLC,iBAAG,EAAE,WA5FA;AA6FLC,iBAAG,EAAE,WA7FA;AA8FLC,iBAAG,EAAE,QA9FA;AA+FLC,iBAAG,EAAE,eA/FA;AAgGLC,iBAAG,EAAE,QAhGA;AAiGLC,iBAAG,EAAE,OAjGA;AAkGLC,iBAAG,EAAE,yBAlGA;AAmGLC,iBAAG,EAAE,uBAnGA;AAoGLC,iBAAG,EAAE,UApGA;AAqGLC,iBAAG,EAAE,SArGA;AAsGLC,iBAAG,EAAE,SAtGA;AAuGLC,iBAAG,EAAE,MAvGA;AAwGLC,iBAAG,EAAE,WAxGA;AAyGLC,iBAAG,EAAE,MAzGA;AA0GLC,iBAAG,EAAE,MA1GA;AA2GLC,iBAAG,EAAE,SA3GA;AA4GLC,iBAAG,EAAE,YA5GA;AA6GLC,iBAAG,EAAE,QA7GA;AA8GLC,iBAAG,EAAE,QA9GA;AA+GLC,iBAAG,EAAE,UA/GA;AAgHLC,iBAAG,EAAE,OAhHA;AAiHLC,iBAAG,EAAE,QAjHA;AAkHLC,iBAAG,EAAE,UAlHA;AAmHLC,iBAAG,EAAE,YAnHA;AAoHLC,iBAAG,EAAE,OApHA;AAqHLC,iBAAG,EAAE,UArHA;AAsHLC,iBAAG,EAAE,eAtHA;AAuHLC,iBAAG,EAAE,cAvHA;AAwHLC,iBAAG,EAAE,QAxHA;AAyHLC,iBAAG,EAAE,cAzHA;AA0HLC,iBAAG,EAAE,MA1HA;AA2HLC,iBAAG,EAAE,UA3HA;AA4HLC,iBAAG,EAAE,OA5HA;AA6HLC,iBAAG,EAAE,SA7HA;AA8HLC,iBAAG,EAAE,SA9HA;AA+HLC,iBAAG,EAAE,OA/HA;AAgILC,iBAAG,EAAE,eAhIA;AAiILC,iBAAG,EAAE,UAjIA;AAkILC,iBAAG,EAAE,YAlIA;AAmILC,iBAAG,EAAE,WAnIA;AAoILC,iBAAG,EAAE,YApIA;AAqILC,iBAAG,EAAE,QArIA;AAsILC,iBAAG,EAAE,UAtIA;AAuILC,iBAAG,EAAE,UAvIA;AAwILC,iBAAG,EAAE,MAxIA;AAyILC,iBAAG,EAAE,OAzIA;AA0ILC,iBAAG,EAAE,eA1IA;AA2ILC,iBAAG,EAAE,YA3IA;AA4ILC,iBAAG,EAAE,YA5IA;AA6ILC,iBAAG,EAAE,SA7IA;AA8ILC,iBAAG,EAAE,SA9IA;AA+ILC,iBAAG,EAAE,SA/IA;AAgJLC,iBAAG,EAAE,YAhJA;AAiJLC,iBAAG,EAAE,UAjJA;AAkJLC,iBAAG,EAAE,QAlJA;AAmJLC,iBAAG,EAAE,UAnJA;AAoJLC,iBAAG,EAAE,YApJA;AAqJLC,iBAAG,EAAE,YArJA;AAsJLC,iBAAG,EAAE,OAtJA;AAuJLC,iBAAG,EAAE,YAvJA;AAwJLC,iBAAG,EAAE,SAxJA;AAyJLC,iBAAG,EAAE,SAzJA;AA0JLC,iBAAG,EAAE,OA1JA;AA2JLC,iBAAG,EAAE,OA3JA;AA4JLC,iBAAG,EAAE,UA5JA;AA6JLC,iBAAG,EAAE,oBA7JA;AA8JLC,iBAAG,EAAE,kBA9JA;AA+JLC,iBAAG,EAAE,WA/JA;AAgKLC,iBAAG,EAAE,OAhKA;AAiKLC,iBAAG,EAAE,SAjKA;AAkKLC,iBAAG,EAAE,MAlKA;AAmKLC,iBAAG,EAAE,aAnKA;AAoKLC,iBAAG,EAAE,wBApKA;AAqKLC,iBAAG,EAAE,SArKA;AAsKLC,iBAAG,EAAE,MAtKA;AAuKLC,iBAAG,EAAE,UAvKA;AAwKLC,iBAAG,EAAE,OAxKA;AAyKLC,iBAAG,EAAE,WAzKA;AA0KLC,iBAAG,EAAE,QA1KA;AA2KLC,iBAAG,EAAE,2BA3KA;AA4KLC,iBAAG,EAAE,UA5KA;AA6KLC,iBAAG,EAAE,OA7KA;AA8KLC,iBAAG,EAAE,aA9KA;AA+KLC,iBAAG,EAAE,UA/KA;AAgLLC,iBAAG,EAAE,SAhLA;AAiLLC,iBAAG,EAAE,UAjLA;AAkLLC,iBAAG,EAAE,aAlLA;AAmLLC,iBAAG,EAAE,OAnLA;AAoLLC,iBAAG,EAAE,SApLA;AAqLLC,iBAAG,EAAE,UArLA;AAsLLC,iBAAG,EAAE,QAtLA;AAuLLC,iBAAG,EAAE,QAvLA;AAwLLC,iBAAG,EAAE,kBAxLA;AAyLLC,iBAAG,EAAE,eAzLA;AA0LLC,iBAAG,EAAE,sBA1LA;AA2LLC,iBAAG,EAAE,cA3LA;AA4LLC,iBAAG,EAAE,iCA5LA;AA6LLC,iBAAG,EAAE,oCA7LA;AA8LLC,iBAAG,EAAE,0BA9LA;AA+LLC,iBAAG,EAAE,iCA/LA;AAgMLC,iBAAG,EAAE,OAhMA;AAiMLC,iBAAG,EAAE,aAjMA;AAkMLC,iBAAG,EAAE,sBAlMA;AAmMLC,iBAAG,EAAE,iBAnMA;AAoMLC,iBAAG,EAAE,SApMA;AAqMLC,iBAAG,EAAE,QArMA;AAsMLC,iBAAG,EAAE,YAtMA;AAuMLC,iBAAG,EAAE,cAvMA;AAwMLC,iBAAG,EAAE,WAxMA;AAyMLC,iBAAG,EAAE,WAzMA;AA0MLC,iBAAG,EAAE,UA1MA;AA2MLC,iBAAG,EAAE,cA3MA;AA4MLC,iBAAG,EAAE,SA5MA;AA6MLC,iBAAG,EAAE,gBA7MA;AA8MLC,iBAAG,EAAE,4CA9MA;AA+MLC,iBAAG,EAAE,YA/MA;AAgNLC,iBAAG,EAAE,SAhNA;AAiNLC,iBAAG,EAAE,WAjNA;AAkNLC,iBAAG,EAAE,QAlNA;AAmNLC,iBAAG,EAAE,UAnNA;AAoNLC,iBAAG,EAAE,uBApNA;AAqNLC,iBAAG,EAAE,UArNA;AAsNLC,iBAAG,EAAE,OAtNA;AAuNLC,iBAAG,EAAE,QAvNA;AAwNLC,iBAAG,EAAE,OAxNA;AAyNLC,iBAAG,EAAE,QAzNA;AA0NLC,iBAAG,EAAE,aA1NA;AA2NLC,iBAAG,EAAE,UA3NA;AA4NLC,iBAAG,EAAE,WA5NA;AA6NLC,iBAAG,EAAE,aA7NA;AA8NLC,iBAAG,EAAE,MA9NA;AA+NLC,iBAAG,EAAE,SA/NA;AAgOLC,iBAAG,EAAE,OAhOA;AAiOLC,iBAAG,EAAE,mBAjOA;AAkOLC,iBAAG,EAAE,SAlOA;AAmOLC,iBAAG,EAAE,SAnOA;AAoOLC,iBAAG,EAAE,cApOA;AAqOLC,iBAAG,EAAE,yBArOA;AAsOLC,iBAAG,EAAE,QAtOA;AAuOLC,iBAAG,EAAE,SAvOA;AAwOLC,iBAAG,EAAE,SAxOA;AAyOLC,iBAAG,EAAE,qBAzOA;AA0OLC,iBAAG,EAAE,aA1OA;AA2OLC,iBAAG,EAAE,YA3OA;AA4OLC,iBAAG,EAAE,wCA5OA;AA6OLC,iBAAG,EAAE,SA7OA;AA8OLC,iBAAG,EAAE,aA9OA;AA+OLC,iBAAG,EAAE,SA/OA;AAgPLC,iBAAG,EAAE,WAhPA;AAiPLC,iBAAG,EAAE,UAjPA;AAkPLC,iBAAG,EAAE,0BAlPA;AAmPLC,iBAAG,EAAE,kBAnPA;AAoPLC,iBAAG,EAAE,mBApPA;AAqPLC,iBAAG,EAAE,OArPA;AAsPLC,iBAAG,EAAE,QAtPA;AAuPLC,iBAAG,EAAE;AAvPA;AAHL,WADN;AA8PFC,2BAAiB,EAAE;AACfC,iBAAK,EAAE,mEADQ;AAEfC,qBAAS,EAAE,yBAFI;AAGfC,mBAAO,EAAE,mCAHM;AAIfC,kBAAM,EAAE;AACJC,oBAAM,EAAE;AADJ,aAJO;AAOfC,+BAAmB,EAAE;AAPN,WA9PjB;AAuQFC,iCAAuB,EAAE;AACrBN,iBAAK,EAAE,mEADc;AAErBC,qBAAS,EAAE,yBAFU;AAGrBC,mBAAO,EAAE,mCAHY;AAIrBC,kBAAM,EAAE;AACJI,sBAAQ,EAAE;AADN,aAJa;AAOrBF,+BAAmB,EAAE,0CAPA;AAQrBG,8BAAkB,EAAE,uEARC;AASrBC,2BAAe,EAAE;AATI,WAvQvB;AAkRFC,2BAAiB,EAAE;AACfV,iBAAK,EAAE,oCADQ;AAEfW,sBAAU,EAAE,qBAFG;AAGfC,wBAAY,EAAE,cAHC;AAIfT,kBAAM,EAAE;AACJU,oBAAM,EAAE,2BADJ;AAEJC,oBAAM,EAAE;AAFJ,aAJO;AAQfb,qBAAS,EAAE,yBARI;AASfC,mBAAO,EAAE,mCATM;AAUfa,yBAAa,EAAE,kEAVA;AAWfC,2BAAe,EAAE;AAXF,WAlRjB;AA+RFC,8BAAoB,EAAE;AAClBjB,iBAAK,EAAE,gBADW;AAElBkB,oBAAQ,EAAE,oCAFQ;AAGlBC,+BAAmB,EAAE,gDAHH;AAIlBC,+BAAmB,EAAE,iFAJH;AAKlBC,cAAE,EAAE,QALc;AAMlBC,qBAAS,EAAE,UANO;AAOlBC,mBAAO,EAAE,WAPS;AAQlBC,kBAAM,EAAE,OARU;AASlBC,qBAAS,EAAE,4BATO;AAUlBC,sBAAU,EAAE,6BAVM;AAWlBC,8BAAkB,EAAE,wCAXF;AAYlBC,yBAAa,EAAE,sBAZG;AAalBC,0BAAc,EAAE,wCAbE;AAclBC,kBAAM,EAAE,WAdU;AAelBC,kBAAM,EAAE,WAfU;AAgBlBC,yBAAa,EAAE,uBAhBG;AAiBlB7B,kBAAM,EAAE;AACJU,oBAAM,EAAE,SADJ;AAEJC,oBAAM,EAAE;AAFJ,aAjBU;AAqBlBmB,uBAAW,EAAE,0BArBK;AAsBlB/B,mBAAO,EAAE;AAtBS;AA/RpB;AAFkB,OAArB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAM6E,iBAAiB,GAAG,0EAA0C,QAA1C,CAA1B;;AAEO,oBASH,wEAAaA,iBAAb,CATG;AAAA,UACLC,kBADK,WACLA,kBADK;AAAA,UAELC,cAFK,WAELA,cAFK;AAAA,UAGLC,iBAHK,WAGLA,iBAHK;AAAA,UAILC,gBAJK,WAILA,gBAJK;AAAA,UAKLC,iBALK,WAKLA,iBALK;AAAA,UAMLC,gBANK,WAMLA,gBANK;AAAA,UAOLC,eAPK,WAOLA,eAPK;AAAA,UAQLC,SARK,WAQLA,SARK;;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,UAAMC,YAAY,GAAgB;AAC9B/V,mBAAW,EAAE,IADiB;AAE9BF,oBAAY,EAAE;AAFgB,OAAlC;AAKA,UAAMkW,OAAO,GAAG,kEACZD,YADY,EAEZ,uDAAG,8DAAH,EAAiC,UAACpD,KAAD;AAAA,YAAU3S,WAAV,QAAUA,WAAV;AAAA,eAA6B,MAAD,OAAC,CAAD,kBAAM2S,KAAN,CAAC,EAAU;AAAE3S,qBAAW,EAAEA;AAAf,SAAV,CAA7B;AAAA,OAAjC,CAFY,EAGZ,uDAAG,+DAAH,EAAkC,UAAC2S,KAAD;AAAA,YAAU7S,YAAV,SAAUA,YAAV;AAAA,eAA8B,MAAD,OAAC,CAAD,kBAAM6S,KAAN,CAAC,EAAU;AAAE7S,sBAAY,EAAEA;AAAhB,SAAV,CAA9B;AAAA,OAAlC,CAHY,CAAhB;;AAMO,eAASmW,aAAT,CAAuBtD,KAAvB,EAAuDuD,MAAvD,EAAqE;AACxE,eAAOF,OAAO,CAACrD,KAAD,EAAQuD,MAAR,CAAd;AACH;;;;;;;;;;;;;;;;;ACnBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMY;;AAAsD;;AAAI;;;;;;AAC1D;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsD;;AAAW;;;;;;AACjE;;;;;;AAAuC;;;;;;AAIvC;;AAAsD;;AAAQ;;;;;;AAE1D;;AAAyD;;AAAI;;;;;;AAC7D;;AAA0D;;AAAK;;;;;;AAFnE;;AACI;;AACA;;AACJ;;;;;;AAFe;;AAAA;;AACA;;AAAA;;;;;;AAInB;;;;;;AACA;;;;UDhBKC,e;AASX,iCACU1B,MADV,EACmC;AAAA;;AAAzB,eAAAA,MAAA,GAAAA,MAAA;AAER,eAAK2B,sBAAL,GAA8B,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAxB,CAA9B;AACA,eAAKC,gBAAL,GAAwB,IAAI,0EAAJ,CAAmC,EAAnC,CAAxB;AACD,S,CAED;AACA;AACA;;;;;iBAEA,qBAAYzB,OAAZ,EAAkC;AAChC,gBAAIA,OAAO,CAAC0B,MAAR,IAAkB1B,OAAO,CAAC0B,MAAR,CAAexB,YAArC,EAAmD;AACjD,mBAAKuB,gBAAL,CAAsB3V,IAAtB,GAA6B,KAAK4V,MAAlC;AACD;AACF;;;iBAED,2BAAe;AACb,iBAAKD,gBAAL,CAAsBtB,IAAtB,GAA6B,KAAKwB,SAAlC;;AAEA,iBAAK9B,MAAL,CAAYQ,aAAZ;AACD;;;;;;;yBA9BUkB,e,EAAe,gI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACV5B;;AAEI;;AAAI;;AAAM;;AAEV;;AAGI;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AAIJ;;AAEA;;AACA;;AAEJ;;AAEJ;;;;AA1BqB;;AAAA;;AAqBO;;AAAA;;AACa;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCnB5BK,qB;;;;;yBAAAA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA,oL;AAAA;AAAA;ACPlC;;AACI;;AACI;;AAAI;;AAAc;;AAClB;;AAAG;;AAA0D;;AAE7D;;AACI;;AAAiC;;AAAO;;AAC5C;;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CACrB;AACE/C,YAAI,EAAE,QADR;AAEEgD,iBAAS,EAAE,0FAFb;AAGEC,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAA+BC,IAA/B,CAAoC,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,WAAN;AAAA,WAArC,CAAN;AAAA;AAHhB,OADqB,EAMrB;AAAEpD,YAAI,EAAE,EAAR;AAAYqD,iBAAS,EAAE,MAAvB;AAA+BC,kBAAU,EAAE;AAA3C,OANqB,EAOrB;AAAEtD,YAAI,EAAE,IAAR;AAAcgD,iBAAS,EAAE;AAAzB,OAPqB,CAAvB;;UAkBaO,gB;;;;;yBAAAA,gB;AAAgB,O;;;cAAhBA;;;kBAPF,CACP,6DAAa7C,OAAb,CAAqBqC,MAArB,EAA6B;AAAES,iBAAO,EAAE;AAAX,SAA7B,CADO,C,EAIP,4D;;;;4HAGSD,gB,EAAgB;AAAA;AAAA,oBAHzB,4DAGyB;AAAA,S;AAHb,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdhB,UAAI,sEAAY1W,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB4W,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASG,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBd,IAAlB,CAAuB,YAAW;AACxC,cAAIe,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBJ,GAAzB,GAA+B,GAAzC,CAAR;AACAG,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDJ,8BAAwB,CAACO,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAP,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAQ,YAAM,CAACC,OAAP,GAAiBT,wBAAjB;AACAA,8BAAwB,CAACU,EAAzB,GAA8B,MAA9B","file":"main-es5.e81909e8347be4364189.js","sourcesContent":["import { createAction, props } from '@ngrx/store';\n\nexport const setCurrentLang = createAction('[TODO] Set the current language', props<{ currentLang: string }>());\nexport const setCurrentTheme = createAction('[TODO] Set the current theme', props<{ currentTheme: string }>());","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Locales } from \"projects/angular-sdk/src/i18n\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\n\nimport { AppState } from \"../../ngrx\";\nimport * as globalActions from \"../../ngrx/global/global.actions\";\nimport { getCurrentLang, getCurrentTheme } from \"../../ngrx/global/global.selectors\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.scss\"],\n})\nexport class NavBarComponent implements OnInit, OnDestroy {\n\n  public currentLang!: string;\n  public currentTheme!: string;\n  public version!: string;\n  public languages!: string[];\n  public themes!: string[];\n\n  private _unsubcriber: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _matIconRegistry: MatIconRegistry,\n    private _domSanitizer: DomSanitizer,\n    private _store: Store<AppState>,\n  ) {\n    // Set the current version\n    this.version = environment.version;\n\n    // The languages ​​available depend on the languages ​​supported by the API\n    this.languages = Locales.map(x => x.lang);\n\n    this.themes = [\n      'theme-dark-hopper',\n      'theme-light-hopper',\n      'theme-light-blue'\n    ];\n\n    // Add SVG icons for each languages\n    this.languages.forEach(language => {\n      this._matIconRegistry.addSvgIcon(\"flag_\" + language, this._domSanitizer.bypassSecurityTrustResourceUrl(\"assets/flags/\" + language + \".svg\"));\n    });\n  }\n\n  // -------------------------------\n  // - LIFE CYCLE HOOKS\n  // -------------------------------\n\n  ngOnInit(): void {\n    // Update the current theme when it's changing\n    this._store.pipe(\n      select(getCurrentTheme),\n      takeUntil(this._unsubcriber)\n    ).subscribe((currentTheme: string) => this.currentTheme = currentTheme);\n\n    // update the currentLang when it's changing\n    this._store.pipe(\n      select(getCurrentLang),\n      takeUntil(this._unsubcriber)\n    ).subscribe((currentLanguage: string) => this.currentLang = currentLanguage);\n  }\n\n  ngOnDestroy(): void {\n    this._unsubcriber.next();\n    this._unsubcriber.complete();\n  }\n  \n  // -------------------------------\n  // - METHODS\n  // -------------------------------\n\n  onSetTheme(newTheme: string): void {\n    this._store.dispatch(globalActions.setCurrentTheme({ currentTheme: newTheme }));\n  }\n\n  onSetLanguage(newLanguage: string): void {\n    this._store.dispatch(globalActions.setCurrentLang({ currentLang: newLanguage }));\n  }\n}\n","<mat-toolbar class=\"mat-elevation-z4\" color=\"primary\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <span routerLink=\"/\" class=\"pointer\">Hopper Cloud Airlines - Angular SDK - {{ version }}</span>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button [matMenuTriggerFor]=\"themeMenu\">\n            <mat-icon class=\"mr-8\">palette</mat-icon>\n            <span>{{ currentTheme }}</span>\n        </button>\n\n        <mat-menu #themeMenu=\"matMenu\">\n            <button mat-menu-item *ngFor=\"let theme of themes\" (click)=\"onSetTheme(theme)\">\n                <mat-icon>palette</mat-icon>\n                <span>{{ theme }}</span>\n            </button>\n        </mat-menu>\n\n        <button mat-button [matMenuTriggerFor]=\"languageMenu\">\n            <mat-icon class=\"mr-8\" svgIcon=\"flag_{{ currentLang }}\"></mat-icon>\n            <span>{{ currentLang | uppercase }}</span>\n        </button>\n\n        <mat-menu #languageMenu=\"matMenu\">\n            <button mat-menu-item *ngFor=\"let language of languages\" (click)=\"onSetLanguage(language)\">\n                <mat-icon svgIcon=\"flag_{{ language }}\"></mat-icon>\n                <span>{{ language | uppercase }}</span>\n            </button>\n        </mat-menu>\n    </div>\n</mat-toolbar>","export const environment = {\n  production: true,\n  defaultTheme: \"theme-light-blue\",\n  version: 'v2.1.7'\n};\n","import { I18n } from \"./i18n.interface\";\n\nexport const locale: I18n = {\n    lang: 'zh',\n    data: {\n        COMMON: {\n            DATE_FORMAT: 'EEEE, MMMM d, y, h:mm:ss a z',\n            DATE_FORMAT_SHORT: 'MM/dd/YYYY hh:mm',\n            COUNTRY: {\n                AFG: \"阿富汗\",\n                ALA: \"奥兰群岛\",\n                ALB: \"阿尔巴尼亚\",\n                DZA: \"阿尔及利亚\",\n                ASM: \"美属萨摩亚\",\n                AND: \"安道尔\",\n                AGO: \"安哥拉\",\n                AIA: \"安圭拉\",\n                ATA: \"南极洲\",\n                ATG: \"安提瓜和巴布达\",\n                ARG: \"阿根廷\",\n                ARM: \"亚美尼亚\",\n                ABW: \"阿鲁巴\",\n                AUS: \"澳大利亚\",\n                AUT: \"奥地利\",\n                AZE: \"阿塞拜疆\",\n                BHS: \"巴哈马\",\n                BHR: \"巴林\",\n                BGD: \"孟加拉国\",\n                BRB: \"巴巴多斯\",\n                BLR: \"白俄罗斯\",\n                BEL: \"比利时\",\n                BLZ: \"伯利兹\",\n                BEN: \"贝宁\",\n                BMU: \"百慕大\",\n                BTN: \"不丹\",\n                BOL: \"玻利维亚\",\n                BIH: \"波斯尼亚和黑塞哥维那\",\n                BWA: \"博茨瓦纳\",\n                BVT: \"布维岛\",\n                BRA: \"巴西\",\n                VGB: \"英属维尔京群岛\",\n                IOT: \"英属印度洋领地\",\n                BRN: \"文莱达鲁萨兰国\",\n                BGR: \"保加利亚\",\n                BFA: \"布基纳法索\",\n                BDI: \"布隆迪\",\n                KHM: \"柬埔寨\",\n                CMR: \"喀麦隆\",\n                CAN: \"加拿大\",\n                CPV: \"佛得角\",\n                CYM: \"开曼群岛\",\n                CAF: \"中非共和国\",\n                TCD: \"乍得\",\n                CHL: \"智利\",\n                CHN: \"中国\",\n                HKG: \"香港\",\n                MAC: \"澳门\",\n                CXR: \"圣诞岛\",\n                CCK: \"科科斯群岛\",\n                COL: \"哥伦比亚\",\n                COM: \"科摩罗\",\n                COG: \"刚果共和国\",\n                COD: \"刚果民主共和国\",\n                COK: \"库克群岛\",\n                CRI: \"哥斯达黎加\",\n                CIV: \"象牙海岸\",\n                HRV: \"克罗地亚\",\n                CUB: \"古巴\",\n                CYP: \"塞浦路斯\",\n                CZE: \"捷克共和国\",\n                DNK: \"丹麦\",\n                DJI: \"吉布提\",\n                DMA: \"多米尼克\",\n                DOM: \"多米尼加共和国\",\n                ECU: \"赤道\",\n                EGY: \"埃及\",\n                SLV: \"萨尔瓦多\",\n                GNQ: \"赤道几内亚\",\n                ERI: \"厄立特里亚\",\n                EST: \"爱沙尼亚\",\n                ETH: \"埃塞俄比亚\",\n                FLK: \"福克兰群岛\",\n                FRO: \"法罗群岛\",\n                FJI: \"斐济\",\n                FIN: \"芬兰\",\n                FRA: \"法国\",\n                GUF: \"法属圭亚那\",\n                PYF: \"法属波利尼西亚\",\n                ATF: \"法属南部和南极土地\",\n                GAB: \"加蓬\",\n                GMB: \"冈比亚\",\n                GEO: \"格鲁吉亚\",\n                DEU: \"德国\",\n                GHA: \"加纳\",\n                GIB: \"直布罗陀\",\n                GRC: \"希腊\",\n                GRL: \"格陵兰\",\n                GRD: \"格林纳达\",\n                GLP: \"瓜德罗普\",\n                GUM: \"关岛\",\n                GTM: \"危地马拉\",\n                GGY: \"根西岛\",\n                GIN: \"几内亚\",\n                GNB: \"几内亚比绍\",\n                GUY: \"圭亚那\",\n                HTI: \"海地\",\n                HMD: \"赫德和麦克唐纳群岛\",\n                VAT: \"教廷（梵蒂冈）\",\n                HND: \"洪都拉斯\",\n                HUN: \"匈牙利\",\n                ISL: \"冰岛\",\n                IND: \"印度\",\n                IDN: \"印度尼西亚\",\n                IRN: \"伊朗\",\n                IRQ: \"伊拉克\",\n                IRL: \"爱尔兰\",\n                IMN: \"马恩岛\",\n                ISR: \"以色列\",\n                ITA: \"意大利\",\n                JAM: \"牙买加\",\n                JPN: \"日本\",\n                JEY: \"泽西\",\n                JOR: \"乔丹\",\n                KAZ: \"哈萨克斯坦\",\n                KEN: \"肯尼亚\",\n                KIR: \"基里巴斯\",\n                PRK: \"朝鲜\",\n                KOR: \"韩国\",\n                KWT: \"科威特\",\n                KGZ: \"吉尔吉斯斯坦\",\n                LAO: \"老挝\",\n                LVA: \"拉脱维亚\",\n                LBN: \"黎巴嫩\",\n                LSO: \"莱索托\",\n                LBR: \"利比里亚\",\n                LBY: \"利比亚\",\n                LIE: \"列支敦士登\",\n                LTU: \"立陶宛\",\n                LUX: \"卢森堡\",\n                MKD: \"马其顿\",\n                MDG: \"马达加斯加\",\n                MWI: \"马拉维\",\n                MYS: \"马来西亚\",\n                MDV: \"马尔代夫\",\n                MLI: \"马里\",\n                MLT: \"马耳他\",\n                MHL: \"马绍尔群岛\",\n                MTQ: \"马提尼克岛\",\n                MRT: \"毛里塔尼亚\",\n                MUS: \"毛里求斯\",\n                MYT: \"马约特\",\n                MEX: \"墨西哥\",\n                FSM: \"密克罗尼西亚\",\n                MDA: \"摩尔多瓦\",\n                MCO: \"摩纳哥\",\n                MNG: \"蒙古\",\n                MNE: \"黑山\",\n                MSR: \"蒙特塞拉特\",\n                MAR: \"摩洛哥\",\n                MOZ: \"莫桑比克\",\n                MMR: \"缅甸\",\n                NAM: \"纳米比亚\",\n                NRU: \"瑙鲁\",\n                NPL: \"尼泊尔\",\n                NLD: \"荷兰\",\n                NCL: \"新喀里多尼亚\",\n                NZL: \"新西兰\",\n                NIC: \"尼加拉瓜\",\n                NER: \"尼日尔\",\n                NGA: \"尼日利亚\",\n                NIU: \"新\",\n                NFK: \"诺福克岛\",\n                MNP: \"北马里安群岛\",\n                NOR: \"挪威\",\n                OMN: \"阿曼\",\n                PAK: \"巴基斯坦\",\n                PLW: \"帕劳\",\n                PSE: \"巴勒斯坦\",\n                PAN: \"巴拿马\",\n                PNG: \"巴布亚新几内亚\",\n                PRY: \"巴拉圭\",\n                PER: \"秘鲁\",\n                PHL: \"菲律宾\",\n                PCN: \"皮特凯恩\",\n                POL: \"波兰\",\n                PRT: \"葡萄牙\",\n                PRI: \"波多黎各\",\n                QAT: \"卡塔尔\",\n                REU: \"会议\",\n                ROU: \"罗马尼亚\",\n                RUS: \"俄罗斯\",\n                RWA: \"卢旺达\",\n                BLM: \"圣巴泰勒米\",\n                SHN: \"圣赫勒拿\",\n                KNA: \"圣基茨和尼维斯\",\n                LCA: \"圣卢西亚\",\n                MAF: \"圣马丁（法语部分）\",\n                SXM: \"圣马丁（荷兰部分）\",\n                SPM: \"圣皮埃尔和密克隆\",\n                VCT: \"圣文森特和格林纳丁斯\",\n                WSM: \"萨摩亚\",\n                SMR: \"圣马力诺\",\n                STP: \"圣多美和普林西比\",\n                SAU: \"沙特阿拉伯\",\n                SEN: \"塞内加尔\",\n                SRB: \"塞尔维亚\",\n                SYC: \"塞舌尔\",\n                SLE: \"塞拉利昂\",\n                SGP: \"新加坡\",\n                SVK: \"斯洛伐克\",\n                SVN: \"斯洛文尼亚\",\n                SLB: \"所罗门群岛\",\n                SOM: \"索马里\",\n                ZAF: \"南非\",\n                SGS: \"南乔治亚和南桑威奇群岛\",\n                SSD: \"南苏丹\",\n                ESP: \"西班牙\",\n                LKA: \"斯里兰卡\",\n                SDN: \"苏丹\",\n                SUR: \"苏里南\",\n                SJM: \"斯瓦尔巴和扬马延\",\n                SWZ: \"斯威士兰\",\n                SWE: \"瑞典\",\n                CHE: \"瑞士\",\n                SYR: \"叙利亚\",\n                TWN: \"台湾\",\n                TJK: \"塔吉克斯坦\",\n                TZA: \"坦桑尼亚\",\n                THA: \"泰国\",\n                TLS: \"东帝汶\",\n                TGO: \"多哥\",\n                TKL: \"托克劳\",\n                TON: \"汤加\",\n                TTO: \"特立尼达和多巴哥\",\n                TUN: \"突尼斯\",\n                TUR: \"土耳其\",\n                TKM: \"土库曼斯坦\",\n                TCA: \"特克斯和凯科斯群岛\",\n                TUV: \"图瓦卢\",\n                UGA: \"乌干达\",\n                UKR: \"乌克兰\",\n                ARE: \"阿拉伯联合酋长国\",\n                GBR: \"英国\",\n                USA: \"美国\",\n                UMI: \"美国外围小岛\",\n                URY: \"乌拉圭\",\n                UZB: \"乌兹别克斯坦\",\n                VUT: \"瓦努阿图\",\n                VEN: \"委内瑞拉\",\n                VNM: \"越南\",\n                VIR: \"美属维尔京群岛\",\n                WLF: \"瓦利斯和富图纳\",\n                ESH: \"西撒哈拉\",\n                YEM: \"也门\",\n                ZMB: \"赞比亚\",\n                ZWE: \"津巴布韦\"\n            }\n        },\n        CFAR_OFFER_BANNER: {\n            TITLE: \"随时以任何理由取消您的航班。\",\n            NO_OFFERS: \"没有可用的优惠\",\n            LOADING: \"正在加载优惠...\",\n            BUTTON: {\n                SELECT: \"选择\"\n            },\n            COVERAGE_PERCENTAGE: \"承保飞行费用的 {{ coverage }}\",\n        },\n        CFAR_OFFER_BANNER_LARGE: {\n            TITLE: \"随时以任何理由取消您的航班。\",\n            NO_OFFERS: \"没有可用的优惠\",\n            LOADING: \"正在加载优惠...\",\n            BUTTON: {\n                CONTINUE: \"继续\"\n            },\n            COVERAGE_PERCENTAGE: \"承保飞行费用的 {{ coverage }}\",\n            NO_COVERAGE_OPTION: \"我不想出于任何原因购买取消。\",\n            CHOOSE_COVERAGE: \"请选择或拒绝出于任何原因取消。\"\n        },\n        CFAR_OFFER_DIALOG: {\n            TITLE: \"出于任何原因取消\",\n            POWERED_BY: \"由 Hopper 提供支持\",\n            VIEW_DETAILS: \"查看详情\",\n            BUTTON: {\n                CANCEL: \"继续无覆盖\",\n                SUBMIT: \"继续覆盖 {{ coverage }}\"\n            },\n            NO_OFFERS: \"没有可用的优惠\",\n            LOADING: \"正在加载优惠...\",\n            TERMS_WARNING: \"如果你不添加这个,你的票是不可退款的。\",\n            TERMS_LINK_TEXT: \"条款和条件\"\n        },\n        CFAR_EXERCISE_DIALOG: {\n            TITLE: \"取消航班\",\n            SUBTITLE: \"出于任何原因取消\",\n            DEADLINE_SENTENCE_1: \"免费取消您的预订,直到 \",\n            DEADLINE_SENTENCE_2: \"您将收到一封确认电子邮件,行程状态将更新。\",\n            TO: \" 到 \",\n            DEPARTURE: \"离开: \",\n            ARRIVAL: \"到达: \",\n            FLIGHT: \"航班: \",\n            PASSENGER: \"{{ nbPassenger }} 名乘客\",\n            PASSENGERS: \"{{ nbPassenger }} 名乘客\",\n            CHOOSE_REFUND_TYPE: \"选择您的退款类型\",\n            HOPPER_REFUND: \"Hopper 退款\",\n            AIRLINE_REFUND: \"航空公司退款\",\n            METHOD: \"方法:\",\n            AMOUNT: \"金额:\",\n            REFUND_METHOD: \"退款方式\",\n            BUTTON: {\n                CANCEL: \"取消\",\n                SUBMIT: \"是的,取消航班\"\n            },\n            NO_CONTRACT: \"没有可用的合同\",\n            LOADING: \"正在加载...\"\n        }\n    }\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { GlobalState } from \"./global.reducer\";\n\nexport const getGlobalState = createFeatureSelector<GlobalState>('global');\nexport const getCurrentLang = createSelector(getGlobalState, state => state.currentLang);\nexport const getCurrentTheme = createSelector(getGlobalState, state => state.currentTheme);","import { I18n } from \"./i18n.interface\";\n\nexport const locale: I18n = {\n    lang: 'es',\n    data: {\n        COMMON: {\n            DATE_FORMAT: 'EEEE, MMMM d, y, h:mm:ss a z',\n            DATE_FORMAT_SHORT: 'MM/dd/YYYY hh:mm',\n            COUNTRY: {\n                AFG: \"Afganistán\",\n                ALA: \"Islas Åland\",\n                ALB: \"Albania\",\n                DZA: \"Argelia\",\n                ASM: \"Samoa Americana\",\n                AND: \"Andorra\",\n                AGO: \"Angola\",\n                AIA: \"Anguila\",\n                ATA: \"Antártida\",\n                ATG: \"Antigua y Barbuda\",\n                ARG: \"Argentina\",\n                ARM: \"Armenia\",\n                ABW: \"Aruba\",\n                AUS: \"Australia\",\n                AUT: \"Austria\",\n                AZE: \"Azerbaiyán\",\n                BHS: \"Bahamas\",\n                BHR: \"Bahréin\",\n                BGD: \"Bangladés\",\n                BRB: \"Barbados\",\n                BLR: \"Bielorrusia\",\n                BEL: \"Bélgica\",\n                BLZ: \"Belice\",\n                BEN: \"Benín\",\n                BMU: \"Bermudas\",\n                BTN: \"Bután\",\n                BOL: \"Bolivia\",\n                BIH: \"Bosnia y Herzegovina\",\n                BWA: \"Botsuana\",\n                BVT: \"Isla Bouvet\",\n                BRA: \"Brasil\",\n                VGB: \"Islas Vírgenes Británicas\",\n                IOT: \"Territorio Británico del Océano Índico\",\n                BRN: \"Brunéi Darussalam\",\n                BGR: \"Bulgaria\",\n                BFA: \"Burkina Faso\",\n                BDI: \"Burundi\",\n                KHM: \"Camboya\",\n                CMR: \"Camerún\",\n                CAN: \"Canadá\",\n                CPV: \"Cabo Verde\",\n                CYM: \"Islas Caimán\",\n                CAF: \"República Centroafricana\",\n                TCD: \"Chad\",\n                CHL: \"Chile\",\n                CHN: \"China\",\n                HKG: \"Hong Kong\",\n                MAC: \"Macao\",\n                CXR: \"Isla de Navidad\",\n                CCK: \"Islas Cocos\",\n                COL: \"Colombia\",\n                COM: \"Comoras\",\n                COG: \"República del Congo\",\n                COD: \"República Democrática del Congo\",\n                COK: \"Islas Cook\",\n                CRI: \"Costa Rica\",\n                CIV: \"Costa de Marfil\",\n                HRV: \"Croacia\",\n                CUB: \"Cuba\",\n                CYP: \"Chipre\",\n                CZE: \"República Checa\",\n                DNK: \"Dinamarca\",\n                DJI: \"Yibuti\",\n                DMA: \"Dominica\",\n                DOM: \"República Dominicana\",\n                ECU: \"Ecuador\",\n                EGY: \"Egipto\",\n                SLV: \"Salvador\",\n                GNQ: \"Guinea Ecuatorial\",\n                ERI: \"Eritrea\",\n                EST: \"Estonia\",\n                ETH: \"Etiopía\",\n                FLK: \"Islas Malvinas\",\n                FRO: \"Islas Feroe\",\n                FJI: \"Fiyi\",\n                FIN: \"Finlandia\",\n                FRA: \"Francia\",\n                GUF: \"Guayana Francesa\",\n                PYF: \"Polinesia Francesa\",\n                ATF: \"Territorios Australes y Antárticos Franceses\",\n                GAB: \"Gabón\",\n                GMB: \"Gambia\",\n                GEO: \"Georgia\",\n                DEU: \"Alemania\",\n                GHA: \"Ghana\",\n                GIB: \"Gibraltar\",\n                GRC: \"Grecia\",\n                GRL: \"Groenlandia\",\n                GRD: \"Granada\",\n                GLP: \"Guadalupe\",\n                GUM: \"Guam\",\n                GTM: \"Guatemala\",\n                GGY: \"Guernesey\",\n                GIN: \"Guinea\",\n                GNB: \"Guinea-Bisáu\",\n                GUY: \"Guyana\",\n                HTI: \"Haití\",\n                HMD: \"Islas Heard y McDonald\",\n                VAT: \"Santa Sede (Vaticano)\",\n                HND: \"Honduras\",\n                HUN: \"Hungría\",\n                ISL: \"Islandia\",\n                IND: \"India\",\n                IDN: \"Indonesia\",\n                IRN: \"Irán\",\n                IRQ: \"Irak\",\n                IRL: \"Irlanda\",\n                IMN: \"Isla de Man\",\n                ISR: \"Israel\",\n                ITA: \"Italia\",\n                JAM: \"Jamaica\",\n                JPN: \"Japón\",\n                JEY: \"Jersey\",\n                JOR: \"Jordania\",\n                KAZ: \"Kazajstán\",\n                KEN: \"Kenia\",\n                KIR: \"Kiribati\",\n                PRK: \"Corea del Norte\",\n                KOR: \"Corea del Sur\",\n                KWT: \"Kuwait\",\n                KGZ: \"Kirguistán\",\n                LAO: \"Laos\",\n                LVA: \"Letonia\",\n                LBN: \"Líbano\",\n                LSO: \"Lesoto\",\n                LBR: \"Liberia\",\n                LBY: \"Libia\",\n                LIE: \"Liechtenstein\",\n                LTU: \"Lituania\",\n                LUX: \"Luxemburgo\",\n                MKD: \"Macedonia\",\n                MDG: \"Madagascar\",\n                MWI: \"Malaui\",\n                MYS: \"Malasia\",\n                MDV: \"Maldivas\",\n                MLI: \"Malí\",\n                MLT: \"Malta\",\n                MHL: \"Islas Marshall\",\n                MTQ: \"Martinica\",\n                MRT: \"Mauritania\",\n                MUS: \"Mauricio\",\n                MYT: \"Mayotte\",\n                MEX: \"México\",\n                FSM: \"Micronesia\",\n                MDA: \"Moldavia\",\n                MCO: \"Mónaco\",\n                MNG: \"Mongolia\",\n                MNE: \"Montenegro\",\n                MSR: \"Montserrat\",\n                MAR: \"Marruecos\",\n                MOZ: \"Mozambique\",\n                MMR: \"Birmania\",\n                NAM: \"Namibia\",\n                NRU: \"Nauru\",\n                NPL: \"Nepal\",\n                NLD: \"Países Bajos\",\n                NCL: \"Nueva Caledonia\",\n                NZL: \"Nueva Zelanda\",\n                NIC: \"Nicaragua\",\n                NER: \"Níger\",\n                NGA: \"Nigeria\",\n                NIU: \"Niue\",\n                NFK: \"Isla Norfolk\",\n                MNP: \"Islas Marianas del Norte\",\n                NOR: \"Noruega\",\n                OMN: \"Omán\",\n                PAK: \"Pakistán\",\n                PLW: \"Palaus\",\n                PSE: \"Palestina\",\n                PAN: \"Panamá\",\n                PNG: \"Papúa Nueva Guinea\",\n                PRY: \"Paraguay\",\n                PER: \"Perú\",\n                PHL: \"Filipinas\",\n                PCN: \"Pitcairn\",\n                POL: \"Polonia\",\n                PRT: \"Portugal\",\n                PRI: \"Puerto Rico\",\n                QAT: \"Catar\",\n                REU: \"Reunión\",\n                ROU: \"Rumania\",\n                RUS: \"Rusia\",\n                RWA: \"Ruanda\",\n                BLM: \"San Bartolomé\",\n                SHN: \"Santa Elena\",\n                KNA: \"San Cristóbal y Nieves\",\n                LCA: \"Santa Lucía\",\n                MAF: \"San Martín (parte francesa)\",\n                SXM: \"San Martín (hojas holandesas)\",\n                SPM: \"San Pedro y Miquelón\",\n                VCT: \"San Vicente y las Granadinas\",\n                WSM: \"Samoa\",\n                SMR: \"San Marino\",\n                STP: \"Santo Tomé y Príncipe\",\n                SAU: \"Arabia Saudita\",\n                SEN: \"Senegal\",\n                SRB: \"Serbia\",\n                SYC: \"Seychelles\",\n                SLE: \"Sierra Leona\",\n                SGP: \"Singapur\",\n                SVK: \"Eslovaquia\",\n                SVN: \"Eslovenia\",\n                SLB: \"Islas Salomón\",\n                SOM: \"Somalia\",\n                ZAF: \"Sudáfrica\",\n                SGS: \"Islas Georgias del Sur y Sandwich del Sur\",\n                SSD: \"Sudán del Sur\",\n                ESP: \"español\",\n                LKA: \"Sri Lanka\",\n                SDN: \"Sudán\",\n                SUR: \"Surinam\",\n                SJM: \"Svalbard y Jan Mayen\",\n                SWZ: \"Esuatini\",\n                SWE: \"Suecia\",\n                CHE: \"Suiza\",\n                SYR: \"Siria\",\n                TWN: \"Taiwán\",\n                TJK: \"Tayikistán\",\n                TZA: \"Tanzania\",\n                THA: \"Tailandia\",\n                TLS: \"Timor Oriental\",\n                TGO: \"Togo\",\n                TKL: \"Tokelau\",\n                TON: \"Tonga\",\n                TTO: \"Trinidad y Tabago\",\n                TUN: \"Túnez\",\n                TUR: \"Turquía\",\n                TKM: \"Turkmenistán\",\n                TCA: \"Islas Turcas y Caicos\",\n                TUV: \"Tuvalu\",\n                UGA: \"Uganda\",\n                UKR: \"Ucrania\",\n                ARE: \"Emiratos Árabes Unidos\",\n                GBR: \"Reino Unido\",\n                USA: \"Estados Unidos\",\n                UMI: \"Islas menores alejadas de los Estados Unidos\",\n                URY: \"Uruguay\",\n                UZB: \"Uzbekistán\",\n                VUT: \"Vanuatu\",\n                VEN: \"Venezuela\",\n                VNM: \"Vietnam\",\n                VIR: \"Islas Vírgenes de los Estados Unidos\",\n                WLF: \"Wallis y Futuna\",\n                ESH: \"Sáhara Occidental\",\n                YEM: \"Yemen\",\n                ZMB: \"Zambia\",\n                ZWE: \"Zimbabue\"\n            }\n        },\n        CFAR_OFFER_BANNER: {\n            TITLE: \"Cancele su vuelo en cualquier momento, por cualquier motivo.\",\n            NO_OFFERS: \"No hay ofertas disponibles\",\n            LOADING: \"Cargando ofertas en curso...\",\n            BUTTON: {\n                SELECT: \"Seleccione\"\n            },\n            COVERAGE_PERCENTAGE: \"{{ coverage }} de los costos de vuelo cubiertos\",\n        },\n        CFAR_OFFER_BANNER_LARGE: {\n            TITLE: \"Cancele su vuelo en cualquier momento, por cualquier motivo.\",\n            NO_OFFERS: \"No hay ofertas disponibles\",\n            LOADING: \"Cargando ofertas en curso...\",\n            BUTTON: {\n                CONTINUE: \"Seguir\"\n            },\n            COVERAGE_PERCENTAGE: \"{{ coverage }} de los costos de vuelo cubiertos\",\n            NO_COVERAGE_OPTION: \"No quiero comprar Cancelar por cualquier motivo.\",\n            CHOOSE_COVERAGE: \"Elija o rechace Cancelar por cualquier motivo.\"\n        },\n        CFAR_OFFER_DIALOG: {\n            TITLE: \"Cancelar por cualquier motivo\",\n            POWERED_BY: \"Impulsado por Hopper\",\n            VIEW_DETAILS: \"Ver detalles\",\n            BUTTON: {\n                CANCEL: \"Continuar sin cobertura\",\n                SUBMIT: \"Continuar con {{ coverage }} de cobertura\"\n            },\n            NO_OFFERS: \"No hay ofertas disponibles\",\n            LOADING: \"Cargando ofertas en curso...\",\n            TERMS_WARNING: \"Si no agrega esto, su boleto no es reembolsable\",\n            TERMS_LINK_TEXT: \"Términos y condiciones\"\n        },\n        CFAR_EXERCISE_DIALOG: {\n            TITLE: \"Cancelar vuelo\",\n            SUBTITLE: \"Cancelar por cualquier motivo\",\n            DEADLINE_SENTENCE_1: \"Cancela tu reserva sin cargo hasta \",\n            DEADLINE_SENTENCE_2: \"Recibirá un correo electrónico de confirmación y se actualizará el estado del viaje.\",\n            TO: \" a \",\n            DEPARTURE: \"Salida:\",\n            ARRIVAL: \"Llegada:\",\n            FLIGHT: \"Vuelo:\",\n            PASSENGER: \"{{ nbPassenger }} pasajero\",\n            PASSENGERS: \"{{ nbPassenger }} pasajeros\",\n            CHOOSE_REFUND_TYPE: \"Elija su tipo de reembolso\",\n            HOPPER_REFUND: \"Reembolso Hopper\",\n            AIRLINE_REFUND: \"Reembolso de la aerolínea\",\n            METHOD: \"Método:\",\n            AMOUNT: \"Cantidad:\",\n            REFUND_METHOD: \"Método de reembolso\",\n            BUTTON: {\n                CANCEL: \"Cancelar\",\n                SUBMIT: \"Sí, cancelar vuelo\"\n            },\n            NO_CONTRACT: \"No hay contrato disponible\",\n            LOADING: \"Cargando en curso...\"\n        }\n    }\n}","import { NgModule } from '@angular/core';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { RouterModule } from '@angular/router';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { MatListModule } from '@angular/material/list';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavBarComponent } from './components/navbar/navbar.component';\nimport { InputsComponent } from './components/inputs/inputs.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { OutputsComponent } from './components/outputs/outputs.component';\n\n@NgModule({\n  declarations: [\n    NavBarComponent,\n    LayoutComponent,\n    InputsComponent,\n    OutputsComponent\n  ],\n  imports: [\n    // Angular Modules\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n\n    // Angular Material Modules\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatSortModule,\n\n    // Misc Modules\n    FlexLayoutModule\n  ],\n  exports: [\n    NavBarComponent,\n    LayoutComponent,\n    InputsComponent,\n    OutputsComponent\n  ],\n  providers: []\n})\nexport class SharedModule { }\n","import { Component, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { AppState } from './shared/ngrx';\nimport { getCurrentTheme } from './shared/ngrx/global/global.selectors';\nimport * as globalActions from \"./shared/ngrx/global/global.actions\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnDestroy {\n  \n  public currentTheme!: string;\n  private _unsubcriber: Subject<any> = new Subject<any>();\n  \n  constructor(\n    private _store: Store<AppState>\n  ) {\n  }\n\n  // -------------------------------\n  // - LIFE CYCLE HOOKS\n  // -------------------------------\n\n  ngOnInit(): void {\n    // Update the current theme when it's changing\n    this._store.pipe(\n      select(getCurrentTheme),\n      takeUntil(this._unsubcriber)\n    ).subscribe((currentTheme: string) => {\n      // Remove active theme\n      document.body.classList.remove(this.currentTheme);  \n\n      // Activate the new theme\n      this.currentTheme = currentTheme;\n      document.body.classList.add(this.currentTheme);\n    });\n\n    // Set Default theme\n    this._store.dispatch(globalActions.setCurrentTheme({ currentTheme: environment.defaultTheme }));\n  }\n\n  ngOnDestroy(): void {\n    this._unsubcriber.next();\n    this._unsubcriber.complete();\n  }\n}\n","<div class=\"main-container\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n  <app-navbar fxFlex=\"64px\" class=\"mat-elevation-z6\"></app-navbar>\n  <router-outlet></router-outlet>\n</div>","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Data } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { AppState } from \"../../ngrx\";\nimport { selectRouteData } from \"../../ngrx/router/router.actions\";\n\n@Component({\n  selector: \"app-layout\",\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"],\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n\n  public components: { name: string; link: string; }[] = [];\n  public selectedPath!: string;\n\n  private _unsubcriber: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _store: Store<AppState>\n  ) {\n    this.components.push({ name: 'CFAR Offer Banner', link: 'cfar-offer-banner' });\n    this.components.push({ name: 'CFAR Offer Banner Large', link: 'cfar-offer-banner-large' });\n    this.components.push({ name: 'CFAR Offer Dialog', link: 'cfar-offer-dialog' });\n    \n    // Working items\n    if (!environment.production) {\n      this.components.push({ name: 'CFAR Exercise Dialog [WIP]', link: 'cfar-exercise-dialog' });\n    }\n  }\n\n  // -------------------------------\n  // - LIFE CYCLE HOOKS\n  // -------------------------------\n\n  ngOnInit(): void {\n    // Update the selectedPath when it's changing\n    this._store.pipe(\n      select(selectRouteData),\n      takeUntil(this._unsubcriber)\n    ).subscribe((data: Data) => this.selectedPath = data.path);\n  }\n\n  ngOnDestroy(): void {\n    this._unsubcriber.next();\n    this._unsubcriber.complete();\n  }\n\n  onScrollToTop(event: any): void {\n    document.querySelector('#scroll-anchor')?.scrollTo(0,0);\n  }\n}\n","<div class=\"layout-container\" fxLayout=\"row\" fxLayoutAlign=\"stretch center\">\n    \n    <div fxFlex=\"20\" fxFill class=\"aside\">\n\n        <mat-selection-list #componentsList [multiple]=\"false\">\n            <mat-list-option *ngFor=\"let component of components;\" [routerLink]=\"component?.link\"\n                [selected]=\"selectedPath === component?.link\">\n                {{ component?.name }}\n            </mat-list-option>\n        </mat-selection-list>\n\n    </div>\n\n    <div fxFlex=\"80\" fxFill class=\"content\" id=\"scroll-anchor\">\n\n        <router-outlet (activate)=\"onScrollToTop($event)\"></router-outlet>\n\n    </div>\n</div>","import { I18n } from \"./i18n.interface\";\n\nexport const locale: I18n = {\n    lang: 'en',\n    data: {\n        COMMON: {\n            DATE_FORMAT: 'EEEE, MMMM d, y, h:mm:ss a z',\n            DATE_FORMAT_SHORT: 'MM/dd/YYYY hh:mm',\n            COUNTRY: {\n                AFG: \"Afghanistan\",\n                ALA: \"Åland Islands\",\n                ALB: \"Albania\",\n                DZA: \"Algeria\",\n                ASM: \"American Samoa\",\n                AND: \"Andorra\",\n                AGO: \"Angola\",\n                AIA: \"Anguilla\",\n                ATA: \"Antarctica\",\n                ATG: \"Antigua and Barbuda\",\n                ARG: \"Argentina\",\n                ARM: \"Armenia\",\n                ABW: \"Aruba\",\n                AUS: \"Australia\",\n                AUT: \"Austria\",\n                AZE: \"Azerbaijan\",\n                BHS: \"Bahamas\",\n                BHR: \"Bahrain\",\n                BGD: \"Bangladesh\",\n                BRB: \"Barbados\",\n                BLR: \"Belarus\",\n                BEL: \"Belgium\",\n                BLZ: \"Belize\",\n                BEN: \"Benin\",\n                BMU: \"Bermuda\",\n                BTN: \"Bhutan\",\n                BOL: \"Bolivia\",\n                BIH: \"Bosnia and Herzegovina\",\n                BWA: \"Botswana\",\n                BVT: \"Bouvet Island\",\n                BRA: \"Brazil\",\n                VGB: \"British Virgin Islands\",\n                IOT: \"British Indian Ocean Territory\",\n                BRN: \"Brunei Darussalam\",\n                BGR: \"Bulgaria\",\n                BFA: \"Burkina Faso\",\n                BDI: \"Burundi\",\n                KHM: \"Cambodia\",\n                CMR: \"Cameroon\",\n                CAN: \"Canada\",\n                CPV: \"Cape Verde\",\n                CYM: \"Cayman Islands\",\n                CAF: \"Central African Republic\",\n                TCD: \"Chad\",\n                CHL: \"Chile\",\n                CHN: \"China\",\n                HKG: \"Hong Kong\",\n                MAC: \"Macau\",\n                CXR: \"Christmas Island\",\n                CCK: \"Cocos Islands\",\n                COL: \"Colombia\",\n                COM: \"Comoros\",\n                COG: \"Republic of the Congo\",\n                COD: \"Democratic Republic of the Congo\",\n                COK: \"Cook Islands\",\n                CRI: \"Costa Rica\",\n                CIV: \"Ivory Coast\",\n                HRV: \"Croatia\",\n                CUB: \"Cuba\",\n                CYP: \"Cyprus\",\n                CZE: \"Czech Republic\",\n                DNK: \"Denmark\",\n                DJI: \"Djibouti\",\n                DMA: \"Dominica\",\n                DOM: \"Dominican Republic\",\n                ECU: \"Equator\",\n                EGY: \"Egypt\",\n                SLV: \"Salvador\",\n                GNQ: \"Equatorial Guinea\",\n                ERI: \"Eritrea\",\n                EST: \"Estonia\",\n                ETH: \"Ethiopia\",\n                FLK: \"Falkland Islands\",\n                FRO: \"Faroe Islands\",\n                FJI: \"Fiji\",\n                FIN: \"Finland\",\n                FRA: \"France\",\n                GUF: \"French Guiana\",\n                PYF: \"French Polynesia\",\n                ATF: \"French Southern and Antarctic Lands\",\n                GAB: \"Gabon\",\n                GMB: \"Gambia\",\n                GEO: \"Georgia\",\n                DEU: \"Germany\",\n                GHA: \"Ghana\",\n                GIB: \"Gibraltar\",\n                GRC: \"Greece\",\n                GRL: \"Greenland\",\n                GRD: \"Grenada\",\n                GLP: \"Guadeloupe\",\n                GUM: \"Guam\",\n                GTM: \"Guatemala\",\n                GGY: \"Guernsey\",\n                GIN: \"Guinea\",\n                GNB: \"Guinea-Bissau\",\n                GUY: \"Guyana\",\n                HTI: \"Haiti\",\n                HMD: \"Heard and MacDonald Islands\",\n                VAT: \"Holy See (Vatican)\",\n                HND: \"Honduras\",\n                HUN: \"Hungary\",\n                ISL: \"Iceland\",\n                IND: \"India\",\n                IDN: \"Indonesia\",\n                IRN: \"Iran\",\n                IRQ: \"Iraq\",\n                IRL: \"Ireland\",\n                IMN: \"Isle of Man\",\n                ISR: \"Israel\",\n                ITA: \"Italy\",\n                JAM: \"Jamaica\",\n                JPN: \"Japan\",\n                JEY: \"Jersey\",\n                JOR: \"Jordan\",\n                KAZ: \"Kazakhstan\",\n                KEN: \"Kenya\",\n                KIR: \"Kiribati\",\n                PRK: \"North Korea\",\n                KOR: \"South Korea\",\n                KWT: \"Kuwait\",\n                KGZ: \"Kyrgyzstan\",\n                LAO: \"Laos\",\n                LVA: \"Latvia\",\n                LBN: \"Lebanon\",\n                LSO: \"Lesotho\",\n                LBR: \"Liberia\",\n                LBY: \"Libya\",\n                LIE: \"Liechtenstein\",\n                LTU: \"Lithuania\",\n                LUX: \"Luxembourg\",\n                MKD: \"Macedonia\",\n                MDG: \"Madagascar\",\n                MWI: \"Malawi\",\n                MYS: \"Malaysia\",\n                MDV: \"Maldives\",\n                MLI: \"Mali\",\n                MLT: \"Malta\",\n                MHL: \"Marshall Islands\",\n                MTQ: \"Martinique\",\n                MRT: \"Mauritania\",\n                MUS: \"Mauritius\",\n                MYT: \"Mayotte\",\n                MEX: \"Mexico\",\n                FSM: \"Micronesia\",\n                MDA: \"Moldova\",\n                MCO: \"Monaco\",\n                MNG: \"Mongolia\",\n                MNE: \"Montenegro\",\n                MSR: \"Montserrat\",\n                MAR: \"Morocco\",\n                MOZ: \"Mozambique\",\n                MMR: \"Myanmar\",\n                NAM: \"Namibia\",\n                NRU: \"Nauru\",\n                NPL: \"Nepal\",\n                NLD: \"Netherlands\",\n                NCL: \"New Caledonia\",\n                NZL: \"New Zealand\",\n                NIC: \"Nicaragua\",\n                NER: \"Niger\",\n                NGA: \"Nigeria\",\n                NIU: \"Niue\",\n                NFK: \"Norfolk Island\",\n                MNP: \"Northern Mariana Islands\",\n                NOR: \"Norway\",\n                OMN: \"Oman\",\n                PAK: \"Pakistan\",\n                PLW: \"Palau\",\n                PSE: \"Palestine\",\n                PAN: \"Panama\",\n                PNG: \"Papua New Guinea\",\n                PRY: \"Paraguay\",\n                PER: \"Peru\",\n                PHL: \"Philippines\",\n                PCN: \"Pitcairn\",\n                POL: \"Poland\",\n                PRT: \"Portugal\",\n                PRI: \"Puerto Rico\",\n                QAT: \"Qatar\",\n                REU: \"Reunion\",\n                ROU: \"Romania\",\n                RUS: \"Russia\",\n                RWA: \"Rwanda\",\n                BLM: \"Saint-Barthélemy\",\n                SHN: \"Saint Helena\",\n                KNA: \"Saint Kitts and Nevis\",\n                LCA: \"Saint Lucia\",\n                MAF: \"Saint-Martin (French part)\",\n                SXM: \"Saint-Martin (Dutch part)\",\n                SPM: \"Saint Pierre and Miquelon\",\n                VCT: \"Saint Vincent and the Grenadines\",\n                WSM: \"Samoa\",\n                SMR: \"San Marino\",\n                STP: \"Sao Tome and Principe\",\n                SAU: \"Saudi Arabia\",\n                SEN: \"Senegal\",\n                SRB: \"Serbia\",\n                SYC: \"Seychelles\",\n                SLE: \"Sierra Leone\",\n                SGP: \"Singapore\",\n                SVK: \"Slovakia\",\n                SVN: \"Slovenia\",\n                SLB: \"Solomon Islands\",\n                SOM: \"Somalia\",\n                ZAF: \"South Africa\",\n                SGS: \"South Georgia and the South Sandwich Islands\",\n                SSD: \"South Sudan\",\n                ESP: \"Spain\",\n                LKA: \"Sri Lanka\",\n                SDN: \"Sudan\",\n                SUR: \"Suriname\",\n                SJM: \"Svalbard and Jan Mayen\",\n                SWZ: \"Eswatini\",\n                SWE: \"Sweden\",\n                CHE: \"Switzerland\",\n                SYR: \"Syria\",\n                TWN: \"Taiwan\",\n                TJK: \"Tajikistan\",\n                TZA: \"Tanzania\",\n                THA: \"Thailand\",\n                TLS: \"Timor-Leste\",\n                TGO: \"Togo\",\n                TKL: \"Tokelau\",\n                TON: \"Tonga\",\n                TTO: \"Trinidad and Tobago\",\n                TUN: \"Tunisia\",\n                TUR: \"Turkey\",\n                TKM: \"Turkmenistan\",\n                TCA: \"Turks and Caicos Islands\",\n                TUV: \"Tuvalu\",\n                UGA: \"Uganda\",\n                UKR: \"Ukraine\",\n                ARE: \"United Arab Emirates\",\n                GBR: \"United Kingdom\",\n                USA: \"United States\",\n                UMI: \"Minor Outlying Islands of the United States\",\n                URY: \"Uruguay\",\n                UZB: \"Uzbekistan\",\n                VUT: \"Vanuatu\",\n                VEN: \"Venezuela\",\n                VNM: \"Vietnam\",\n                VIR: \"US Virgin Islands\",\n                WLF: \"Wallis and Futuna\",\n                ESH: \"Western Sahara\",\n                YEM: \"Yemen\",\n                ZMB: \"Zambia\",\n                ZWE: \"Zimbabwe\"\n            }\n        },\n        CFAR_OFFER_BANNER: {\n            TITLE: \"Cancel your flight at any time, for any reason.\",\n            NO_OFFERS: \"No offer available\",\n            LOADING: \"Loading offers in progress...\",\n            BUTTON: {\n                SELECT: \"Select\"\n            },\n            COVERAGE_PERCENTAGE: \"{{ coverage }} Flight cost covered\",\n        },\n        CFAR_OFFER_BANNER_LARGE: {\n            TITLE: \"Cancel your flight at any time, for any reason.\",\n            NO_OFFERS: \"No offer available\",\n            LOADING: \"Loading offers in progress...\",\n            BUTTON: {\n                CONTINUE: \"Continue\"\n            },\n            COVERAGE_PERCENTAGE: \"{{ coverage }} Flight cost covered\",\n            NO_COVERAGE_OPTION: \"I do not want to purchase Cancel For Any Reason.\",\n            CHOOSE_COVERAGE: \"Please choose or decline Cancel For Any Reason.\"\n        },\n        CFAR_OFFER_DIALOG: {\n            TITLE: \"Cancel For Any Reason\",\n            POWERED_BY: \"Powered by Hopper\",\n            VIEW_DETAILS: \"View details\",\n            BUTTON: {\n                CANCEL: \"Continue Without Coverage\",\n                SUBMIT: \"Continue With {{ coverage }} Coverage\"\n            },\n            NO_OFFERS: \"No offer available\",\n            LOADING: \"Loading offers in progress...\",\n            TERMS_WARNING: \"If you don't add this, your ticket is non-refundable.\",\n            TERMS_LINK_TEXT: \"Terms & Conditions\"\n        },\n        CFAR_EXERCISE_DIALOG: {\n            TITLE: \"Cancel flight\",\n            SUBTITLE: \"Cancel For Any Reason\",\n            DEADLINE_SENTENCE_1: \"Cancel your booking free of charge until \",\n            DEADLINE_SENTENCE_2: \"You'll receive a confirmation email and the trip status will be updated.\",\n            TO: \" to \",\n            DEPARTURE: \"Departure:\",\n            ARRIVAL: \"Arrival:\",\n            FLIGHT: \"Flight:\",\n            PASSENGER: \"{{ nbPassenger }} passenger\",\n            PASSENGERS: \"{{ nbPassenger }} passengers\",\n            CHOOSE_REFUND_TYPE: \"Choose your refund type\",\n            HOPPER_REFUND: \"Hopper refund\",\n            AIRLINE_REFUND: \"Airline refund\",\n            METHOD: \"Method:\",\n            AMOUNT: \"Airline:\",\n            REFUND_METHOD: \"Refund method\",\n            BUTTON: {\n                CANCEL: \"Cancel\",\n                SUBMIT: \"Yes, cancel flight\"\n            },\n            NO_CONTRACT: \"No contract available\",\n            LOADING: \"Loading in progress...\"\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\nimport { environment } from 'src/environments/environment';\nimport { MetaReducer, StoreModule } from '@ngrx/store';\nimport { storeFreeze } from 'ngrx-store-freeze';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { reducers } from './shared/ngrx';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n\nconst metaReducers: MetaReducer<any>[] = !environment.production ? [storeFreeze] : [];\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    // Angular Modules\n    BrowserModule,\n    BrowserAnimationsModule,\n    \n    // Misc Modules\n    FlexLayoutModule,\n\n    // Custom Modules\n    SharedModule,\n    AppRoutingModule,\n    HighlightModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    StoreRouterConnectingModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        fullLibraryLoader: () => import('highlight.js'),\n        /*coreLibraryLoader: () => import('highlight.js/lib/core'),\n        languages: {\n          typescript: () => import('highlight.js/lib/languages/typescript'),\n          css: () => import('highlight.js/lib/languages/css'),\n          xml: () => import('highlight.js/lib/languages/xml')\n        }*/\n      }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterViewInit, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { OutputModel } from \"../../models\";\n\n@Component({\n  selector: \"app-outputs\",\n  templateUrl: \"./outputs.component.html\",\n  styleUrls: [\"./outputs.component.scss\"],\n})\nexport class OutputsComponent implements OnChanges, AfterViewInit {\n\n  public outputsDataSource: MatTableDataSource<OutputModel>;\n  public displayedOutputsColumns: string[];\n\n  @Input() outputs!: OutputModel[];\n\n  @ViewChild('outputSort') public outputSort!: MatSort;\n\n  constructor(\n    private _cdRef: ChangeDetectorRef\n  ) {\n    this.displayedOutputsColumns = ['name', 'description'];\n    this.outputsDataSource = new MatTableDataSource<OutputModel>([]);\n  }\n\n  // -----------------------------------------------\n  // Life Cycle Hooks\n  // -----------------------------------------------\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.outputs && changes.outputs.currentValue) {\n      this.outputsDataSource.data = this.outputs;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.outputsDataSource.sort = this.outputSort;\n\n    this._cdRef.detectChanges();\n  }\n}\n","<div fxLayout=\"row wrap\" fxLayoutAlign=\"start start\">\n\n    <h3>Outputs</h3>\n    \n    <table mat-table [dataSource]=\"outputsDataSource\" #outputSort=\"matSort\" matSort fxFlex=\"100\"\n        class=\"mat-elevation-z4 mb-16\">\n    \n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n            <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.description\"></td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedOutputsColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedOutputsColumns;\"></tr>\n    \n    </table>\n    \n</div>\n","import { ActionReducerMap } from \"@ngrx/store\";\nimport { globalReducer, GlobalState } from \"./global/global.reducer\";\nimport { routerReducer } from '@ngrx/router-store';\nimport { RouterState } from \"@angular/router\";\n\nexport interface AppState {\n    global: GlobalState;\n    router: RouterState;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n    global: globalReducer,\n    router: routerReducer\n};","// http://www.loc.gov/standards/iso639-2/php/code_list.php\n\nimport { locale as English } from './en';\nimport { locale as French } from './fr';\nimport { locale as Spanish } from './es';\nimport { locale as Chinese } from './zh';\n\nimport { I18n } from './i18n.interface';\n\n// Availables Languages\nexport const Locales: I18n[] = [ English, French, Spanish, Chinese ];","import { I18n } from \"./i18n.interface\";\n\nexport const locale: I18n = {\n    lang: 'fr',\n    data: {\n        COMMON: {\n            DATE_FORMAT: 'EEEE d MMMM y à h:mm:ss z',\n            DATE_FORMAT_SHORT: 'dd/MM/YYYY hh:mm',\n            COUNTRY: {\n                AFG: \"Afghanistan\",\n                ALA: \"Îles Åland\",\n                ALB: \"Albanie\",\n                DZA: \"Algérie\",\n                ASM: \"Samoa américaines\",\n                AND: \"Andorre\",\n                AGO: \"Angola\",\n                AIA: \"Anguilla\",\n                ATA: \"Antarctique\",\n                ATG: \"Antigua-et-Barbuda\",\n                ARG: \"Argentine\",\n                ARM: \"Arménie\",\n                ABW: \"Aruba\",\n                AUS: \"Australie\",\n                AUT: \"Autriche\",\n                AZE: \"Azerbaïdjan\",\n                BHS: \"Bahamas\",\n                BHR: \"Bahreïn\",\n                BGD: \"Bangladesh\",\n                BRB: \"Barbade\",\n                BLR: \"Biélorussie\",\n                BEL: \"Belgique\",\n                BLZ: \"Belize\",\n                BEN: \"Bénin\",\n                BMU: \"Bermudes\",\n                BTN: \"Bhoutan\",\n                BOL: \"Bolivie\",\n                BIH: \"Bosnie-Herzégovine\",\n                BWA: \"Botswana\",\n                BVT: \"Île Bouvet\",\n                BRA: \"Brésil\",\n                VGB: \"British Virgin Islands\",\n                IOT: \"Territoire britannique de l’Océan Indien\",\n                BRN: \"Brunei Darussalam\",\n                BGR: \"Bulgarie\",\n                BFA: \"Burkina Faso\",\n                BDI: \"Burundi\",\n                KHM: \"Cambodge\",\n                CMR: \"Cameroun\",\n                CAN: \"Canada\",\n                CPV: \"Cap-Vert\",\n                CYM: \"Iles Cayman\",\n                CAF: \"République centrafricaine\",\n                TCD: \"Tchad\",\n                CHL: \"Chili\",\n                CHN: \"Chine\",\n                HKG: \"Hong Kong\",\n                MAC: \"Macao\",\n                CXR: \"Île Christmas\",\n                CCK: \"Îles Cocos\",\n                COL: \"Colombie\",\n                COM: \"Comores\",\n                COG: \"République du Congo\",\n                COD: \"République démocratique du Congo\",\n                COK: \"Îles Cook\",\n                CRI: \"Costa Rica\",\n                CIV: \"Côte d’Ivoire\",\n                HRV: \"Croatie\",\n                CUB: \"Cuba\",\n                CYP: \"Chypre\",\n                CZE: \"République tchèque\",\n                DNK: \"Danemark\",\n                DJI: \"Djibouti\",\n                DMA: \"Dominique\",\n                DOM: \"République dominicaine\",\n                ECU: \"Équateur\",\n                EGY: \"Égypte\",\n                SLV: \"Salvador\",\n                GNQ: \"Guinée équatoriale\",\n                ERI: \"Érythrée\",\n                EST: \"Estonie\",\n                ETH: \"Éthiopie\",\n                FLK: \"Îles Falkland\",\n                FRO: \"Îles Féroé\",\n                FJI: \"Fidji\",\n                FIN: \"Finlande\",\n                FRA: \"France\",\n                GUF: \"Guyane française\",\n                PYF: \"Polynésie française\",\n                ATF: \"Terres australes et antarctiques françaises\",\n                GAB: \"Gabon\",\n                GMB: \"Gambie\",\n                GEO: \"Géorgie\",\n                DEU: \"Allemagne\",\n                GHA: \"Ghana\",\n                GIB: \"Gibraltar\",\n                GRC: \"Grèce\",\n                GRL: \"Groenland\",\n                GRD: \"Grenade\",\n                GLP: \"Guadeloupe\",\n                GUM: \"Guam\",\n                GTM: \"Guatemala\",\n                GGY: \"Guernesey\",\n                GIN: \"Guinée\",\n                GNB: \"Guinée-Bissau\",\n                GUY: \"Guyane\",\n                HTI: \"Haïti\",\n                HMD: \"Îles Heard-et-MacDonald\",\n                VAT: \"Saint-Siège (Vatican)\",\n                HND: \"Honduras\",\n                HUN: \"Hongrie\",\n                ISL: \"Islande\",\n                IND: \"Inde\",\n                IDN: \"Indonésie\",\n                IRN: \"Iran\",\n                IRQ: \"Irak\",\n                IRL: \"Irlande\",\n                IMN: \"Ile de Man\",\n                ISR: \"Israël\",\n                ITA: \"Italie\",\n                JAM: \"Jamaïque\",\n                JPN: \"Japon\",\n                JEY: \"Jersey\",\n                JOR: \"Jordanie\",\n                KAZ: \"Kazakhstan\",\n                KEN: \"Kenya\",\n                KIR: \"Kiribati\",\n                PRK: \"Corée du Nord\",\n                KOR: \"Corée du Sud\",\n                KWT: \"Koweït\",\n                KGZ: \"Kirghizistan\",\n                LAO: \"Laos\",\n                LVA: \"Lettonie\",\n                LBN: \"Liban\",\n                LSO: \"Lesotho\",\n                LBR: \"Libéria\",\n                LBY: \"Libye\",\n                LIE: \"Liechtenstein\",\n                LTU: \"Lituanie\",\n                LUX: \"Luxembourg\",\n                MKD: \"Macédoine\",\n                MDG: \"Madagascar\",\n                MWI: \"Malawi\",\n                MYS: \"Malaisie\",\n                MDV: \"Maldives\",\n                MLI: \"Mali\",\n                MLT: \"Malte\",\n                MHL: \"Îles Marshall\",\n                MTQ: \"Martinique\",\n                MRT: \"Mauritanie\",\n                MUS: \"Maurice\",\n                MYT: \"Mayotte\",\n                MEX: \"Mexique\",\n                FSM: \"Micronésie\",\n                MDA: \"Moldavie\",\n                MCO: \"Monaco\",\n                MNG: \"Mongolie\",\n                MNE: \"Monténégro\",\n                MSR: \"Montserrat\",\n                MAR: \"Maroc\",\n                MOZ: \"Mozambique\",\n                MMR: \"Myanmar\",\n                NAM: \"Namibie\",\n                NRU: \"Nauru\",\n                NPL: \"Népal\",\n                NLD: \"Pays-Bas\",\n                NCL: \"Nouvelle-Calédonie\",\n                NZL: \"Nouvelle-Zélande\",\n                NIC: \"Nicaragua\",\n                NER: \"Niger\",\n                NGA: \"Nigeria\",\n                NIU: \"Niue\",\n                NFK: \"Île Norfolk\",\n                MNP: \"Îles Mariannes du Nord\",\n                NOR: \"Norvège\",\n                OMN: \"Oman\",\n                PAK: \"Pakistan\",\n                PLW: \"Palau\",\n                PSE: \"Palestine\",\n                PAN: \"Panama\",\n                PNG: \"Papouasie-Nouvelle-Guinée\",\n                PRY: \"Paraguay\",\n                PER: \"Pérou\",\n                PHL: \"Philippines\",\n                PCN: \"Pitcairn\",\n                POL: \"Pologne\",\n                PRT: \"Portugal\",\n                PRI: \"Puerto Rico\",\n                QAT: \"Qatar\",\n                REU: \"Réunion\",\n                ROU: \"Roumanie\",\n                RUS: \"Russie\",\n                RWA: \"Rwanda\",\n                BLM: \"Saint-Barthélemy\",\n                SHN: \"Sainte-Hélène\",\n                KNA: \"Saint-Kitts-et-Nevis\",\n                LCA: \"Sainte-Lucie\",\n                MAF: \"Saint-Martin (partie française)\",\n                SXM: \"Saint-Martin (partie néerlandaise)\",\n                SPM: \"Saint-Pierre-et-Miquelon\",\n                VCT: \"Saint-Vincent-et-les Grenadines\",\n                WSM: \"Samoa\",\n                SMR: \"Saint-Marin\",\n                STP: \"Sao Tomé-et-Principe\",\n                SAU: \"Arabie Saoudite\",\n                SEN: \"Sénégal\",\n                SRB: \"Serbie\",\n                SYC: \"Seychelles\",\n                SLE: \"Sierra Leone\",\n                SGP: \"Singapour\",\n                SVK: \"Slovaquie\",\n                SVN: \"Slovénie\",\n                SLB: \"Îles Salomon\",\n                SOM: \"Somalie\",\n                ZAF: \"Afrique du Sud\",\n                SGS: \"Géorgie du Sud et les îles Sandwich du Sud\",\n                SSD: \"Sud-Soudan\",\n                ESP: \"Espagne\",\n                LKA: \"Sri Lanka\",\n                SDN: \"Soudan\",\n                SUR: \"Suriname\",\n                SJM: \"Svalbard et Jan Mayen\",\n                SWZ: \"Eswatini\",\n                SWE: \"Suède\",\n                CHE: \"Suisse\",\n                SYR: \"Syrie\",\n                TWN: \"Taiwan\",\n                TJK: \"Tadjikistan\",\n                TZA: \"Tanzanie\",\n                THA: \"Thaïlande\",\n                TLS: \"Timor-Leste\",\n                TGO: \"Togo\",\n                TKL: \"Tokelau\",\n                TON: \"Tonga\",\n                TTO: \"Trinité-et-Tobago\",\n                TUN: \"Tunisie\",\n                TUR: \"Turquie\",\n                TKM: \"Turkménistan\",\n                TCA: \"Îles Turques-et-Caïques\",\n                TUV: \"Tuvalu\",\n                UGA: \"Ouganda\",\n                UKR: \"Ukraine\",\n                ARE: \"Émirats Arabes Unis\",\n                GBR: \"Royaume-Uni\",\n                USA: \"États-Unis\",\n                UMI: \"Îles mineures éloignées des États-Unis\",\n                URY: \"Uruguay\",\n                UZB: \"Ouzbékistan\",\n                VUT: \"Vanuatu\",\n                VEN: \"Venezuela\",\n                VNM: \"Viêt Nam\",\n                VIR: \"Îles Vierges américaines\",\n                WLF: \"Wallis-et-Futuna\",\n                ESH: \"Sahara occidental\",\n                YEM: \"Yémen\",\n                ZMB: \"Zambie\",\n                ZWE: \"Zimbabwe\"\n            }\n        },\n        CFAR_OFFER_BANNER: {\n            TITLE: \"Annulez votre vol à tout moment, pour quelque raison que ce soit.\",\n            NO_OFFERS: \"Aucune offre disponible\",\n            LOADING: \"Chargement des offres en cours...\",\n            BUTTON: {\n                SELECT: \"Sélectionner\"\n            },\n            COVERAGE_PERCENTAGE: \"{{ coverage }} des frais de vol couverts\",\n        },\n        CFAR_OFFER_BANNER_LARGE: {\n            TITLE: \"Annulez votre vol à tout moment, pour quelque raison que ce soit.\",\n            NO_OFFERS: \"Aucune offre disponible\",\n            LOADING: \"Chargement des offres en cours...\",\n            BUTTON: {\n                CONTINUE: \"Continuer\"\n            },\n            COVERAGE_PERCENTAGE: \"{{ coverage }} des frais de vol couverts\",\n            NO_COVERAGE_OPTION: \"Je ne veux pas ajouter l'option 'Annuler pour une raison quelconque'.\",\n            CHOOSE_COVERAGE: \"Veuillez choisir ou refuser 'Annuler pour une raison quelconque'.\"\n        },\n        CFAR_OFFER_DIALOG: {\n            TITLE: \"Annuler pour une raison quelconque\",\n            POWERED_BY: \"Propulsé par Hopper\",\n            VIEW_DETAILS: \"Voir détails\",\n            BUTTON: {\n                CANCEL: \"Continuer sans couverture\",\n                SUBMIT: \"Continuer avec {{ coverage }} de couverture\"\n            },\n            NO_OFFERS: \"Aucune offre disponible\",\n            LOADING: \"Chargement des offres en cours...\",\n            TERMS_WARNING: \"Si vous ne l'ajoutez pas, votre billet ne sera pas remboursable.\",\n            TERMS_LINK_TEXT: \"Conditions d'utilisation\"\n        },\n        CFAR_EXERCISE_DIALOG: {\n            TITLE: \"Annuler le vol\",\n            SUBTITLE: \"Annuler pour une raison quelconque\",\n            DEADLINE_SENTENCE_1: \"Annulez votre réservation sans frais jusqu'au \",\n            DEADLINE_SENTENCE_2: \"Vous recevrez un e-mail de confirmation et le statut du voyage sera mis à jour.\",\n            TO: \" vers \",\n            DEPARTURE: \"Départ :\",\n            ARRIVAL: \"Arrivée :\",\n            FLIGHT: \"Vol :\",\n            PASSENGER: \"{{ nbPassenger }} passager\",\n            PASSENGERS: \"{{ nbPassenger }} passagers\",\n            CHOOSE_REFUND_TYPE: \"Choisissez votre type de remboursement\",\n            HOPPER_REFUND: \"Remboursement Hopper\",\n            AIRLINE_REFUND: \"Remboursement de la compagnie aérienne\",\n            METHOD: \"Méthode :\",\n            AMOUNT: \"Montant :\",\n            REFUND_METHOD: \"Mode de remboursement\",\n            BUTTON: {\n                CANCEL: \"Annuler\",\n                SUBMIT: \"Oui, annuler le vol\"\n            },\n            NO_CONTRACT: \"Aucun contrat disponible\",\n            LOADING: \"Chargement en cours...\"\n        }\n    }\n}","import { getSelectors, RouterReducerState } from '@ngrx/router-store';\nimport { createFeatureSelector } from '@ngrx/store';\n \nconst selectRouterState = createFeatureSelector<RouterReducerState>('router');\n\nexport const {\n  selectCurrentRoute, // select the current route\n  selectFragment, // select the current route fragment\n  selectQueryParams, // select the current route query params\n  selectQueryParam, // factory function to select a query param\n  selectRouteParams, // select the current route params\n  selectRouteParam, // factory function to select a route param\n  selectRouteData, // select the current route data\n  selectUrl, // select the current url\n} = getSelectors(selectRouterState);","import { Action, createReducer, on } from \"@ngrx/store\";\nimport * as globalActions from './global.actions';\n\nexport interface GlobalState {\n    currentLang: string;\n    currentTheme: string;\n}\n\nconst initialState: GlobalState = {\n    currentLang: 'en',\n    currentTheme: 'theme-light-hopper'\n};\n\nconst reducer = createReducer(\n    initialState,\n    on(globalActions.setCurrentLang, (state, { currentLang }) => ({ ...state, currentLang: currentLang })),\n    on(globalActions.setCurrentTheme, (state, { currentTheme }) => ({ ...state, currentTheme: currentTheme }))\n);\n\nexport function globalReducer(state: GlobalState | undefined, action: Action): GlobalState {\n    return reducer(state, action);\n}","import { AfterViewInit, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { InputModel } from \"../../models\";\n\n@Component({\n  selector: \"app-inputs\",\n  templateUrl: \"./inputs.component.html\",\n  styleUrls: [\"./inputs.component.scss\"],\n})\nexport class InputsComponent implements OnChanges, AfterViewInit {\n\n  public inputsDataSource: MatTableDataSource<InputModel>;\n  public displayedInputsColumns: string[];\n\n  @Input() inputs!: InputModel[];\n\n  @ViewChild('inputSort') public inputSort!: MatSort;\n\n  constructor(\n    private _cdRef: ChangeDetectorRef\n  ) {\n    this.displayedInputsColumns = ['name', 'description', 'required'];\n    this.inputsDataSource = new MatTableDataSource<InputModel>([]);\n  }\n\n  // -----------------------------------------------\n  // Life Cycle Hooks\n  // -----------------------------------------------\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.inputs && changes.inputs.currentValue) {\n      this.inputsDataSource.data = this.inputs;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.inputsDataSource.sort = this.inputSort;\n\n    this._cdRef.detectChanges();\n  }\n}\n","<div fxLayout=\"row wrap\" fxLayoutAlign=\"start start\">\n\n    <h3>Inputs</h3>\n    \n    <table mat-table [dataSource]=\"inputsDataSource\" #inputSort=\"matSort\" matSort fxFlex=\"100\"\n        class=\"mat-elevation-z4 mb-16\">\n    \n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n            <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.description\"></td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"required\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Required</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-icon *ngIf=\"element.required\" class=\"required-icon\">done</mat-icon>\n                <mat-icon *ngIf=\"!element.required\" class=\"optional-icon\">close</mat-icon>\n            </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedInputsColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedInputsColumns;\"></tr>\n    \n    </table>\n    \n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-not-found-page\",\n  templateUrl: \"./not-found.component.html\",\n  styleUrls: [\"./not-found.component.scss\"],\n})\nexport class NotFoundPageComponent {}\n","<div class=\"p-32\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <h1>Page Not Found</h1>\n        <p>We're sorry. The page you are looking for cannot be found.</p>\n        \n        <a routerLink=\"/\" mat-raised-button color=\"primary\">\n            <span class=\"mat-button-wrapper\">Go Home</span>\n        </a>\n    </div> \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundPageComponent } from './pages/not-found/not-found.component';\nimport { LayoutComponent } from './shared/components/layout/layout.component';\n\nconst routes: Routes = [\n  {\n    path: 'guides',\n    component: LayoutComponent,\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\n  },\n  { path: '', pathMatch: 'full', redirectTo: '/guides' },\n  { path: '**', component: NotFoundPageComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { useHash: true })\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}